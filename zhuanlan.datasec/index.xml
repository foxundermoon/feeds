<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>数据安全、隐私保护与密码学技术专栏</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/</link>
<description>本专栏主要发布如下内容： 1. 国际黑帽子大会（… 本专栏主要发布如下内容： 1. 国际黑帽子大会（Black Hat），国际黑客大会（Def Con）上的演讲内容分析； 2. 密码学、网络安全相关的源代码分析； 3. 密码学、网络安全相关的知识介绍； 4. 业内可公开的安全架构思想； 5. 其他与信息安全相关的内容或转载文章； 欢迎投稿，欢迎指出任何错误~ 希望我们能够一起为普及、分享、研究信息安全相关理论和知识贡献自己的一份力量！</description>
<language>zh-cn</language>
<lastBuildDate>Tue, 01 Jan 2019 01:45:00 +0800</lastBuildDate>
<item>
<title>工作量证明区块链系统的安全性与可用性讨论</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2018-11-13-49494558.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/49494558&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-d1052fe2de5f4f35365976c6851db443_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;&lt;b&gt;引言&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;现在工作是越来越繁忙了，听译视频的频率降得越来越低。为了尽可能跟上最新的研究进展，还是有必要坚持听译的。今天为大家带来的是来自密码学顶级会议CCS 2016的演讲视频《工作量证明区块链系统的安全性与可用性讨论》（On the Security and Performance of Proof ow Work Blockchains）。&lt;/p&gt;&lt;p&gt;如果对比特币和区块链技术有深入了解，就会发现比特币和区块链技术更多地涉及到了经济学和博弈论的相关知识。我们来看几个简单的例子：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;比特币可以遭受51%算力攻击（51% Attack）。然而，如果攻击者真的发起51%攻击，虽然它可以篡改交易信息、获得大量的比特币，但这也要付出大量的算力成本。更重要的是，比特币账本的篡改很可能会导致人们对比特币系统丧失信心，使得比特币价格大跌，反而让攻击者遭受更大的损失。因此，虽然51%攻击理论上是可行的，但由于比特币已经牵涉到巨大的算力投入，实施51%攻击从经济角度讲是一件吃力不讨好的事情。&lt;/li&gt;&lt;li&gt;公链系统还可以遭受自私挖矿攻击（Selfish Mining Attack）。这是Eyal和Sirer在密码学著名会议Financial Cryptography 2014上提出的一种攻击方法。其基本思想是：攻击者在成功挖到一个区块后可以暂时不公开此区块，而是默默地在这个区块上挖下一个区块。当其它诚实节点挖到了这个区块后，攻击者再把自己挖到的这个区块公开出去。这样做的好处在于，攻击者由于先挖到了区块，他可以优先在这个区块之后继续挖矿，而诚实节点会把算力浪费在已经有下一个区块的区块上。这么做看似可行，但攻击者也有很大的风险：如果攻击者区块发布的速度不够快，全网可能会很快接受诚实节点挖到的区块，攻击者就会蒙受巨大的损失，还不如早早公开挖到的区块为妙。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;为此，衡量区块链是否安全，不应该只从密码学或者协议的角度去分析，更应该把博弈论的思想引入其中，通过衡量攻击者的行为是否对自己最有利来判断区块链系统的安全性。而这正是本次视频的核心思想。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;视频翻译&lt;/b&gt;&lt;/h2&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic2.zhimg.com/80/v2-c64a120bcab8cb9d6fc8db0e11c2e771_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1045465487869313024&quot; data-name=&quot;第一部分：定义、核心思想&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1045465487869313024&quot;&gt;&lt;/video&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic4.zhimg.com/80/v2-62875d2219f934f2740d21951b5f9a3b_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1045465605104279552&quot; data-name=&quot;第二部分：主要贡献、主要结论&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1045465605104279552&quot;&gt;&lt;/video&gt;&lt;h2&gt;&lt;b&gt;内容简介&lt;/b&gt;&lt;/h2&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a53d783842bf4f45722aa3359fe99993_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-a53d783842bf4f45722aa3359fe99993&quot; data-watermark-src=&quot;v2-1a46bc951e30ec61c830619e9cddfa1e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;要说区块链系统最大的问题就是交易吞吐量不足了。一般用系统所能支持的每秒交易量（Transactions per Second，TPS）衡量交易吞吐量。而影响交易吞吐量的核心参数有两个：（1）区块生成时间（Block Generation Time），即平均每隔多长时间可以生成一个区块；（2）区块大小（Block Size），侧面表示每隔区块所能容纳的交易数量。例如，比特币的区块生成时间为10分钟，区块大小为1MB，而比特币的每个交易所需要消耗的存储量大约为0.25KB，因此比特币的TPS为1000KB/0.25KB/60s=6.67。以太坊的区块生成时间大约为15秒，虽然以太坊没有规定每个区块的大小限制，但是由于区块越大，区块在网络中的传播速度越慢，因此以太坊实际的TPS约为20。从定性角度讲，我们可以很直观地得到下面的结论：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;区块生成时间越短，出块速度越快，交易速度也就越快&lt;/li&gt;&lt;li&gt;区块大小越大，每个区块所能容纳的交易量越大，交易速度也会变快&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1e0060514cb3821e92acce2cb2d7519c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-1e0060514cb3821e92acce2cb2d7519c&quot; data-watermark-src=&quot;v2-fd29f89e43c5c0b69546651f3d33466d&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;如果区块链系统的点对点（Peer-to-Peer，P2P）网络没有网络延迟，所有区块都可以瞬间同步给全网所有节点，我们就可以把区块生成时间设置得足够小，区块大小设置得足够大，使得区块链系统支持任意高的交易吞吐量。但是，由于网络延迟的存在，全网所有节点并不总能很快地获得最新的区块信息，这就会导致竞争区块的出现。当全网挖出了两个区块时，两个区块就需要根据规则进行竞争，最终只有一个区块会胜出，而另一个区块将被废弃，成为废区块（Stale Block）此区块关联的算力也就被浪费了。&lt;/p&gt;&lt;p&gt;不仅是算力浪费的问题，竞争区块是区块链出现各种共识协议攻击的核心原因。正是由于竞争区块的存在，只要攻击者可以在篡改交易时确保被篡改交易所关联的区块可以竞争成为合法区块，攻击就可以成功。这就引入了区块链中针对共识协议的经典攻击：自私挖矿攻击，双花攻击（Double Spending Attack）。&lt;/p&gt;&lt;p&gt;直观来看，区块成为废区块的比率，即废块率（Stale Block Rate）越高，区块链遭受攻击的概率也就越高。实际测试表明，比特币的废块率约为0.4%（感谢比特币极慢的出块时间和严格的区块大小限制）；以太坊的废块率约为6.8%（但由于以太坊中有叔区块的概念，因此虽然区块率被废弃，但关联的算力仍然起作用）；狗币的废块率是0.6%，莱特币的废块率是0.3%。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e8b52cc661e510ebbafbc43ef5a14978_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-e8b52cc661e510ebbafbc43ef5a14978&quot; data-watermark-src=&quot;v2-ca07af6b5dac92bccd750be6d6893acb&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;有了这样的结论，区块链系统设计者们就要做出权衡了：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;提高区块生成时间、增加区块大小，则交易吞吐量会显著提高，但区块链的安全性就会降低。&lt;/li&gt;&lt;li&gt;反之，降低区块生成时间、减小区块大小，交易吞吐量就会降低，但区块链安全性会提高。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们要解决的问题是：不同的区块链系统会设置不同的参数，参与节点数量、算力分布、出块时间、区块大小、乃至攻击者所拥有的算力都不一样，如何横向对比各个区块链系统的安全性，从而选择最优的参数呢？&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4649ef2b4090c05bcbdc42d2a30f454f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-4649ef2b4090c05bcbdc42d2a30f454f&quot; data-watermark-src=&quot;v2-d0cb5878c8b58a5669b43ba167d16fe8&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;本视频对应的论文的主要贡献为：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;提出了一种量化衡量指标，可以客观分析工作量证明区块链系统在抵御双花攻击、自私挖矿攻击方面的能力。&lt;/li&gt;&lt;li&gt;设计并实现了一个区块链仿真器，可以仿真区块链系统的各个参数，得到对应的废块率，从而帮助衡量区块链系统的安全性。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这一工作可以得到很多有意思的结果，例如：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;可以把比特币的出块时间从10分钟提高到1分钟，使得比特币的TPS从6.67提高到66.7，同时不会牺牲比特币的安全性。&lt;/li&gt;&lt;li&gt;37个以太坊的区块确认量等价于6个比特币的区块确认量。考虑到以太坊的出块时间为15秒，而比特币的出块时间为10分钟，因此当交易被以太坊区块确认后，只需等待大约10分钟，其交易的安全性就等价于比特币等待60分钟的安全性。&lt;/li&gt;&lt;li&gt;自私挖矿攻击不一定是一个理智行为。在特定的场景下，与其实施自私挖矿，不如诚实挖矿的收益大。&lt;/li&gt;&lt;li&gt;区块挖矿回报率越高（用代币所具有的实际价格衡量），则区块链系统本身的安全性也会越高。&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bc328c0c439adaee5a7c403e562b68a6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-bc328c0c439adaee5a7c403e562b68a6&quot; data-watermark-src=&quot;v2-02b47c974c93e35cd7f49f0d0c69e00b&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;系统主要有2部分组成：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;区块链仿真器，可以配置相应的参数实现区块链系统的仿真，得到废块率。支持设置的参数有：区块生成时间、各节点算力分布情况、区块大小、各节点的地理位置（即节点之间的网络延时）、节点维护的TCP连接数量（即各节点的网络吞吐量）、区块传播协议等。&lt;/li&gt;&lt;li&gt;安全模型，可以得到相应的安全量化指标。支持设置的参数有：攻击者所拥有的算力、攻击者的网络连接情况、攻击者分隔全网算力的能力（即日蚀攻击，参见我之间分享的视频：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/42446193&quot;&gt;比特币点对点网络中的日蚀攻击&lt;/a&gt;）、全网默认交易的确认次数。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;通过对比量化指标，我们就能横向对比各个区块链系统的安全性了。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f815477132fe0f01f8fa85f76dd57d83_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-f815477132fe0f01f8fa85f76dd57d83&quot; data-watermark-src=&quot;v2-8b2f70fa5bc7a06389ae6a07ca0b70a6&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;论文作者们将区块链仿真器开源，感兴趣的知友们可以下载下来试一试。下载链接在上图中，不过应知友们的要求，我还是把链接写在文章里面的好：&lt;a href=&quot;http://arthurgervais.github.io/Bitcoin-Simulator/index.html&quot;&gt;Bitcoin Simulator&lt;/a&gt;。&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2018-11-13-49494558</guid>
<pubDate>Tue, 13 Nov 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>数字货币的30年发展史</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2018-09-19-44868083.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44868083&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-fdce2228af36e630e223f002513c11f8_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;&lt;b&gt;引言&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;这周处于无业游民状态，刚好可以为知友们带来新的数据安全技术视频了。今天为大家带来的是一个邀请演讲。著名密码学家Matthew Green接受了国际旗舰密码学会议EUROCRYPT 2018组委会的邀请，在会议上给出一个题目为《数字货币的30年发展史——从电子现金到区块链》（Thirty Years of Digital Currency: From DigiCash to the Blockchain）的演讲。&lt;/p&gt;&lt;p&gt;Matthew Green是何方神圣？如果熟悉数字货币的知友们可能会知道，Matthew Green是两个著名密码货币“零币”（ZCoin）和“零现金”（ZCash）的提出者，也是零现金项目的科学家之一。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-cdfc6d20be136b11a5a0d005ca027c15_r.jpg&quot; data-caption=&quot;从ZCoin的官方网站上可以看到，Matthew Green是ZCoin理论论文的作者之一&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1658&quot; data-rawheight=&quot;949&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-cdfc6d20be136b11a5a0d005ca027c15&quot; data-watermark-src=&quot;v2-6d11e4d3baf903b354e0fb4b30728576&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-151df921e6380f016135be60e411e5ee_r.jpg&quot; data-caption=&quot;从ZCash的官方网站上可以看到，Matthew Green是ZCash团队的科学家&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1660&quot; data-rawheight=&quot;951&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-151df921e6380f016135be60e411e5ee&quot; data-watermark-src=&quot;v2-f7fab90673c2b717a4ebff472304785c&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;如此重量级嘉宾的演讲，我们自然需要好好学习一下。遗憾的是，Green在演讲中给出的很多观点都是负面的。不过，如果你是一个密码学、安全协议的研究者，在深入了解区块链相关技术后，可能你也会隐隐约约地看到区块链辉煌的背后所隐藏的一些危机。这次，我也希望借着Green的这次邀请演讲，呼吁知友们冷静看待区块链技术。区块链虽好，但它不是万能的。&lt;/p&gt;&lt;p&gt;此次听译工作也是困难重重。观看视频就会知道，视频的音频原声质量比较低，经常出现爆音、电流音等情况，很影响正常的听译工作。因此，如果视频中有听译错误的地方，还请知友们见谅。本次视频的听译非常感谢@橙皮书（专栏链接：&lt;a href=&quot;https://zhuanlan.zhihu.com/orangepaper&quot;&gt;橙皮书&lt;/a&gt;）团队的大力支持。上一篇专栏文章中，我曾提到“Nervos创始人Jan的采访是由橙皮书团队完成并原创的”。此次@橙皮书团队为视频的听写和校对工作带来了较大的帮助，特为团队点赞！&lt;/p&gt;&lt;p&gt;Matthew Green的演讲视频内容比较多也比较杂，因此这篇专栏文章就不对视频进行简单的介绍了（因为简单的介绍就意味着要把视频完全复述一遍）。如果没有时间观看视频，感兴趣的知友可以直接查看Matthew Green的邀请视频演讲PPT，链接为：&lt;a href=&quot;https://eurocrypt.iacr.org/2018/Slides/Wednesday/InvitedTalk.pdf&quot;&gt;https://eurocrypt.iacr.org/2018/Slides/Wednesday/InvitedTalk.pdf&lt;/a&gt;。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;相关信息&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;演讲视频链接：&lt;a href=&quot;https://www.youtube.com/watch?v=FaakN6MK6mc&quot;&gt;https://www.youtube.com/watch?v=FaakN6MK6mc&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;演讲PPT链接：&lt;a href=&quot;https://eurocrypt.iacr.org/2018/Slides/Wednesday/InvitedTalk.pdf&quot;&gt;https://eurocrypt.iacr.org/2018/Slides/Wednesday/InvitedTalk.pdf&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;视频翻译&lt;/b&gt;&lt;/h2&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic3.zhimg.com/80/v2-11e35870812561f76d9be8675e57b1e6_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1025547721662492672&quot; data-name=&quot;数字货币30年发展史——第一部分&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1025547721662492672&quot;&gt;&lt;/video&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic3.zhimg.com/80/v2-d830d030f4d3c6735161e6c7aad2165e_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1025549108853014528&quot; data-name=&quot;数字货币30年发展史——第二部分&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1025549108853014528&quot;&gt;&lt;/video&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic1.zhimg.com/80/v2-5b02c647648a9bbdff01ad8aa9447ca4_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1025549946677784576&quot; data-name=&quot;数字货币30年发展史——第三部分&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1025549946677784576&quot;&gt;&lt;/video&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic2.zhimg.com/80/v2-5326fad15d1c6d9a3964252bee605bcd_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1025550254216687616&quot; data-name=&quot;数字货币30年发展史——第四部分&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1025550254216687616&quot;&gt;&lt;/video&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2018-09-19-44868083</guid>
<pubDate>Wed, 19 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>Ouroboros：可证明安全的权益证明协议</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2018-08-27-43005995.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/43005995&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4b90b274ea0062a31690c5d092b90f1d_b.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;&lt;b&gt;引言&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今天给各位知友带来另外一个存货视频《Ourboros：可证明安全的权益证明协议》。替代工作量证明机制（Proof of Work，PoW）的权益证明机制（Proof of Stake，PoS）已经成为了区块链领域的一个重点研究方向。与PoW相比，PoS具有下述优势（&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQs&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Proof of Stake FAQs&lt;/a&gt;）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;不需要消耗大量的电力来保证区块链的安全性。&lt;/li&gt;&lt;li&gt;由于不需要大量电力消耗，参与方不需要得到更多的代币奖励即可参与到网络中。&lt;/li&gt;&lt;li&gt;权益证明的使用可以进一步在区块链中引入博弈论机制，从而形成市场经济体制。&lt;/li&gt;&lt;li&gt;降低系统中心化的风险。&lt;/li&gt;&lt;li&gt;有能力应用经济学惩罚措施使得51%的攻击代价变得更高。&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;以太坊权益证明机制优势的原始英文描述如下，供参考：&lt;br&gt;1. &lt;b&gt;No need to consume large quantities of electricity&lt;/b&gt; in order to secure a blockchain (e.g. it&#39;s estimated that both Bitcoin and Ethereum burn over $1 million worth of electricity and hardware costs per day as part of their consensus mechanism).&lt;br&gt;2. Because of the lack of high electricity consumption, there is &lt;b&gt;not as much need to issue as many new coins&lt;/b&gt; in order to motivate participants to keep participating in the network. It may theoretically even be possible to have &lt;i&gt;negative&lt;/i&gt; net issuance, where a portion of transaction fees is &quot;burned&quot; and so the supply goes down over time.&lt;br&gt;3. Proof of stake opens the door to a wider array of techniques that use game-theoretic mechanism design in order to better &lt;b&gt;discourage centralized cartels&lt;/b&gt; from forming and, if they do form, from acting in ways that are harmful to the network (e.g. like &lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.cs.cornell.edu/%7Eie53/publications/btcProcFC.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;selfish mining&lt;/a&gt; in proof of work).&lt;br&gt;4. &lt;b&gt;Reduced centralization risks&lt;/b&gt;, as economies of scale are much less of an issue. $10 million of coins will get you exactly 10 times higher returns than $1 million of coins, without any additional disproportionate gains because at the higher level you can afford better mass-production equipment, which is an advantage for Proof-of-Work.&lt;br&gt;5. Ability to use economic penalties to &lt;b&gt;make various forms of 51% attacks vastly more expensive&lt;/b&gt;to carry out than proof of work - to paraphrase Vlad Zamfir, &quot;it&#39;s as though your ASIC farm burned down if you participated in a 51% attack&quot;.&lt;/blockquote&gt;&lt;p&gt;PoS的这些优势使得著名区块链平台以太坊（Ethereum）都宣布要用PoS代替PoW，并且已经提出了两种替代方案：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;综合使用PoS和PoW的协议：&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//github.com/ethereum/research/blob/master/papers/casper-basics/casper_basics.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Casper the Friendly Finality Gadget&lt;/a&gt;，由Vitalik Buterin（以太坊创始人）和Virgil Griffith提出。&lt;/li&gt;&lt;li&gt;不应用PoW，完全的PoS协议：&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//github.com/ethereum/research/blob/master/papers/CasperTFG/CasperTFG.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Casper the Firendly GHOST: Correct by Construction&lt;/a&gt;，由Vlad Zamfir提出。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是，如何构造一个可证明安全的PoS机制是区块链社区、也是学术界研究的一个重点方向。在密码学最顶级的会议CRYPTO 2017上，Aggelos Kiayias、Alexander Russell、Bernardo David、Roman Oliynykow给出了一个证明安全的PoS协议：Ouroboros。而本次带来的视频，就是论文作者之一Aggelos Kiayias在CRYPTO 2016会议上的论文演讲视频。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;相关信息&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;论文下载链接：&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//eprint.iacr.org/2016/889.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;eprint.iacr.org/2016/88&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;9.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;。ePrint是国际密码学研究协会（International Association for Cryptologic Research，IACR）设置的一个密码学开放论文获取平台，有点像著名的ArXiv。现在密码学顶级会议的论文作者都会在ePrint上公开会议论文的完整版本。如果对密码学感兴趣，可以时常查看ePrint上的论文，可以有很多很不错的发现。&lt;/li&gt;&lt;li&gt;演讲视频连接：&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.youtube.com/watch%3Fv%3DfBKCbhX-dXI%26t%3D983s&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://www.&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;youtube.com/watch?&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;v=fBKCbhX-dXI&amp;amp;t=983s&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;。现在IACR已经在YouTube上开创了频道。最近IACR放出了著名密码学家Matthew Green在著名密码学会议EUROCRYPT 2018上的演讲《数字货币的三十年：从电子现金到区块链》（Thirty Years of Digital Currency: From Digicash to the Blockchain）。后面有时间的话我也希望能和知友们分享这个视频，不过这个视频听译起来难度有点大…&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;视频翻译&lt;/b&gt;&lt;/h2&gt;&lt;a class=&quot;video-box&quot; href=&quot;http://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1017192966431105024&quot; target=&quot;_blank&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-name=&quot;第一部分：方案描述&quot; data-poster=&quot;https://pic2.zhimg.com/80/v2-7037591c6b16311348e48172195ff499_b.jpg&quot; data-lens-id=&quot;1017192966431105024&quot;&gt;              &lt;img class=&quot;thumbnail&quot; src=&quot;https://pic2.zhimg.com/80/v2-7037591c6b16311348e48172195ff499_b.jpg&quot;&gt;              &lt;span class=&quot;content&quot;&gt;                &lt;span class=&quot;title&quot;&gt;第一部分：方案描述&lt;span class=&quot;z-ico-extern-gray&quot;&gt;&lt;/span&gt;&lt;span class=&quot;z-ico-extern-blue&quot;&gt;&lt;/span&gt;&lt;/span&gt;                &lt;span class=&quot;url&quot;&gt;&lt;span class=&quot;z-ico-video&quot;&gt;&lt;/span&gt;https://www.zhihu.com/video/1017192966431105024&lt;/span&gt;              &lt;/span&gt;            &lt;/a&gt;            &lt;a class=&quot;video-box&quot; href=&quot;http://link.zhihu.com/?target=https%3A//www.zhihu.com/video/1017193045200150528&quot; target=&quot;_blank&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-name=&quot;第二部分：安全证明&quot; data-poster=&quot;https://pic2.zhimg.com/80/v2-88fa6f8b9b51b6abe441c4b11d7618ad_b.jpg&quot; data-lens-id=&quot;1017193045200150528&quot;&gt;              &lt;img class=&quot;thumbnail&quot; src=&quot;https://pic2.zhimg.com/80/v2-88fa6f8b9b51b6abe441c4b11d7618ad_b.jpg&quot;&gt;              &lt;span class=&quot;content&quot;&gt;                &lt;span class=&quot;title&quot;&gt;第二部分：安全证明&lt;span class=&quot;z-ico-extern-gray&quot;&gt;&lt;/span&gt;&lt;span class=&quot;z-ico-extern-blue&quot;&gt;&lt;/span&gt;&lt;/span&gt;                &lt;span class=&quot;url&quot;&gt;&lt;span class=&quot;z-ico-video&quot;&gt;&lt;/span&gt;https://www.zhihu.com/video/1017193045200150528&lt;/span&gt;              &lt;/span&gt;            &lt;/a&gt;            &lt;h2&gt;&lt;b&gt;视频介绍&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;区块链技术所要解决的核心问题是：在没有可信第三方的条件下，互不信任的参与方维护一个一致的、公开可验证的账本（Ledger）。&lt;/p&gt;&lt;p&gt;区块链技术通过两种思想来实现这一目标：区块链数据结构、共识协议。如果对数据结构本身有一定的了解，相信各位知友可以认识到，区块链这种账本记录方式的核心就是一种链表数据结构。链表的节点就是所谓的区块（Block），而链表的指针由内存中的地址替换为前一个区块的哈希值。这种特殊的链表结构使得区块链本身具有了公开可验证性，即存在一种高效的验证方法，使得任意一个参与方都可以验证其它参与方是否按照既定的规则存储交易信息。&lt;/p&gt;&lt;p&gt;区块链数据结构本身只能实现账本的公开可验证性。为了实现账本的一致性，还要在区块链数据结构上应用一个协议，使得只要大多数参与方都遵守这一协议，则大多数参与方都可以存储并维护一个相同的区块链数据结构。这个协议就是所谓的共识协议（Consensus Protocol）。&lt;/p&gt;&lt;p&gt;但是，如何从数学角度、或者用一种模型描述区块链技术要实现的目标呢？为了让技术具有较好的健壮性，我们总需要应用一个形式化的模型来描述技术要达到的目标、达到目标所关联的指标。如果没有模型描述，我们也就没办法用非常科学的手段实现区块链技术，当然也就没有所谓的可证明安全了。实际上，演讲者早在2014年就给出了区块链所要实现的核心目标：健壮的交易账本。后续研究者进一步扩展了这一定义。如果想深入理解区块链技术，建议感兴趣的知友阅读图中给出的相关论文，具体论文名称如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;GKL15：The Bitcoin Backbone Protocol: Analysis and Applications. EUROCRYPT 2015, &lt;a href=&quot;http://link.zhihu.com/?target=https%3A//eprint.iacr.org/2014/765.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;eprint.iacr.org/2014/76&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;5.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;KP15：Speed-Security Tradeos in Blockchain Protocols. &lt;a href=&quot;http://link.zhihu.com/?target=https%3A//eprint.iacr.org/2015/1019.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;eprint.iacr.org/2015/10&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;19.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;PSS17：Analysis of the Blockchain Protocol in Asynchronous Networks. EUROCRYPT 2017, &lt;a href=&quot;http://link.zhihu.com/?target=https%3A//eprint.iacr.org/2016/454.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;eprint.iacr.org/2016/45&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;4.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;BMTZ17：Bitcoin as a Transaction Ledger: A Composable Treatment. CRYPTO 2017, &lt;a href=&quot;http://link.zhihu.com/?target=https%3A//eprint.iacr.org/2017/149.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;eprint.iacr.org/2017/14&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;9.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-25d3a649860a495fdbe845053097690e_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic3.zhimg.com/v2-25d3a649860a495fdbe845053097690e_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-25d3a649860a495fdbe845053097690e_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic3.zhimg.com/v2-25d3a649860a495fdbe845053097690e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-25d3a649860a495fdbe845053097690e_b.jpg&quot;&gt;&lt;figcaption&gt;区块链交易账本的核心目标&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;除了PoS以外，区块链技术还存在2类共识机制：（1）比特币、以太坊等使用的工作量证明机制（Proof of Work，PoW）；（2）超级账本使用的拜占庭容错协议（Byzantine Fault-Tolerant，BFT）。这几种共识机制实际上是去中心化和效率之间的各种权衡方案。PoW几乎实现了完全的去中心化，但效率较低；BFT实现了部分去中心化（即联盟链的多中心化形式），从而提高了效率；传统中心化数据库效率最高，但达到了完全中心化。而如果我们可以构造一个安全的PoS机制，我们理论上可以做到双赢：既实现了去中心化，又满足效率要求。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-27bcd0980f0894b1e5d68ac6954a854c_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-27bcd0980f0894b1e5d68ac6954a854c_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-27bcd0980f0894b1e5d68ac6954a854c_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-27bcd0980f0894b1e5d68ac6954a854c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-27bcd0980f0894b1e5d68ac6954a854c_b.jpg&quot;&gt;&lt;figcaption&gt;各种共识机制的去中心化程度与效率对比&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;然而，PoS由于其设计理念，天生就会遇到2种攻击，分别是粉碎攻击（Grinding Attack）、无权益攻击（Nothing-at-stake Attack）。这里我们简单介绍一下这两种攻击。&lt;/p&gt;&lt;p&gt;&lt;b&gt;粉碎攻击&lt;/b&gt;。PoW的本质实际上是应用困难问题的解决概率实现了随机选举（Random Election）过程。困难问题的解决是一个概率事件，拥有越多算力的人越有更高的概率最先决困难问题，但某一个问题由谁最终解决是一个随机问题。举个例子，假定全网有3个参与方，各占有10%、50%、40%的算力。给定一个困难问题，则理论上三个人分别有10%、50%、40%的概率最先解决困难问题。但是，对于一个具体的困难问题来说，最终谁能够解决成功并不确定。PoS移除了算力的要求，因此PoS需要设计一个随机选举过程实现PoW相同的目标。但是，实际执行协议时，此选举过程并不能做到完全随机，而是应用伪随机过程来实现。一旦知道了这一点，某个恶意攻击者就可以利用数学知识，尝试提高自己被选举上的概率。解决这个问题的方法是有很多，理论上最优的方法是设计出一个叫做Verifiable Delay Function（VDF）的密码学工具。这个工具的目标是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在特定时间内，每个人生成的随机数都是可验证的。&lt;/li&gt;&lt;li&gt;只有在特定时间内，参与方才能知道自己和别人的随机数是什么。在特定时间之外，任何人都没办法预测出自己的随机数。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这是一个新的密码学研究方向，此工具的形式化定义和第一个构造方案由密码学顶级研究人员Dan Boneh在2018年提出，相关论文发表在CRYPTO 2018上（&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//eprint.iacr.org/2018/601.pdf&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;eprint.iacr.org/2018/60&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;1.pdf&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;）。后续有很多学者构造出了其它VDF方案，感兴趣的知友可以带ePrint上查阅。&lt;/p&gt;&lt;p&gt;&lt;b&gt;无权益攻击&lt;/b&gt;。区块链中如果出现不一致的情况，就会导致分叉。当出现分叉时，PoW应用最长链规则（Longest Chain Rule）或者最重链规则（GHOST）选择出有效的区块链。由于生成一个区块需要消耗算力，因此就算是攻击者也只能选择一个链进行扩展，否则它需要再消耗1倍的算力为另一个链生成新区块。但在PoS中，区块的生成不需要消耗算力，因此攻击者、甚至非攻击者为了让自己的利益最大化，可以为各个分叉生成区块，不考虑哪个区块在未来可能是有效的。目前这一问题的解决方法是让生成区块时要消耗一定的代币，或者如果某个参与方生成了多个分叉，则对其进行惩罚。&lt;/p&gt;&lt;p&gt;此外，PoS的安全性实际上依赖于区块链的安全性，因为PoS中决定哪个参与方生成下一个区块的依据就是区块链本身。反过来，区块链的安全性又依赖于PoS的安全性，只有PoS安全了，生成的区块链才是安全的。这似乎会陷入到一个自证的困境中去。这个问题目前还没有特别好的解决方案。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-94b3ef28d2026c73161665232e445e66_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic3.zhimg.com/v2-94b3ef28d2026c73161665232e445e66_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-94b3ef28d2026c73161665232e445e66_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic3.zhimg.com/v2-94b3ef28d2026c73161665232e445e66_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-94b3ef28d2026c73161665232e445e66_b.jpg&quot;&gt;&lt;figcaption&gt;PoS协议涉及面临的难题和挑战&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;面对这些挑战，论文作者提出了Ouroboros。具体执行过程非常简单：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在创始区块中约定好各个参与方所拥有的权益，并在创始区块中约定一个随机数。&lt;/li&gt;&lt;li&gt;将时间划分成时间槽，结合创始区块中约定的随机数、每个参与方的权益，机算每个时间槽由哪个参与方生成区块。&lt;/li&gt;&lt;li&gt;各个参与方依次生成区块，用区块用最长链规则确定全网中的有效区块链。&lt;/li&gt;&lt;/ol&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-019325a30929f2fc486ae33e11defff9_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic2.zhimg.com/v2-019325a30929f2fc486ae33e11defff9_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-019325a30929f2fc486ae33e11defff9_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic2.zhimg.com/v2-019325a30929f2fc486ae33e11defff9_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-019325a30929f2fc486ae33e11defff9_b.jpg&quot;&gt;&lt;figcaption&gt;Ouroboro协议描述&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;这个协议如此简单，如何分析协议的安全性呢？为了证明安全性，论文作者定义了一个概念：特征字符串。当区块链中一个时间槽出现了分叉，则将此时间槽的特征字符串标注为1。如果没有出现分叉，则特征字符串标注为0。如下图：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;时间槽0为创始区块，需要假定创始区块是安全的，这也是合理的假定，特征字符串为0。&lt;/li&gt;&lt;li&gt;时间槽1只包含一个区块，没有分叉，特征字符串为0。&lt;/li&gt;&lt;li&gt;时间槽2包含了两个区块（上方和中间），出现分叉，特征字符串为1。&lt;/li&gt;&lt;li&gt;时间槽3只包含一个区块（上方），没有分叉，特征字符串为0。&lt;/li&gt;&lt;li&gt;时间槽4包含了两个区块（中间和下方），特征字符串为1。&lt;/li&gt;&lt;li&gt;......&lt;/li&gt;&lt;li&gt;时间槽9只包含一个区块（中间），没有分叉，特征字符串为0。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;当出现分叉，则这个时间槽就是不安全的，因此特征字符串为1的时间槽都不安全。因此，区块链是否安全这个问题就转换成了一个等价问题：任意给定一个特征字符串w，它安全的概率有多大？不安全的概率有多大？&lt;/p&gt;&lt;p&gt;为了计算相应的概率，论文作者引入了两个参数：到达量（Reach）、边缘量（Margin）。所谓到达量，可以理解为攻击者让分叉区块链成为主链所需的时间槽个数。举例来说（这里论文作者给出的到达量都为负数，根据论文的描述，我认为这应该是作者的笔误）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;图中上方的分叉与主链间隔了4个区块（gap=4），间隔中的所有6个时间槽中，有3个时间槽（时间槽4、时间槽7、时间槽8）的特征字符串为1（Reserve=3），因此到达量为4-3=1。&lt;/li&gt;&lt;li&gt;图中下方的分叉与主链间隔了3个区块（gap=3），间隔中的所有4个时间槽中，有2个时间槽（时间槽7、时间槽8）的特征字符串为1（Reserve=2），因此到达量为3-2=1。&lt;/li&gt;&lt;li&gt;图中中间的主链与主链间隔了0个区块（gap=0），攻击者未控制任何时间槽（Reserve=0），因此到达量为0。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这样，可以把到达量理解为：&lt;b&gt;攻击者让这个分叉成为主链的概率大小&lt;/b&gt;。到达量越大于等于0，攻击者实现攻击的概率越高。而边缘量（Margin）指的就是到达量第二大的分叉（第一大的就是主链了）。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-032786c1811133ef0ed163eea105fc2e_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic3.zhimg.com/v2-032786c1811133ef0ed163eea105fc2e_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-032786c1811133ef0ed163eea105fc2e_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic3.zhimg.com/v2-032786c1811133ef0ed163eea105fc2e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-032786c1811133ef0ed163eea105fc2e_b.jpg&quot;&gt;&lt;figcaption&gt;安全证明的核心：到达量、边缘量的定义&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;那么，到达量和边缘量如何变化呢？论文作者给出了一个递归公式，其原理为：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;当特征字符串为1时，到达量和边缘量同时增加。&lt;/li&gt;&lt;li&gt;当特征字符串为0时：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;攻击者可以通过牺牲到达量，来降低边缘量。&lt;/li&gt;&lt;li&gt;到达量永远不能减小到0以下。&lt;/li&gt;&lt;li&gt;如果到达量和边缘量均大于0，则两个值同时降低。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;这样一来，到达量和边缘量就成为了由特征字符串决定的二维随机游走过程。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-13cb810648425a0c89e5714f2f4fa418_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-13cb810648425a0c89e5714f2f4fa418_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-13cb810648425a0c89e5714f2f4fa418_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-13cb810648425a0c89e5714f2f4fa418_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-13cb810648425a0c89e5714f2f4fa418_b.jpg&quot;&gt;&lt;figcaption&gt;到达量和边缘量变化的递归公式&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;通过应用概率建模，论文作者证明：给定任意一个特征字符串，到达量和边缘量最终状态使得区块链安全的概率是常数，而到达量和边缘量最终状态使得区块链不安全的概率会随着区块链中区块个数的增加而指数级下降。因此，随着区块链长度的增加，区块链不安全的概率指数下降，这就得到了协议安全性的证明了。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cce21f105f40ec1a2d23fd5837323a24_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-cce21f105f40ec1a2d23fd5837323a24_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cce21f105f40ec1a2d23fd5837323a24_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1920&quot; data-original=&quot;https://pic1.zhimg.com/v2-cce21f105f40ec1a2d23fd5837323a24_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-cce21f105f40ec1a2d23fd5837323a24_b.jpg&quot;&gt;&lt;figcaption&gt;协议安全性的证明结论&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;一些思考&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;从数学角度看，PoS协议是可以做到可证明安全的。但是，从非数学角度看，PoS是可证明安全的吗？其核心点在于我们如何定义权益？权益到底是什么？在没有公认锚点的情况下，权益的定义一旦有问题，整个区块链的机制似乎就不成立了。在此，我仅引入“橙皮书”对Nervos创始人Jan的采访。&lt;/p&gt;&lt;blockquote&gt;2018年08月27日更新：感谢匿名知友指出的问题，对Nervos创始人Jan的访谈不是由“区块链头条”采访的，是由“橙皮书”采访并原创的，原链接为：&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//mp.weixin.qq.com/s/giniWFxxAFGT0fr2qbZc_Q&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;对话Nervos：中国最懂以太坊的人，却选择了一条和以太坊截然不同的道路&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;知友们可以结合Jan的观点和PoS本身、再结合自己所具有的区块链相关知识，得到自己的结论：&lt;/p&gt;&lt;blockquote&gt;橙皮书：为什么不看好 PoS ？&lt;br&gt;&lt;br&gt;Jan：我总觉得 PoS有点问题。因为共识是要创造信任，信任是不可能自己创造自己。你想象一条蛇在咬自己的尾巴。PoS用系统自己发布的资产作为押金，去保证这个系统的安全。它没有锚定任何的东西，是漂浮在空中的。我没有看到任何的信任是通过 PoS这样的方式创造出来的。我觉得信任的创造还是要锚定能量。美元锚定是美国的军事实力。如果哪天美国没有这种军事实力，那美元的价值我觉得要打很多问号。PoW是相当于用军队锚定，PoS 是用美元锚定美元。&lt;br&gt;&lt;br&gt;这个问题你会思考很久。因为你可能又会想，归根到底这两种方式，好像都是用资本去锚定，因为电力本质上也是一种资本。但再想想，这两种资本好像是不太一样的。PoW 是体系外的资本。所以，PoS 我总觉得有点问题。&lt;/blockquote&gt;&lt;p&gt;那么为什么以太坊还要引入PoS呢？我个人的观点是：PoS本身的权益是漂浮在空中的，但是&lt;b&gt;如果PoS权益之前已经被认定为是一个有价值的东西（以太坊中的Eth），用一个公认有价值的东西反过来做为权益，PoS似乎就不漂浮在空中了&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;但是，Eth有价值吗？这个问题，有点深奥… 欢迎知友在评论区讨论。&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2018-08-27-43005995</guid>
<pubDate>Mon, 27 Aug 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>Ouroboros：可证明安全的权益证明协议</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2018-08-26-43005995.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/43005995&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4b90b274ea0062a31690c5d092b90f1d_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;&lt;b&gt;引言&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;今天给各位知友带来另外一个存货视频《Ourboros：可证明安全的权益证明协议》。替代工作量证明机制（Proof of Work，PoW）的权益证明机制（Proof of Stake，PoS）已经成为了区块链领域的一个重点研究方向。与PoW相比，PoS具有下述优势（&lt;a href=&quot;https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQs&quot;&gt;Proof of Stake FAQs&lt;/a&gt;）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;不需要消耗大量的电力来保证区块链的安全性。&lt;/li&gt;&lt;li&gt;由于不需要大量电力消耗，参与方不需要得到更多的代币奖励即可参与到网络中。&lt;/li&gt;&lt;li&gt;权益证明的使用可以进一步在区块链中引入博弈论机制，从而形成市场经济体制。&lt;/li&gt;&lt;li&gt;降低系统中心化的风险。&lt;/li&gt;&lt;li&gt;有能力应用经济学惩罚措施使得51%的攻击代价变得更高。&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;以太坊权益证明机制优势的原始英文描述如下，供参考：&lt;br&gt;1. &lt;b&gt;No need to consume large quantities of electricity&lt;/b&gt; in order to secure a blockchain (e.g. it&#39;s estimated that both Bitcoin and Ethereum burn over $1 million worth of electricity and hardware costs per day as part of their consensus mechanism).&lt;br&gt;2. Because of the lack of high electricity consumption, there is &lt;b&gt;not as much need to issue as many new coins&lt;/b&gt; in order to motivate participants to keep participating in the network. It may theoretically even be possible to have &lt;i&gt;negative&lt;/i&gt; net issuance, where a portion of transaction fees is &quot;burned&quot; and so the supply goes down over time.&lt;br&gt;3. Proof of stake opens the door to a wider array of techniques that use game-theoretic mechanism design in order to better &lt;b&gt;discourage centralized cartels&lt;/b&gt; from forming and, if they do form, from acting in ways that are harmful to the network (e.g. like &lt;a href=&quot;https://www.cs.cornell.edu/~ie53/publications/btcProcFC.pdf&quot;&gt;selfish mining&lt;/a&gt; in proof of work).&lt;br&gt;4. &lt;b&gt;Reduced centralization risks&lt;/b&gt;, as economies of scale are much less of an issue. $10 million of coins will get you exactly 10 times higher returns than $1 million of coins, without any additional disproportionate gains because at the higher level you can afford better mass-production equipment, which is an advantage for Proof-of-Work.&lt;br&gt;5. Ability to use economic penalties to &lt;b&gt;make various forms of 51% attacks vastly more expensive&lt;/b&gt;to carry out than proof of work - to paraphrase Vlad Zamfir, &quot;it&#39;s as though your ASIC farm burned down if you participated in a 51% attack&quot;.&lt;/blockquote&gt;&lt;p&gt;PoS的这些优势使得著名区块链平台以太坊（Ethereum）都宣布要用PoS代替PoW，并且已经提出了两种替代方案：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;综合使用PoS和PoW的协议：&lt;a href=&quot;https://github.com/ethereum/research/blob/master/papers/casper-basics/casper_basics.pdf&quot;&gt;Casper the Friendly Finality Gadget&lt;/a&gt;，由Vitalik Buterin（以太坊创始人）和Virgil Griffith提出。&lt;/li&gt;&lt;li&gt;不应用PoW，完全的PoS协议：&lt;a href=&quot;https://github.com/ethereum/research/blob/master/papers/CasperTFG/CasperTFG.pdf&quot;&gt;Casper the Firendly GHOST: Correct by Construction&lt;/a&gt;，由Vlad Zamfir提出。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;但是，如何构造一个可证明安全的PoS机制是区块链社区、也是学术界研究的一个重点方向。在密码学最顶级的会议CRYPTO 2017上，Aggelos Kiayias、Alexander Russell、Bernardo David、Roman Oliynykow给出了一个证明安全的PoS协议：Ouroboros。而本次带来的视频，就是论文作者之一Aggelos Kiayias在CRYPTO 2016会议上的论文演讲视频。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;相关信息&lt;/b&gt;&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;论文下载链接：&lt;a href=&quot;https://eprint.iacr.org/2016/889.pdf&quot;&gt;https://eprint.iacr.org/2016/889.pdf&lt;/a&gt;。ePrint是国际密码学研究协会（International Association for Cryptologic Research，IACR）设置的一个密码学开放论文获取平台，有点像著名的ArXiv。现在密码学顶级会议的论文作者都会在ePrint上公开会议论文的完整版本。如果对密码学感兴趣，可以时常查看ePrint上的论文，可以有很多很不错的发现。&lt;/li&gt;&lt;li&gt;演讲视频连接：&lt;a href=&quot;https://www.youtube.com/watch?v=fBKCbhX-dXI&amp;amp;t=983s&quot;&gt;https://www.youtube.com/watch?v=fBKCbhX-dXI&amp;amp;t=983s&lt;/a&gt;。现在IACR已经在YouTube上开创了频道。最近IACR放出了著名密码学家Matthew Green在著名密码学会议EUROCRYPT 2018上的演讲《数字货币的三十年：从电子现金到区块链》（Thirty Years of Digital Currency: From Digicash to the Blockchain）。后面有时间的话我也希望能和知友们分享这个视频，不过这个视频听译起来难度有点大…&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;b&gt;视频翻译&lt;/b&gt;&lt;/h2&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic2.zhimg.com/80/v2-7037591c6b16311348e48172195ff499_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1017192966431105024&quot; data-name=&quot;第一部分：方案描述&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1017192966431105024&quot;&gt;&lt;/video&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic2.zhimg.com/80/v2-88fa6f8b9b51b6abe441c4b11d7618ad_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1017193045200150528&quot; data-name=&quot;第二部分：安全证明&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1017193045200150528&quot;&gt;&lt;/video&gt;&lt;h2&gt;&lt;b&gt;视频介绍&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;区块链技术所要解决的核心问题是：在没有可信第三方的条件下，互不信任的参与方维护一个一致的、公开可验证的账本（Ledger）。&lt;/p&gt;&lt;p&gt;区块链技术通过两种思想来实现这一目标：区块链数据结构、共识协议。如果对数据结构本身有一定的了解，相信各位知友可以认识到，区块链这种账本记录方式的核心就是一种链表数据结构。链表的节点就是所谓的区块（Block），而链表的指针由内存中的地址替换为前一个区块的哈希值。这种特殊的链表结构使得区块链本身具有了公开可验证性，即存在一种高效的验证方法，使得任意一个参与方都可以验证其它参与方是否按照既定的规则存储交易信息。&lt;/p&gt;&lt;p&gt;区块链数据结构本身只能实现账本的公开可验证性。为了实现账本的一致性，还要在区块链数据结构上应用一个协议，使得只要大多数参与方都遵守这一协议，则大多数参与方都可以存储并维护一个相同的区块链数据结构。这个协议就是所谓的共识协议（Consensus Protocol）。&lt;/p&gt;&lt;p&gt;但是，如何从数学角度、或者用一种模型描述区块链技术要实现的目标呢？为了让技术具有较好的健壮性，我们总需要应用一个形式化的模型来描述技术要达到的目标、达到目标所关联的指标。如果没有模型描述，我们也就没办法用非常科学的手段实现区块链技术，当然也就没有所谓的可证明安全了。实际上，演讲者早在2014年就给出了区块链所要实现的核心目标：健壮的交易账本。后续研究者进一步扩展了这一定义。如果想深入理解区块链技术，建议感兴趣的知友阅读图中给出的相关论文，具体论文名称如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;GKL15：The Bitcoin Backbone Protocol: Analysis and Applications. EUROCRYPT 2015, &lt;a href=&quot;https://eprint.iacr.org/2014/765.pdf&quot;&gt;https://eprint.iacr.org/2014/765.pdf&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;KP15：Speed-Security Tradeos in Blockchain Protocols. &lt;a href=&quot;https://eprint.iacr.org/2015/1019.pdf&quot;&gt;https://eprint.iacr.org/2015/1019.pdf&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;PSS17：Analysis of the Blockchain Protocol in Asynchronous Networks. EUROCRYPT 2017, &lt;a href=&quot;https://eprint.iacr.org/2016/454.pdf&quot;&gt;https://eprint.iacr.org/2016/454.pdf&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;BMTZ17：Bitcoin as a Transaction Ledger: A Composable Treatment. CRYPTO 2017, &lt;a href=&quot;https://eprint.iacr.org/2017/149.pdf&quot;&gt;https://eprint.iacr.org/2017/149.pdf&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c9e1496ee796a65813fc8142904f838d_r.jpg&quot; data-caption=&quot;区块链交易账本的核心目标&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-c9e1496ee796a65813fc8142904f838d&quot; data-watermark-src=&quot;v2-25d3a649860a495fdbe845053097690e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;除了PoS以外，区块链技术还存在2类共识机制：（1）比特币、以太坊等使用的工作量证明机制（Proof of Work，PoW）；（2）超级账本使用的拜占庭容错协议（Byzantine Fault-Tolerant，BFT）。这几种共识机制实际上是去中心化和效率之间的各种权衡方案。PoW几乎实现了完全的去中心化，但效率较低；BFT实现了部分去中心化（即联盟链的多中心化形式），从而提高了效率；传统中心化数据库效率最高，但达到了完全中心化。而如果我们可以构造一个安全的PoS机制，我们理论上可以做到双赢：既实现了去中心化，又满足效率要求。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-063dc377ef80a8835fd1e8e5fe8ac5b7_r.jpg&quot; data-caption=&quot;各种共识机制的去中心化程度与效率对比&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-063dc377ef80a8835fd1e8e5fe8ac5b7&quot; data-watermark-src=&quot;v2-27bcd0980f0894b1e5d68ac6954a854c&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然而，PoS由于其设计理念，天生就会遇到2种攻击，分别是粉碎攻击（Grinding Attack）、无权益攻击（Nothing-at-stake Attack）。这里我们简单介绍一下这两种攻击。&lt;/p&gt;&lt;p&gt;&lt;b&gt;粉碎攻击&lt;/b&gt;。PoW的本质实际上是应用困难问题的解决概率实现了随机选举（Random Election）过程。困难问题的解决是一个概率事件，拥有越多算力的人越有更高的概率最先决困难问题，但某一个问题由谁最终解决是一个随机问题。举个例子，假定全网有3个参与方，各占有10%、50%、40%的算力。给定一个困难问题，则理论上三个人分别有10%、50%、40%的概率最先解决困难问题。但是，对于一个具体的困难问题来说，最终谁能够解决成功并不确定。PoS移除了算力的要求，因此PoS需要设计一个随机选举过程实现PoW相同的目标。但是，实际执行协议时，此选举过程并不能做到完全随机，而是应用伪随机过程来实现。一旦知道了这一点，某个恶意攻击者就可以利用数学知识，尝试提高自己被选举上的概率。解决这个问题的方法是有很多，理论上最优的方法是设计出一个叫做Verifiable Delay Function（VDF）的密码学工具。这个工具的目标是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;在特定时间内，每个人生成的随机数都是可验证的。&lt;/li&gt;&lt;li&gt;只有在特定时间内，参与方才能知道自己和别人的随机数是什么。在特定时间之外，任何人都没办法预测出自己的随机数。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这是一个新的密码学研究方向，此工具的形式化定义和第一个构造方案由密码学顶级研究人员Dan Boneh在2018年提出，相关论文发表在CRYPTO 2018上（&lt;a href=&quot;https://eprint.iacr.org/2018/601.pdf&quot;&gt;https://eprint.iacr.org/2018/601.pdf&lt;/a&gt;）。后续有很多学者构造出了其它VDF方案，感兴趣的知友可以带ePrint上查阅。&lt;/p&gt;&lt;p&gt;&lt;b&gt;无权益攻击&lt;/b&gt;。区块链中如果出现不一致的情况，就会导致分叉。当出现分叉时，PoW应用最长链规则（Longest Chain Rule）或者最重链规则（GHOST）选择出有效的区块链。由于生成一个区块需要消耗算力，因此就算是攻击者也只能选择一个链进行扩展，否则它需要再消耗1倍的算力为另一个链生成新区块。但在PoS中，区块的生成不需要消耗算力，因此攻击者、甚至非攻击者为了让自己的利益最大化，可以为各个分叉生成区块，不考虑哪个区块在未来可能是有效的。目前这一问题的解决方法是让生成区块时要消耗一定的代币，或者如果某个参与方生成了多个分叉，则对其进行惩罚。&lt;/p&gt;&lt;p&gt;此外，PoS的安全性实际上依赖于区块链的安全性，因为PoS中决定哪个参与方生成下一个区块的依据就是区块链本身。反过来，区块链的安全性又依赖于PoS的安全性，只有PoS安全了，生成的区块链才是安全的。这似乎会陷入到一个自证的困境中去。这个问题目前还没有特别好的解决方案。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9b33e7f5c139da02b0e0da290d596181_r.jpg&quot; data-caption=&quot;PoS协议涉及面临的难题和挑战&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9b33e7f5c139da02b0e0da290d596181&quot; data-watermark-src=&quot;v2-94b3ef28d2026c73161665232e445e66&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;面对这些挑战，论文作者提出了Ouroboros。具体执行过程非常简单：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;在创始区块中约定好各个参与方所拥有的权益，并在创始区块中约定一个随机数。&lt;/li&gt;&lt;li&gt;将时间划分成时间槽，结合创始区块中约定的随机数、每个参与方的权益，机算每个时间槽由哪个参与方生成区块。&lt;/li&gt;&lt;li&gt;各个参与方依次生成区块，用区块用最长链规则确定全网中的有效区块链。&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3a9bef4635b0b95f4e21700269207ba4_r.jpg&quot; data-caption=&quot;Ouroboro协议描述&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-3a9bef4635b0b95f4e21700269207ba4&quot; data-watermark-src=&quot;v2-019325a30929f2fc486ae33e11defff9&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;这个协议如此简单，如何分析协议的安全性呢？为了证明安全性，论文作者定义了一个概念：特征字符串。当区块链中一个时间槽出现了分叉，则将此时间槽的特征字符串标注为1。如果没有出现分叉，则特征字符串标注为0。如下图：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;时间槽0为创始区块，需要假定创始区块是安全的，这也是合理的假定，特征字符串为0。&lt;/li&gt;&lt;li&gt;时间槽1只包含一个区块，没有分叉，特征字符串为0。&lt;/li&gt;&lt;li&gt;时间槽2包含了两个区块（上方和中间），出现分叉，特征字符串为1。&lt;/li&gt;&lt;li&gt;时间槽3只包含一个区块（上方），没有分叉，特征字符串为0。&lt;/li&gt;&lt;li&gt;时间槽4包含了两个区块（中间和下方），特征字符串为1。&lt;/li&gt;&lt;li&gt;......&lt;/li&gt;&lt;li&gt;时间槽9只包含一个区块（中间），没有分叉，特征字符串为0。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;当出现分叉，则这个时间槽就是不安全的，因此特征字符串为1的时间槽都不安全。因此，区块链是否安全这个问题就转换成了一个等价问题：任意给定一个特征字符串w，它安全的概率有多大？不安全的概率有多大？&lt;/p&gt;&lt;p&gt;为了计算相应的概率，论文作者引入了两个参数：到达量（Reach）、边缘量（Margin）。所谓到达量，可以理解为攻击者让分叉区块链成为主链所需的时间槽个数。举例来说（这里论文作者给出的到达量都为负数，根据论文的描述，我认为这应该是作者的笔误）：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;图中上方的分叉与主链间隔了4个区块（gap=4），间隔中的所有6个时间槽中，有3个时间槽（时间槽4、时间槽7、时间槽8）的特征字符串为1（Reserve=3），因此到达量为4-3=1。&lt;/li&gt;&lt;li&gt;图中下方的分叉与主链间隔了3个区块（gap=3），间隔中的所有4个时间槽中，有2个时间槽（时间槽7、时间槽8）的特征字符串为1（Reserve=2），因此到达量为3-2=1。&lt;/li&gt;&lt;li&gt;图中中间的主链与主链间隔了0个区块（gap=0），攻击者未控制任何时间槽（Reserve=0），因此到达量为0。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;这样，可以把到达量理解为：&lt;b&gt;攻击者让这个分叉成为主链的概率大小&lt;/b&gt;。到达量越大于等于0，攻击者实现攻击的概率越高。而边缘量（Margin）指的就是到达量第二大的分叉（第一大的就是主链了）。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-84c2fe7bf0371795df15b9453681dafb_r.jpg&quot; data-caption=&quot;安全证明的核心：到达量、边缘量的定义&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-84c2fe7bf0371795df15b9453681dafb&quot; data-watermark-src=&quot;v2-032786c1811133ef0ed163eea105fc2e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;那么，到达量和边缘量如何变化呢？论文作者给出了一个递归公式，其原理为：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;当特征字符串为1时，到达量和边缘量同时增加。&lt;/li&gt;&lt;li&gt;当特征字符串为0时：&lt;/li&gt;&lt;ul&gt;&lt;li&gt;攻击者可以通过牺牲到达量，来降低边缘量。&lt;/li&gt;&lt;li&gt;到达量永远不能减小到0以下。&lt;/li&gt;&lt;li&gt;如果到达量和边缘量均大于0，则两个值同时降低。&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;p&gt;这样一来，到达量和边缘量就成为了由特征字符串决定的二维随机游走过程。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-00f5a1c27aed82ad10b681a1b101b691_r.jpg&quot; data-caption=&quot;到达量和边缘量变化的递归公式&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-00f5a1c27aed82ad10b681a1b101b691&quot; data-watermark-src=&quot;v2-13cb810648425a0c89e5714f2f4fa418&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;通过应用概率建模，论文作者证明：给定任意一个特征字符串，到达量和边缘量最终状态使得区块链安全的概率是常数，而到达量和边缘量最终状态使得区块链不安全的概率会随着区块链中区块个数的增加而指数级下降。因此，随着区块链长度的增加，区块链不安全的概率指数下降，这就得到了协议安全性的证明了。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-499f0877ae282da71b379e67a2e39aff_r.jpg&quot; data-caption=&quot;协议安全性的证明结论&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-499f0877ae282da71b379e67a2e39aff&quot; data-watermark-src=&quot;v2-cce21f105f40ec1a2d23fd5837323a24&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;h2&gt;&lt;b&gt;一些思考&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;从数学角度看，PoS协议是可以做到可证明安全的。但是，从非数学角度看，PoS是可证明安全的吗？其核心点在于我们如何定义权益？权益到底是什么？在没有公认锚点的情况下，权益的定义一旦有问题，整个区块链的机制似乎就不成立了。在此，我仅引入“橙皮书”对Nervos创始人Jan的采访。&lt;/p&gt;&lt;blockquote&gt;2018年08月27日更新：感谢匿名知友指出的问题，对Nervos创始人Jan的访谈不是由“区块链头条”采访的，是由“橙皮书”采访并原创的，原链接为：&lt;a href=&quot;https://mp.weixin.qq.com/s/giniWFxxAFGT0fr2qbZc_Q&quot;&gt;对话Nervos：中国最懂以太坊的人，却选择了一条和以太坊截然不同的道路&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;知友们可以结合Jan的观点和PoS本身、再结合自己所具有的区块链相关知识，得到自己的结论：&lt;/p&gt;&lt;blockquote&gt;橙皮书：为什么不看好 PoS ？&lt;br&gt;&lt;br&gt;Jan：我总觉得 PoS有点问题。因为共识是要创造信任，信任是不可能自己创造自己。你想象一条蛇在咬自己的尾巴。PoS用系统自己发布的资产作为押金，去保证这个系统的安全。它没有锚定任何的东西，是漂浮在空中的。我没有看到任何的信任是通过 PoS这样的方式创造出来的。我觉得信任的创造还是要锚定能量。美元锚定是美国的军事实力。如果哪天美国没有这种军事实力，那美元的价值我觉得要打很多问号。PoW是相当于用军队锚定，PoS 是用美元锚定美元。&lt;br&gt;&lt;br&gt;这个问题你会思考很久。因为你可能又会想，归根到底这两种方式，好像都是用资本去锚定，因为电力本质上也是一种资本。但再想想，这两种资本好像是不太一样的。PoW 是体系外的资本。所以，PoS 我总觉得有点问题。&lt;/blockquote&gt;&lt;p&gt;那么为什么以太坊还要引入PoS呢？我个人的观点是：PoS本身的权益是漂浮在空中的，但是&lt;b&gt;如果PoS权益之前已经被认定为是一个有价值的东西（以太坊中的Eth），用一个公认有价值的东西反过来做为权益，PoS似乎就不漂浮在空中了&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;但是，Eth有价值吗？这个问题，有点深奥… 欢迎知友在评论区讨论。&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2018-08-26-43005995</guid>
<pubDate>Sun, 26 Aug 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>比特币点对点网络中的日蚀攻击</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2018-08-20-42446193.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/42446193&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c94f4f02b9682fa497760a59585aedf6_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;引言&lt;/h2&gt;&lt;p&gt;转眼间发现我的专栏已经有一年都没有更新了。实在没办法，工作以后确实比较忙，而相关的一些研究内容一直没有时间沉淀并和各位知友们分享。最近终于可以腾出空来写点好玩的东西了，接下来一段时间内我应该可以继续为各位知友们分享一些有趣的数据安全与密码学的研究成果，所以请大家耐心等待咯。&lt;/p&gt;&lt;p&gt;自从区块链成为一个热的一塌糊涂的技术后，很多朋友通过各种方式问我：作为知乎密码学领域的一个略有知名度的知友，你是否在研究区块链呀？现在可以告诉大家答案了：我的确也在研究区块链，不过研究的主要内容还是区块链本身的安全性，以及与区块链相关的一些密码学技术。无论区块链整个行业引入了多少资金、区块链相关的代币涨跌情况如何，我一直坚信一个核心原则：技术无罪。当真正深入理解一个技术所能解决的核心问题、这个技术解决此问题的核心思想后，我们才能为一个技术给出客观、公正的评价。&lt;/p&gt;&lt;p&gt;我个人没有购买过任何代币，当然也就不太关注区块链相关代币的涨跌情况了。但我想承认的是，无论区块链最终发展到什么状态，作为一个数据安全与密码学研究者，我很感激区块链这门技术。正是由于这个技术得到了巨大的关注，才使得密码学相关领域得到了进一步的关注、认同和快速发展。我目前认为，“安全”、“去中心化”、“效率”这个不可能三角是长时间不可解决的。一直以来，我们都将重心放在“效率”上，并在满足“效率”的条件下尽可能提供一定的“安全”。但是，如果“效率”和“安全”产生了不可避免的矛盾，大部分情况下我们还是会倾向于选择“效率”。而区块链技术的发展路线更像是以“安全”为出发点的技术，并在满足“安全”的条件下，尽可能提供“去中心化”。同时，如果想提高“效率”，大部分情况下我们反而会选择牺牲掉一定的“去中心化”，而去保“安全”。这是安全领域很少见到的一种技术发展现象。&lt;/p&gt;&lt;p&gt;好了，闲话不多说，今天我为知友们带来的是一篇安全顶级会议USENIX Security 2015上的一篇论文，题目是《比特币点对点网络中的日蚀攻击》（Eclipse Attacks on Bitcoin&#39;s Peer-to-Peer Network）。大约1个月前，我和一位区块链爱好者进行交流后，他为我推荐了这篇论文，并向我提供了会议的演讲视频，希望我能解释一下这篇论文的原理和攻击思想。我观看了以后认为，这篇论文给出的比特币系统攻击方法非常巧妙，同时攻击方法的介绍也涉及到比特币系统实现过程中的很多细节。为了让更多的知友了解比特币系统的细节，作为一个前字幕组成员，我完成了演讲视频的翻译，并将字幕版视频放在专栏中，供知友们观看。&lt;/p&gt;&lt;p&gt;为了让没有太多时间观看视频，而又希望了解相关内容的知友了解日蚀攻击的原理，我在下方简要撰写了核心攻击思想。当然了，我还是建议感兴趣的知友们观看视频，甚至阅读论文。这篇论文撰写的非常清晰易懂，通过论文中的引文也能一窥学术领域对比特币的研究情况。&lt;/p&gt;&lt;p&gt;&lt;b&gt;注意：理解日蚀攻击的原理需要对比特币系统的交易、挖矿流程有着非常清晰的理解&lt;/b&gt;。&lt;/p&gt;&lt;h2&gt;相关信息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;论文下载链接（USENIX Security组会委将所有论文设置为了Open Access，任何人都可以免费下载论文）：&lt;a href=&quot;https://www.usenix.org/system/files/conference/usenixsecurity15/sec15-paper-heilman.pdf&quot;&gt;https://www.usenix.org/system/files/conference/usenixsecurity15/sec15-paper-heilman.pdf&lt;/a&gt;。&lt;/li&gt;&lt;li&gt;演讲视频连接（USENIX Security组委会官方也发布了演讲视频，任何人都可以免费观看）：&lt;a href=&quot;https://www.youtube.com/watch?v=J-lF0zxGpu0&amp;amp;t=3s&quot;&gt;https://www.youtube.com/watch?v=J-lF0zxGpu0&amp;amp;t=3s&lt;/a&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;视频翻译&lt;/h2&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic3.zhimg.com/80/v2-6804119139c2178187091d928fa157de_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1014704316036366336&quot; data-name=&quot;第一部分：引言、原理介绍、分析&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1014704316036366336&quot;&gt;&lt;/video&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic2.zhimg.com/80/v2-278bcd5ee4254ff1f5dbca124e8ec7b5_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1014704495434899456&quot; data-name=&quot;第二部分：实验结果、总结、提问&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1014704495434899456&quot;&gt;&lt;/video&gt;&lt;h2&gt;视频介绍&lt;/h2&gt;&lt;p&gt;我们都知道，比特币是一个基于点对点网络（Peer-to-Peer Network）的去中心化数字货币系统，应用区块链完成交易的记录，使用工作量证明机制（Proof of Work）和最长链规则（Longest Chain Rule）作为共识机制，使各个节点比特币的账本达到一致性。比特币系统先天可以遭受51%攻击：当某个节点拥有全网50%以上算力的时候，其从理论上可以实现账本的篡改，从而实现所谓的双重花费（Double Spending）攻击（感谢 &lt;a class=&quot;member_mention&quot; href=&quot;http://www.zhihu.com/people/7b71fd8b1cb246326ab3985976b1bd1b&quot; data-hash=&quot;7b71fd8b1cb246326ab3985976b1bd1b&quot; data-hovercard=&quot;p$b$7b71fd8b1cb246326ab3985976b1bd1b&quot;&gt;@yellowsubmarine&lt;/a&gt; 的提示，之前Spending错误地拼写成了Speeding）。而51%也就成为比特币系统的安全阈值（Security Threshold）了。&lt;/p&gt;&lt;p&gt;然而，比特币系统的安全阈值真的为50%吗？是否有其它方法、或者在特定的假设下，可以让比特币系统的安全阈值降低到50%以下？答案当然是肯定的。其中一种实现方法叫作自私挖矿攻击（Selfish-Mining Attack），在提出此攻击的论文《Majority is not Enough: Bitcoin Mining is Vulnerable》中已经证明，理论上此种攻击可以将比特币系统的安全阈值从50%降低到33%。&lt;/p&gt;&lt;blockquote&gt;We further show that the upper bound on threshold size is 1/3&quot;: the protocol will never be safe against attacks by a selfish mining pool that commands more than 33% of the total mining power of the network.&lt;/blockquote&gt;&lt;p&gt;值得一提的是，这篇论文撰写于2013年，最初发表在密码学著名会议FC 2014上。现在这篇论文已经被著名期刊《Communications of the ACM》接收并于2018年正式刊出。值得注意的是，自私挖矿攻击不依赖于其它假设，只要旷工拥有超过33%的算力并实施攻击，则在比特币系统下，此攻击总可以成立。因此，这是一种非常通用的攻击行为。&lt;/p&gt;&lt;p&gt;除了自私挖矿攻击外，另一种可以降低安全阈值的方案就是今天介绍的这篇论文所引入的日蚀攻击了。与自私挖矿攻击相比，日蚀攻击对攻击者的要求更高，其需要攻击者实施网络攻击，但并不要求攻击者拥有挖矿算力。下面我们就来看一看这一攻击方法的原理简介。&lt;/p&gt;&lt;p&gt;点对点网络理论上期望节点与全网中的每一个节点都建立连接。但在实际中这是不可能做到的：建立可靠的TCP连接需要消耗节点的网络资源。因此，比特币系统实际上只允许一个节点接受117个连接请求，并最多向外发起8个连接。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0aa3895db240f806a9eb0ac48ff00ad2_r.jpg&quot; data-caption=&quot;比特币系统中的节点只能接受117个对内连接，对外发起8个连接&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1138&quot; data-rawheight=&quot;640&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-0aa3895db240f806a9eb0ac48ff00ad2&quot; data-watermark-src=&quot;v2-9d690bff85dd04bf1fbc0720ae1fa882&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;我们设想这样一个场景：如果一个节点接受的117个对内连接、对外发起的8个连接，其连接目标都是发起攻击的攻击者，那这是不是就意味着攻击者可以完全控制此节点所接受的信息了？事实就是如此，如果真的可以做到这一点，则攻击者就可以在被攻击节点和比特币网络中建立一个“中继”，使得此节点是能收到攻击者希望它能收到的信息。当发生此种情况时，我们称此节点被攻击者“日蚀”（Eclipse），这个词还是挺形象的~&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bc4fccad5894fcf250e927cb2c6f6d40_r.jpg&quot; data-caption=&quot;如果一个节点建立的连接都指向攻击者，则称此节点被攻击者日蚀&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1138&quot; data-rawheight=&quot;640&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-bc4fccad5894fcf250e927cb2c6f6d40&quot; data-watermark-src=&quot;v2-65c55d605a2ea2134ee2a39e43fe1797&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;如果攻击者足够强大，它不仅可以日蚀一个节点，甚至可以日蚀多个节点，从而将整个比特币网络划分成2个部分。如果真的如此，攻击者就可以用少于50%的算力发起51%的攻击了。攻击过程如下图所示。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d03e8478f67e3c64d0f432a2a7b71bcf_r.jpg&quot; data-caption=&quot;通过日蚀实现51%攻击&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1138&quot; data-rawheight=&quot;640&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-d03e8478f67e3c64d0f432a2a7b71bcf&quot; data-watermark-src=&quot;v2-c74ff86c2e5477c8fa797b8280537104&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;假定攻击者可以将整个比特币网络划分为两个部分，左侧部分的节点总体拥有30%的算力，右侧部分的节点总体拥有30%的算力，而攻击者总体拥有40%的算力。如果攻击者可以让左右两侧的节点都接收不到相互之间的通信信息，则攻击者相当于与左侧节点建立了一个比特币子网络，而攻击者在这个子网络中拥有4/7的算力；反之，攻击者与右侧节点建立了另一个比特币子网络，攻击者在这个子网络中同样拥有4/7的算力。这样一来，攻击者虽然在全网只占有40%的算力，但在左/右两侧的子网络中却分别拥有50%以上的算力，从而实现51%攻击。&lt;/p&gt;&lt;p&gt;更糟糕的是，即使攻击者没有包含任何算力，其也可以通过日蚀实现双重花费攻击。具体原理如下图所示。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-28cd36fa054b731b471622270aba3533_r.jpg&quot; data-caption=&quot;通过日蚀实现双重花费攻击&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1138&quot; data-rawheight=&quot;640&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-28cd36fa054b731b471622270aba3533&quot; data-watermark-src=&quot;v2-777550a577f07f0c87dd6bc925317c39&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;假定攻击者A通过日蚀将比特币网络划分成两个部分：左侧节点拥有30%的算力，右侧节点拥有70%的算力，而攻击者要与某个商人M进行数字货币交易，此商人位于左侧。此时，攻击者在左侧子网络中发起一个COIN_0--&amp;gt;M的交易，而在右侧子网络中发起一个COIN_0--&amp;gt;A的双重花费交易。由于攻击者阻断了左右两侧节点的通信能力，因此左侧节点（包括商人）并不知道交易COIN_0--&amp;gt;A的存在，也不知道右侧节点的存在，他们只能够看到交易COIN_0--&amp;gt;M。因此，商人M等到此交易所关联的区块进一步被多个区块确认后，放心地将货物发送给了攻击者A。&lt;/p&gt;&lt;p&gt;然而，由于右侧的旷工占有70%的算力，它们一定可以产生一个更长的区块链，并且区块链中包含交易COIN_0--&amp;gt;A。因此，待商人M将货物发送给攻击者A后，攻击者A停止日蚀攻击，使左侧节点看到右侧节点的区块链。由于右侧节点的区块链大概率比左侧节点长，因此左侧节点的区块链被废除，COIN_0--&amp;gt;M的交易也就被废除，双重花费攻击成功。&lt;/p&gt;&lt;p&gt;由此可见，日蚀攻击的原理很像网络安全中的中间人攻击（Man-in-the-Middle Attack），只不过在中间人攻击中，攻击者只需要阻碍两个参与方之间的通信即可。但在点对点网络中，攻击者需要阻碍参与方与网络中任何其它参与方的通信，这就提高了攻击的难度。通过深入研究比特币系统的源代码，论文作者组合利用了比特币系统中的多了漏洞，成功实现了日蚀攻击。实际攻击表明，当应用一个包含大约400个IP地址的僵尸网络，对一个在线节点发起1小时的攻击后，成功率为84%（攻击实验进行了50次）。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-a8cb270e1a5e0b0332e890f8bb09ffc2_r.jpg&quot; data-caption=&quot;日蚀攻击对实际比特币节点的攻击效果&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1138&quot; data-rawheight=&quot;640&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-a8cb270e1a5e0b0332e890f8bb09ffc2&quot; data-watermark-src=&quot;v2-b68e0954f7b8325a3ec97f2bc61045f5&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;那么，如何抵御日蚀攻击呢？实际上，论文作者给出了6种防御方法，并将攻击过程、防御方法告诉了比特币开发社区。比特币开发社区迅速做出了响应，并更新了比特币系统的源代码。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-7a4d47f1b1b950b8458283681d154529_r.jpg&quot; data-caption=&quot;日蚀攻击防御方法在比特币系统中的部署情况&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1138&quot; data-rawheight=&quot;640&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-7a4d47f1b1b950b8458283681d154529&quot; data-watermark-src=&quot;v2-22ce6c2c24bab77334a2959a8413ff90&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;h2&gt;以太坊是否存在日蚀攻击？&lt;/h2&gt;&lt;p&gt;感谢 &lt;a class=&quot;member_mention&quot; href=&quot;http://www.zhihu.com/people/6f63984c0622d8033b92924f0003e289&quot; data-hash=&quot;6f63984c0622d8033b92924f0003e289&quot; data-hovercard=&quot;p$b$6f63984c0622d8033b92924f0003e289&quot;&gt;@太阳面包&lt;/a&gt; 提出的这个问题。实际上，只要区块链系统中点对点网络的实现机制和比特币系统类似，就会存在日蚀攻击。因此，从离乱角度看，以太坊中也存在日蚀攻击。这方面我查询到学术领域给出了两个相关的论文：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Wüst K, Gervais A. Ethereum eclipse attacks[R]. ETH Zurich, 2016.（以太坊中的日蚀攻击）&lt;/li&gt;&lt;li&gt;Marcus Y, Heilman E, Goldberg S. Low-Resource Eclipse Attacks on Ethereum&#39;s Peer-to-Peer Network[J]. IACR Cryptology ePrint Archive, 2018, 2018: 236.（以太坊点对点网络中的低资源日蚀攻击）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;其中，第二篇论文的第二作者就是比特币系统日蚀攻击论文的第一作者。感兴趣的知友可以进一步阅读这两篇论文，了解在以太坊中如何实施日蚀攻击。&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2018-08-20-42446193</guid>
<pubDate>Mon, 20 Aug 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>一个刷存在感的招聘帖：阿里巴巴-云零售事业部-数据技术团队招聘信息</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2017-12-21-32211518.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/32211518&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1fd607b4d8d73790d0210cdb7a2fa18a_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;好像这半年只写了2个答案，专栏也许久没更新了。一方面，8月以来自己的小家正在装修，现在的住处个人空间有点小，对于写答案的欲望也有所影响。另一方面，作为一个职场新人，正式投入工作后需要适应、理解、学习的事情很多，这段时间一直没有特别多的精力写答案。&lt;/p&gt;&lt;p&gt;说到工作，我这份工作就是在知乎上被阿里的大V勾搭到的。最新团队启动了新的招聘战役，释放了大量的招聘指标（Hire Count，据说上不封顶），我也希望能从知乎上吸引来更多志同道合的小伙伴，一起做一些很有意义的事情。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果你对岗位有疑惑，欢迎私信向我提问。&lt;/li&gt;&lt;li&gt;如果你对岗位感兴趣，欢迎私信我或通过邮箱联系我：weiran.lwr@alibaba-inc.com。如果初步交流后互相都觉得很合适，我会将相关信息转达给相关岗位的接口人。当然了，也可以根据招聘图上的要求，将简历通过邮箱投至adjob@taobao.com~&lt;/li&gt;&lt;li&gt;如果你对岗位不感兴趣也没关系，可以看看招聘信息，了解一下我们部门在做的工作是什么，没准未来有一天就对岗位感兴趣了呢？&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;先来一个招聘图&lt;/h2&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0ce304a735858da60c978971d5c88ffb_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1000&quot; data-rawheight=&quot;4381&quot;&gt;&lt;h2&gt;云零售事业部是一个什么部门？&lt;/h2&gt;&lt;p&gt;阿里巴巴云零售事业部（Alibaba Cloud Retail Service，CRS）的主要目标是通过数据、技术手段提升商家的经营效率，提速商家的业务增长，其使命是“引领商业全域转型”。其主要目标即包含对于传统电商的赋能提效，也包含对于线下零售商家利用数字化能力转型新零售提升经营效率。&lt;/p&gt;&lt;p&gt;阿里巴巴云零售事业部具有完备的商家运营产品矩阵，包含千牛以及服务商市场等生态，帮助电商企业依靠生态拓展商业能力。同时事业部向商家提供了全域运营的产品，包含“品牌数据银行”，帮助商家建立人群数据运营的能力；打造“智慧门店”等全渠道产品，建立商家线下业务的数据化能力，完成新零售模式的转型。&lt;/p&gt;&lt;p&gt;阿里巴巴云零售事业部的官方网站是：crs.alibaba.com。感兴趣的知乎er们可以访问此网站，了解此部门的相关信息。&lt;/p&gt;&lt;h2&gt;招聘的岗位有哪些？&lt;/h2&gt;&lt;p&gt;招聘岗位主要分为两大类：&lt;b&gt;数据科学应用团队&lt;/b&gt;、&lt;b&gt;系统工程团队&lt;/b&gt;。下面分别进行介绍。&lt;/p&gt;&lt;h2&gt;数据科学应用团队招聘岗位&lt;/h2&gt;&lt;p&gt;数据科学应用团队主要与数据本身打交道，考虑如何更有效地应用数据。数据科学应用团队主要岗位描述如下：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;高级数据分析师：（1）理解行业知识（快消、美妆、食品、家电等），通过品牌、消费者数据，建立针对品牌视角的分析体系和方法论；（2） 配合品牌商客户，使用大数据进行专案分析，提供定量的营销策略方案支持。详情：&lt;a href=&quot;https://job.alibaba.com/zhaopin/position_detail.htm?positionId=24076&quot;&gt;云零售 - 高级数据分析师/专家&lt;/a&gt;&lt;/li&gt;&lt;li&gt;高级数据安全工程师：（1）负责部门业务数据安全合规，进行风险识别评估，提供业务可落地的安全解决方案，构建智能感知的风控安全产品；（2）完成数据安全技术理论攻尖及对应的原型验证，配合开发人员进行原型系统的产品化； （3）参与云安全产品预研、需求分析及技术方案设计。详情：&lt;a href=&quot;https://job.alibaba.com/zhaopin/position_detail.htm?positionId=26446&quot;&gt;云零售 - 高级数据安全工程师/专家&lt;/a&gt;&lt;/li&gt;&lt;li&gt;高级数据研发工程师：（1）负责阿里巴巴Uni-marketing大数据产品中（数据银行，策略中心等）偏用户触发的数据计算，满足用户个性化诉求；（2）基于阿里海量数据和大数据引擎，解决的场景是：根据不同用户需求，在运行时决定底层的数据和计算引擎。详情：&lt;a href=&quot;https://job.alibaba.com/zhaopin/position_detail.htm?positionId=45069&quot;&gt;云零售 - 高级数据研发工程师/专家&lt;/a&gt;&lt;/li&gt;&lt;li&gt;高级数据仓库工程师：（1）负责阿里商家（品牌商、中小商家）的对外数据产品（数据银行、策略中心、客户运营平台、智慧门店，智慧快闪店）的数据研发，驱动业务成长；（2）基于阿里海量数据的数据仓库建设和数据分析，同时针对各业务场景探索大数据解决方案；（3）构建服务于品牌商和第三方开发者的安全的数据服务技术方案。详情：&lt;a href=&quot;https://job.alibaba.com/zhaopin/position_detail.htm?positionId=46190&quot;&gt;云零售 - 高级数据仓库工程师/专家&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;b&gt;我自己就在数据科学应用团队做数据安全，所以我对数据安全相关岗位的了解最深入&lt;/b&gt;。不过上述岗位我都有一定的了解，就算不了解也可以请团队的其它小伙伴们回答嘛。&lt;/p&gt;&lt;h2&gt;系统工程团队招聘岗位&lt;/h2&gt;&lt;p&gt;系统工程团队主要与开发打交道，考虑如何将分析结果科学、合理地展现给商家。这一部分的职位我只了解一部分，因此我特别请系统工程团队的同学撰写了一份介绍~&lt;/p&gt;&lt;p&gt;&lt;b&gt;如果对系统工程团队感兴趣，请给这位同学发邮件：aiqiang.gaq@alibaba-inc.com。&lt;/b&gt;当然，也可以先联系我了解情况。职位详情：&lt;a href=&quot;https://job.alibaba.com/zhaopin/position_detail.htm?positionId=34974&quot;&gt;云零售 - 高级Java开发工程师&lt;/a&gt;&lt;/p&gt;&lt;blockquote&gt;一、场景和挑战描述：&lt;br&gt;&lt;br&gt;云计算和大数据是阿里巴巴集团的战略之一。阿里的大数据，在规模、维度、全量性等方面，都居于世界领先地位。构建在大数据之上的阿里巴巴品牌数据银行，目标是为客户提供人货场全方面、全维度的分析和资产沉淀，是新零售的重要抓手。 &lt;br&gt;&lt;br&gt;以新零售为突破点，促进销售升级、零售升级，间接地促进制造业升级，促进供给侧改革，为国家制造2025等宏观计划增砖添瓦，为经济结构转型和经济腾飞做出贡献，为实现民族复兴贡献自己的智慧和力量。你有没有心动？这不是说大话，而是让我们搞软件和IT技术的能够融入国家大发展、民族和国家强盛的利益关系链，是我们每个人输出自己的智慧和力量的终局作用域。 &lt;br&gt;&lt;br&gt;这里的海量和大数据指的是万亿级别的数据规模，进行实时OLAP分析，要求秒级返回，这个技术挑战，你有方案吗？无所谓你想到了什么方案，在这里你都可以尝试，你都可以探索，只要能解决问题！&lt;br&gt; &lt;br&gt;二、职位要求&lt;br&gt;1、具备扎实的计算机基础，包括操作系统、编程语言、数据结构、数据库、软件工程等知识 &lt;br&gt;2、JAVA基础扎实，包括JVM、IO、多线程、并发、网络，深刻理解面向对象、设计原则、封装抽象等；  &lt;br&gt;3、熟练使用常用的Java技术框架，并对java web的各种开源框架如Spring、Spring Boot等有深入的应用和优化经验，掌握它的原理和机制；  &lt;br&gt;4、熟悉关系数据库、NoSQL、缓存、消息队列、RPC等内部机制；  &lt;br&gt;5、学习能力强，有较强的问题分析和处理能力，具有团队合作精神。&lt;br&gt;&lt;br&gt;符合以下经验者优先：&lt;br&gt;1、有大数据相关分布式系统（如Druid、GreenPlum、Kylin、Impala、HBase、Spark等）的开发/应用优化经验  &lt;br&gt;2、对高并发、高稳定可用性、高性能、大数据处理有过实际项目及产品经验者  &lt;br&gt;3、有大数据产品、中间件技术解决方案者 &lt;br&gt;4、有抽样统计、近似计算、数据仓库、OLAP相关理论和开发经验者&lt;br&gt;&lt;br&gt;三、补充&lt;br&gt;本部门也在找数据安全和隐私保护技术人才，职位要求一样。联系方式一样。&lt;br&gt;&lt;br&gt;如果你想对大学学到的微积分、概率等基础数学工具有一个温故知新，如果你想对前沿隐私保护技术有一定的理论认知，如果你还想把这些数学知识和隐私保护理论应用到工程中解决实际问题，如果你还想在进行机器学习和数据挖掘的时候也保护隐私，那么我们这里绝对是你综合运用各种理论和知识解决实际问题的绝佳场所。&lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2017-12-21-32211518</guid>
<pubDate>Thu, 21 Dec 2017 00:00:00 +0800</pubDate>
</item>
<item>
<title>戏说密码学——比特币外传</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2017-05-15-26908559.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/26908559&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2c6a2c2c3c72b0a6041120c61e2e42e2_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;恭喜伍前红老师开通了自己的微信公众号“舌尖上的密码学”！公众号上的第一篇文章《比特币外传》文采飞扬，用一个幽默的故事讲述了比特币历史。比特币的诞生与发展充满了曲折，随着5月13日勒索病毒“WannaCry”的爆发，有关比特币的讨论又一次激烈了起来。比特币到底是怎么回事？它是如何诞生并发展起来的？为何近期的勒索病毒均只允许比特币支付？伍教授的故事向大家呈现了一个很生动的答案。&lt;br&gt;&lt;/p&gt;&lt;p&gt;我在本专栏转发此篇文章，标明出处：&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzU1MzA3MTAwMQ==&amp;amp;mid=2247483660&amp;amp;idx=1&amp;amp;sn=3bf91d53f08b66bf8600c1a7514d2781&amp;amp;chksm=fbf939facc8eb0ecc771c3bd7fb64692c73f97e4fc5f68f9dd1fc687c194a5e6f844b536f552&amp;amp;mpshare=1&amp;amp;scene=1&amp;amp;srcid=05140HuhcALW2w0Nq6gUw6Ub#rd&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;比特币外传&quot;&gt;比特币外传&lt;/a&gt;。在转发之余，我尽我所能补充故事背后的事件，希望能让大家更好地了解比特币的历史，对比特币有一个更加形象的了解。&lt;/p&gt;&lt;p&gt;本转载已经经过伍前红教授的授权，进一步转载请注明出处和文章的原始出处。感兴趣的知友们可进一步关注伍前红教授的公众号：舌尖上的密码学。&lt;/p&gt;&lt;blockquote&gt;话说比特币，大家都叫他比娃，身世很可怜，娘亲是谁也不知道，比娃是08年底生的，生下来都没娘，也没奶水吃，他爹据说叫中本聪，村里人都瞧不上他，可能是个外来户，不会种地放羊养牛啥的，只会捣糨糊，就一天到晚磨米糊糊喂比娃。&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-237a60823ab3d0600120dc04132e4b2f_r.jpg&quot; data-rawwidth=&quot;1700&quot; data-rawheight=&quot;2200&quot;&gt;&lt;b&gt;2008年中本聪发表的论文&lt;/b&gt;（来源：&lt;a href=&quot;http://www.lucilladearcangelis.it/pdfPaper/bitcoin.pdf&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;lucilladearcangelis.it 的页面&quot;&gt;http://www.lucilladearcangelis.it/pdfPaper/bitcoin.pdf&lt;/a&gt;）&lt;/p&gt;自互联网诞生后，很多学者提出了虚拟货币的概念，并尝试构造一种数字货币。但是这些货币一直无法解决一个重要的问题：二次消费（Double Spending）。日常的纸币在消费时需要把纸币直接交给对方，纸币消费后是无法在手中保留的。但是数字货币不行，因为计算机中存储的东西可以任意复制和粘贴，用户完全可以把电子货币复制一份，并用复制的电子货币重复完成交易。一直以来，解决二次消费问题的方法是引入一个类似银行的第三方（也成为重要认证机构）。所有的交易信息都要告诉第三方，有它来确认用于交易的电子货币在之前是不是已经被使用过了。很显然，如果交易规模太大，或者第三方的安全出现问题，整个电子货币系统就会崩溃。&lt;p&gt;2008 年 10 月 31 日，一个化名中本聪（Nakamoto S.）的人在一个很不知名的密码学论坛上公开了一篇题目为《比特币：一种点对点电子现金系统》（BitCoin: A Peer to Peer  Electronic Cash System）的论文。正是提出了比特币的概念。然而，到现在为止我们也不知道这个中本聪到底是谁，甚至连这个人是哪个国家的都不知道。从名字上看，这个人似乎是一个日本人，名字的粗略含义是“认真思考”。不过从论文中我们可以肯定的是，这个人精通密码学，并且有很不错的数学素养。&lt;/p&gt;&lt;p&gt;这篇论文刚发布的时候，在业界并没有得到什么反响。中本聪本人似乎一直在编写比特币系统的代码。2009年1月，比特币开源客户端上线。同时，中本聪通过挖矿的方式，获得50个比特币，这也是第一批比特币。&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;一直到1岁6个月大的时候遇到一个好心人，他爹一大堆糊糊换到两块披萨，才给比娃开荤，你说，也是奇了，这娃开荤就能吃俩披萨，吃完还下地走路了，然而比娃还没走出去多远，一转身，他爹也不见了，至今也没个信儿。&lt;/blockquote&gt;2010年5月17日，也就是中本聪发布论文的大约1年半后，来自美国佛罗里达州的程序员拉兹洛▪汗耶克（Laszlo Hanyecz）使用比特币交易平台发起了一个有关披萨的交易。他希望花费10000个比特币购买两张披萨。2010年5月22日，这笔交易得到了确认。一位来自英国的卖家通过信用卡完成了此笔交易。这是历史上首个比特币的真实交易，5月22日也成为了一个历史性的日子，称为比特币披萨日（Bitcoin Pizza Day）。&lt;p&gt;至此以后，比特币社区出现了一个单位，叫做披萨指数（Pizza Index），这个值标注了所购买的披萨现在值多少钱，也就等价于10000比特币现在值多少钱。当时披萨指数为41美金。截至目前为止，披萨指数已经达到1亿美金。不知道当时吃掉这披萨的汗耶克现在作何感想…（感谢&lt;a href=&quot;http://www.zhihu.com/people/72036ce918812daac46c75d7cac1e7d2&quot; data-hash=&quot;72036ce918812daac46c75d7cac1e7d2&quot; class=&quot;member_mention&quot; data-hovercard=&quot;p$b$72036ce918812daac46c75d7cac1e7d2&quot; data-editable=&quot;true&quot; data-title=&quot;@James Swineson&quot;&gt;@James Swineson&lt;/a&gt; 在评论中的指正，原始文章中Index翻译成了索引值，实际应该翻译成指数）&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-895a07a267936f0e16b23fc19bea73fc_r.jpg&quot; data-rawwidth=&quot;800&quot; data-rawheight=&quot;599&quot;&gt;&lt;b&gt;拉兹洛▪汗耶克购买的披萨&lt;/b&gt;（来源：&lt;a href=&quot;https://en.bitcoin.it/wiki/File:Laszlospizza.jpg&quot; data-editable=&quot;true&quot; data-title=&quot;en.bitcoin.it 的页面&quot; class=&quot;&quot;&gt;https://en.bitcoin.it/wiki/File:Laszlospizza.jpg&lt;/a&gt;）&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;比娃没娘亲，爹也没了，和所有没爹娘管的娃一样，比娃一天到晚就在街头混，被流氓黑老大当肉票，还得陪着黑老大吸粉、逛窑子、抢地盘、偷鸡摸狗，活一天算一天，还好这娃天生异禀，遗传了他老爹的分身术、隐身术和金钟罩，不怕挨揍，练过综合格斗的徐教练都打不倒他，比一代雷宗师还能挨打，不过据说怕另一代闫大师隔山打牛，怕套路。还好比娃饭量奇大，长得快，不管咋说，在小混混大混混欺负下居然活了下来，越长越帅，比他爹还帅（村里没人见过他爹）。&lt;/blockquote&gt;&lt;p&gt;比特币的构造基于密码学，所使用的密码学算法至今仍然认为是安全的。与之前的电子货币不同，比特币具有非常好的安全特性，如匿名性、交易不可否认性等，因此比特币发展迅速。&lt;/p&gt;&lt;blockquote&gt;各路黑老大都喜欢带着比娃，提个密码箱，觉得倍儿有面子，最惊险的一次是新丝路黑老大带着他得罪了村长，村长用媳妇钓鱼，比娃漏了马脚，村长带着保镖把新丝路黑老大给灭了，比娃跑得快，捡了一条小命。&lt;/blockquote&gt;&lt;p&gt;比特币虽然看似非常安全，但仍然有一些安全漏洞。最初的比特币交易记录中没有应用区块链（Blockchain）技术，因此交易不需要认证，这也意味着恶意用户可以绕过比特币的限制，创造无限量的比特币。2010年8月15日，一次交易竟然凭空创建了1840亿个比特币。几小时后，此次交易被发现，交易记录从比特币记录中移除，比特币开发者们也修复了此漏洞。这是比特币历史上唯一一个被发现并利用的安全漏洞。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7bc7e4a18d93c4cd7e68e4ea5179f294_r.png&quot; data-rawwidth=&quot;350&quot; data-rawheight=&quot;175&quot;&gt;&lt;b&gt;Mt.Gox公司标志&lt;/b&gt;（来源：&lt;a href=&quot;https://en.bitcoin.it/wiki/File:MtGox.png&quot; data-editable=&quot;true&quot; data-title=&quot;en.bitcoin.it 的页面&quot;&gt;https://en.bitcoin.it/wiki/File:MtGox.png&lt;/a&gt;）&lt;/p&gt;&lt;p&gt;然而，比特币由于一直没有被政府部门承认，因此其交易一直处于不合法状态。但是由于比特币绝佳的安全特性，比特币一直被用于黑市交易，如洗钱、违禁品交易等。2011年6月，高科传媒发表一篇文章，指出一个叫做Silk Road的网站接收比特币支付，出售违禁品。同月，比特币交易平台被曝光出用户信息泄露问题。承担90%交易的比特币平台Mt.Gox承认用户信息遭到泄露，共计泄露了60000份用户名、电子邮件和密码，600人的比特币被盗。Mt.Gox在7天内停止了交易。这也使得比特币的信任值大幅下降。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;此后黑老大们把比娃盯得紧，关黑屋里，2013年比娃逮着个机会偷偷拿了一个黑老大的500欧大钞，在上面写着叔叔阿姨救我，被村西边默大婶捡到，要是以前，嘿嘿，这个大婶家可不是吃素的，比那些黑老大还要黑还要大，因为横过分了，被前村长、现任村长，还有文娱干事和体育干事联合起来揍了一顿，洗心革面，开了个铁铺，一心打铁，现在也是村里大户，把比娃收养了。&lt;/p&gt;&lt;p&gt;比娃由于说不清爹娘，一直没户口，默婶也只能给他弄个暂住证，没法摇号买车，还好比娃会天生会网遁，比土行孙还厉害，只有有网，唰，就跑不见了，虽然比娃时不时还被黑老大拎回去帮着提箱子，但总的日子越过越好，走路也比以前神气了，匪气少了些，还有点儒雅，大家有时不再叫他比娃，有姑娘背地里叫他比尔先生了。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2013年，比特币终于得到了国家层面的认可。2013年7月，由金融监管权威机构监管的德国比特（Bitcoin Deutschland）成为了首家与银行建立直接合作关系的欧洲比特币交易平台，该公司同意与德国Web 2.0银行Fidor合作将比特币兑换为其他币种。2013年8月，德国金融部（Ministry of Finance）已经正式认可比特币成为一种“货币单位”（Currency Unit）和“私有资产”（Private Money）。德国政府正式承认了比特币的合法货币地位，德国也成为了全球首个认可比特币为合法货币的国家。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;村长在村东边开了一家空空小店，雇了一个叫安培的斜眼老大爷做掌柜，专做些无本的买卖，跑腿的事都让一个叫円的店小二在干，虽然现在破落了些，但安掌柜家有个叫仓井的闺女，从小特能挣钱，攒了不少银子，还够花几年，但坐吃山空啊。&lt;/p&gt;&lt;p&gt;安掌柜看默大婶的铁铺自从有了比娃，生意是越做越好，动起了心思，对仓井说，你也老大不小了，该有个归宿了，仓井脸一嘟嘴，才不呢，人家还小嘛，人家要陪ちち一辈子。&lt;br&gt;&lt;/p&gt;&lt;p&gt;安掌柜眼神闪过一丝不易觉察的不屑，我看你还是惦记着小二円吧，仓井啊，小二円细胳膊细腿，每次出门都被揍得鼻青脸肿，円没出息，你不能没出息啊，这空空小店你就不想做成大店，我看村西默婶的铁铺生意是越来越来好了，那帮默婶做生意的小伙还不赖，是把做生意的好手，虽然长得有点黑。&lt;br&gt;&lt;/p&gt;&lt;p&gt;仓井脸一红，爹爹说的是比哥哥啊，井井都听爹爹的安排，井井一定做个大店，伺候好ちち。安掌柜嘴角飞快完成了下弯上翘到恢复正常，经历了一个正弦函数完整周期，正色道，我已经找村长他妈看过日辰，村长东家也同意了，4月1日是个好日子，把比尔给你招过来，出门都带上，爹知道你的心思，小二円也给你留着，你们同心协力，做个大店，大大的有。&lt;br&gt;&lt;/p&gt;&lt;p&gt;安掌柜心思慎密，知道这不是什么光宗耀祖的事，也没敢大操大办，只想悄悄的进村，打枪的不要。&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;随着比特币被德国认可，有国家陆续开始接受比特币。2013年10月，加拿大温哥华推出了世界上首个比特币ATM机。2013年11月，英国维珍银河公司宣布接受用户使用比特币预定机票。&lt;/p&gt;&lt;p&gt;然而，比特币在其它国家的推行并不顺利。美国对比特币持有谨慎态度，认为需要长时间发展后才能确定其有效性。俄罗斯对比特币持强硬态度，韩国拒绝承认比特币的货币地位，荷兰警告比特币风险。泰国将以下活动视为违法：买卖比特币、用比特币买卖任何商品或服务、与泰国境外的任何人存在比特币的往来。2013年12月，中国人民银行宣布所管辖银行不接受比特币，这也使得比特币价值暴跌。但随后比特币价值又得到回升。&lt;/p&gt;&lt;p&gt;日本对比特币的态度由不接受转变为了接受。2014年6月，日本执政党自民党表示，决定暂时不监管比特币。2015年8月，日本政府考虑比特币监管事宜。2016年5月，日本首次批准数字货币监管法案，并定义为财产。2017年4月1日，日本正式通过相关法律，正式确认比特币为一种合法的支付方式。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;没想到这事还是传出去了，引起了村南边一个姓澳的大户人家的注意，这户人家有些来头，是前村长的二儿子，因为老是顶撞他老爹，被他老爹赶到村南边一个到处都是鸵鸟屎的小岛上，没想到这混小子因祸得福，千千万万年下来，这些鸵鸟屎变成了矿石，老值钱了，澳大户看到有了比娃，默婶的铁铺红红火火，安掌柜的小店要变大店的样子，一天到晚琢磨怎么把比娃撬过来。&lt;/p&gt;&lt;p&gt;想一想比娃已经不是当年小黑屋的比娃，当初我对你爱理不理，现在你让我高攀不起，不好办啊，突然眼睛一亮，澳元波娃，就是她，不信他比娃不动心，可是澳大户眼神很快暗了下去，澳元波娃可是澳大户的黄花大闺女，心疼啊，澳大户心一横，不管了，舍不得孩子套不着狼，有了比娃的隐身术，咱的生意也可以做到全村了，托了人和比娃说合。&lt;/p&gt;&lt;p&gt;比娃先是有些犹豫，那人说了澳元波娃如何如何，比娃窃喜，却淡淡应道，上半年是没有时间了，下半年可以安排，那人飞也似地回去，回主人话，比娃说下半年可以。&lt;/p&gt;&lt;p&gt;2017年5月12日，澳大户迫不及待向村里宣布，比娃和他家的澳元波娃好上了，问了卦，7月1日，下半年的第一个日子是个好日子。这事有些突然，村里大妈买菜时候都在互相打听，这个比特币是个什么来历，怎么这些大户人家，生意人家，有头有脸的，争着要把自家的闺女A元B娃、E朵兰D娜什么的许给比特币，有的说比特币有神力，谁家姑娘许了他，家里马上黄金满屋，要什么有什么。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2017年5月12日，澳大利亚政府宣布，澳大利亚将于2017年7月1日起确认比特币为合法货币，并将废除比特币商品与服务税。&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;才一日，5月13一大早，突然传疯了，说比尔得了一种叫什么比特币病毒的病，得这病比尔自己倒没事，全村总共才195户人家，把村里99户人家都祸害了，前村长家差点弄出人命。&lt;br&gt;&lt;/p&gt;&lt;p&gt;各家掌柜的，东家，买菜的，男人女士，大人小孩都议论纷纷，村里一些姑娘可担心了，一些男士恨得牙痒痒的，还有看热闹的，一时谣言漫天飞，不知道比特币怎么啦，不是刚和仓井才好上么，怎么村里其他家里也出事了，有几户人家的私人医生说了，病根出在村长家那个也叫比尔的公子身上，他卖有洞的连裤袜给村里，就他一家卖连裤袜，不退货还不包修，都好多年了，前不久才说可以给大家弄个补丁把洞遮住，没来得及遮住的都被祸害了，是不是真的啊，出了这么大的事，比娃和澳元波娃的好事会不会黄，村长和村支书会不会出来表个态，比特币以后还会祸害村里么，比特币会不会被做掉。&lt;/p&gt;&lt;p&gt;欲知后事如何，啪！（敲桌子）且听下回分解。&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2017年5月13日，全球爆发了勒索病毒WannaCry，而这个病毒的一大特点就是只允许比特币支付勒索金。这个病毒利用了微软已经于2017年3月发现并退出相关补丁的漏洞，利用网络的445端口完成远程代码执行功能。这使得很多人意识到了比特币的一大重要的问题：因为比特币的匿名性，支付方只能通过比特币交易平台确认支付成功，但无法知道被支付方是谁。不光是支付方不知道，除了被支付方外的所有人都无法通过技术手段确认被支付方是谁。这也使得比特币成为勒索的绝佳平台：无法追踪被支付方的身份，只能让犯罪分子逍遥法外。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-35efbcafb813a4407b6d29d94f30b5f7_r.jpg&quot; data-rawwidth=&quot;817&quot; data-rawheight=&quot;565&quot;&gt;&lt;b&gt;WannaDecryptOr勒索对话框&lt;/b&gt;（来源：&lt;a href=&quot;http://www.59.cn/service/htm/page/3909.htm&quot; data-editable=&quot;true&quot; data-title=&quot;全球爆发Wannacry病毒 59互联推出紧急应对措施-服务中心,客户服务,59互联-中原最大的服务器租用/主机租用服务提供商,机房服务专家&quot;&gt;全球爆发Wannacry病毒 59互联推出紧急应对措施-服务中心,客户服务,59互联-中原最大的服务器租用/主机租用服务提供商,机房服务专家&lt;/a&gt;）&lt;/p&gt;&lt;p&gt;后事如何？且听下回分解。&lt;/p&gt;&lt;h2&gt;参考资料&lt;/h2&gt;&lt;ol&gt;&lt;li&gt;秦波，陈李昌豪，伍前红等．比特币与法定数字货币．密码学报，2017，4(2)：176-186．&lt;a href=&quot;http://www.jcr.cacrnet.org.cn:8080/mmxb/CN/Y2017/V4/I2/176#&quot; data-editable=&quot;true&quot; data-title=&quot;比特币与法定数字货币&quot;&gt;比特币与法定数字货币&lt;/a&gt;．&lt;/li&gt;&lt;li&gt;木云三君．一张图了解比特币发展史．&lt;a href=&quot;http://www.360doc.com/content/13/1228/09/5052258_340704469.shtml&quot; data-editable=&quot;true&quot; data-title=&quot;一张图了解比特币发展史&quot;&gt;一张图了解比特币发展史&lt;/a&gt;．&lt;/li&gt;&lt;li&gt;Wikipedia. History of Bitcoin. &lt;a href=&quot;https://en.wikipedia.org/wiki/History_of_bitcoin&quot; data-editable=&quot;true&quot; data-title=&quot;History of bitcoin&quot; class=&quot;&quot;&gt;History of bitcoin&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Bitcoinwiki. Laszlo Hanyecz.&lt;a href=&quot;https://en.bitcoin.it/wiki/Laszlo_Hanyecz&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;Laszlo Hanyecz - Bitcoin Wiki&quot;&gt;Laszlo Hanyecz - Bitcoin Wiki&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;玩币族．比特币是合法的吗？哪些国家承认比特币是合法的？比特币合法吗？&lt;a href=&quot;http://www.wanbizu.com/baike/201610257746.html&quot; data-editable=&quot;true&quot; data-title=&quot;比特币是合法的吗？哪些国家承认比特币是合法的？比特币合法吗？_玩币族&quot; class=&quot;&quot;&gt;比特币是合法的吗？哪些国家承认比特币是合法的？比特币合法吗？_玩币族&lt;/a&gt;．&lt;/li&gt;&lt;li&gt;比特娱乐．4月1日日本将正式认可比特币为合法支付货币．&lt;a href=&quot;http://www.bitebi988.com/1221&quot; data-editable=&quot;true&quot; data-title=&quot;4月1日日本将正式认可比特币为合法支付货币 | 比特币娱乐资讯网&quot;&gt;4月1日日本将正式认可比特币为合法支付货币 | 比特币娱乐资讯网&lt;/a&gt;．&lt;/li&gt;&lt;li&gt;全景网．澳大利亚政府将于7月1日承认比特币为货币．&lt;a href=&quot;http://www.p5w.net/weyt/201705/t20170515_1794731.htm&quot; data-editable=&quot;true&quot; data-title=&quot;澳大利亚政府将于7月1日承认比特币为货币_WE言堂_WE言堂_全景网&quot;&gt;澳大利亚政府将于7月1日承认比特币为货币_WE言堂_WE言堂_全景网&lt;/a&gt;．&lt;/li&gt;&lt;/ol&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2017-05-15-26908559</guid>
<pubDate>Mon, 15 May 2017 00:00:00 +0800</pubDate>
</item>
<item>
<title>DEF CON 24 - 大漩涡桌游 - 后附个人声明</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2017-03-02-25510575.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25510575&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c6bb2c88a9e5f2a4c0f2cb59bc4ee8ae_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;前言&lt;/h2&gt;各位知友们好！这次继续为大家带来国际顶级安全会议DEF CON 24的一个视频。&lt;p&gt;与之前我经常制作的DEF CON Crypto &amp;amp; Privacy（密码与隐私）系列视频相比，这个视频从专业性上讲难度就小得多，思想也很有意思。不过由于视频中包含很多我不了解的专业术语，因此翻译着实费了一番功夫，而且我怀疑翻译结果仍然有很多错误的地方。不过也没关系，只要能帮助知友们理解大意，引起大家的兴趣，甚至让部分知友可以追随演讲者给出的链接深入理解视频的基本思想和贡献，我觉得这就够了。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;英文题目：Maelstrom: Are you playing with a full deck?&lt;/li&gt;&lt;li&gt;中文题目：大漩涡桌游：你玩的转吗？（其实我觉得这个翻译也不太恰当，因为原始题目实际上用了个双关）&lt;/li&gt;&lt;li&gt;YouTube：&lt;a href=&quot;https://www.youtube.com/watch?v=hZVcOxUxVEQ&amp;amp;t=188s&quot; data-editable=&quot;true&quot; data-title=&quot;youtube.com 的页面&quot; class=&quot;&quot;&gt;https://www.youtube.com/watch?v=hZVcOxUxVEQ&amp;amp;t=188s&lt;/a&gt;&lt;/li&gt;&lt;li&gt;演讲人员：Shane Steiger，某知名科技公司安全架构师（他本身没透露自己所在公司的名称），拥有注册信息系统安全师（CISSP）认证&lt;/li&gt;&lt;li&gt;关键词语：攻击生命周期，桌游&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5020874016082e841ee41f6b01c34345_r.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;85&quot;&gt;&lt;h2&gt;攻击生命周期&lt;/h2&gt;&lt;p&gt;谈到网络攻击，一般想到的都是渗透测试啦，漏洞利用啦，入侵啦等等的名词。但如果稍微深入思考，就会发现这些名词对应的都是具体的攻击技术，而实施攻击并非只靠技术。实际上，攻击者要经历很多阶段，在不同的阶段达到不同的目标，最终实现攻击目的。从这个角度看，安全从业人员或许不仅可以从防御某个特定攻击技术的角度来抵挡攻击，更可以站在攻击者的立场上，以各个阶段为出发点实施防御。&lt;/p&gt;&lt;p&gt;如果想践行这一理念，首先要做的是：定义攻击者的各个攻击阶段。Steiger给出了一个很好的参考，即从洛克希德·马丁网络狙杀链（Lockheed Martin Cyber Kill Chain）出发，定义攻击者的攻击阶段。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-3eec4d3bffa6c9f3e7bb479de7e70910_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;洛克希德·马丁网络狙杀链给出了哪些攻击阶段呢？攻击者依次会经历如下几个阶段：&lt;br&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;侦查阶段（Reconnaissance）：收集攻击目标的信息&lt;/li&gt;&lt;li&gt;武器化阶段（Weaponization）：构建可能可以使用的攻击工具，可以说是广义角度的渗透&lt;/li&gt;&lt;li&gt;传递阶段（Delivery）：通过某种方法将攻击工具发送到攻击目标&lt;/li&gt;&lt;li&gt;利用阶段（Exploitation）：由攻击工具触发系统中的漏洞&lt;/li&gt;&lt;li&gt;安装阶段（Installation）：执行恶意脚本/安装恶意程序&lt;/li&gt;&lt;li&gt;命令&amp;amp;控制阶段（Command &amp;amp; Control）：在攻击目标上开启后门，通过后门传递指令，控制攻击目标&lt;/li&gt;&lt;li&gt;攻击目的阶段（Act on Objectives）：实现最终的攻击目的&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;仔细思考一下，整个攻击过程确实由这7个阶段来完成。只不过根据攻击目的的不同，各个阶段的攻击时间、攻击者所花费的开销等会有所不同。&lt;/p&gt;&lt;p&gt;定义了攻击流程后，我们可以试着从攻击流程的角度考虑防御方法，将不同的防御方法归类到不同的攻击流程上来。例如：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;侦查阶段防御技术：指定使用特定企业的邮箱或企业内部邮箱、使用VPN技术等&lt;/li&gt;&lt;li&gt;武器化阶段防御技术：安全软件开发、漏洞检测等&lt;br&gt;&lt;/li&gt;&lt;li&gt;传递阶段防御技术：企业内部邮件审计、邮件附件审查等&lt;/li&gt;&lt;li&gt;利用阶段防御技术：限制Java、Flash、Adobe Reader等插件的执行等&lt;/li&gt;&lt;li&gt;安装阶段防御技术：使用代理、抗恶意软件安装等&lt;/li&gt;&lt;li&gt;命令&amp;amp;控制阶段防御技术：使用代理、命令审查、网络流访问控制&lt;/li&gt;&lt;li&gt;攻击目的阶段防御技术：命令审查、数据流审查等&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aee745406d5d8ce71e828dfcc6c1b1a7_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;如果我们能把所有攻击技术和各个阶段一一对应起来，给定了一个完整的攻击流程后，根据其所使用的各个攻击技术反过来定位攻击阶段，就能形成一个非常清晰的攻击者攻击声明周期了，而事实也确是如此。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-815247e4ff59f50532a0417c35606d19_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5020874016082e841ee41f6b01c34345_r.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;85&quot;&gt;&lt;h2&gt;换一种方法思考防御&lt;/h2&gt;&lt;p&gt;既然如此，我们可以换一种角度思考攻击与防御。攻击实际上也是一个项目计划。攻击者（有意无意地）遵循着开发计划，一步一步地实施攻击。我们知道，提到项目计划，就有项目计划的4要素：范围（Scope）、时间（Time）、花销（Cost）、质量（Quality）。&lt;br&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;范围对应攻击目标范围&lt;br&gt;&lt;/li&gt;&lt;li&gt;时间对应攻击执行周期&lt;/li&gt;&lt;li&gt;花销对应攻击所需的花费&lt;/li&gt;&lt;li&gt;质量对应攻击结果&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f72dbdfc707cc1487e651ec503f4814f_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;因此，如果防御者能够通过某些方式影响攻击者的攻击计划，也就达到了防御目的。&lt;br&gt;&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5020874016082e841ee41f6b01c34345_r.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;85&quot;&gt;&lt;h2&gt;大漩涡桌游&lt;/h2&gt;&lt;p&gt;哎？等等？怎么听这个过程那么耳熟呢？我们有攻击技术，有防御技术，有攻击者和防御者，有各个攻击阶段，有攻击目的。如果把它们组合到一起，不就是一款桌游嘛！是的，Steiger这个极客就真的制作了这样一款桌游，桌游名字就叫做：大漩涡。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c97aecdbaa58d9c612906415b458e04e_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;桌游板上面标注了上述7个阶段：侦查、武器化、传递、利用、安装、命令&amp;amp;控制、攻击目的。扮演攻击者的玩家目的是用攻击技术最终走到漩涡中心，而扮演防御者的玩家目的是把攻击者从漩涡中赶出去。这就是“大漩涡”这个名字的由来了。&lt;/p&gt;&lt;p&gt;我们应该还有攻击卡牌和防御卡牌呀。Steiger根据著名框架ATT&amp;amp;CK Framework所整理的攻击技术，构建了超过60种用红色表示的攻击卡牌。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1a59934ef1c1f69d86b3f1526e0cdb92_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;Steiger进一步调研了现今的流行防御技术，构建了超过70种用蓝色表示的防御卡牌。&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f95a51252f755660c2d4651e899a245_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;根据攻击者的身份和攻击目的，Steiger又分别构建了身份卡牌和攻击目的卡牌。&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-ce0676f2c876ba331f61fba0eaac6e55_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e2444836c4193c366e55cbe6eb829499_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;这个游戏做出来大概是这个样子：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a973012ce7c18b55a4528b9646bdd26a_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;为什么我觉得这个工作很有意思呢？有如下几点：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;通过桌游，可以向大众普及安全知识。相信《三国杀》（桌游）的推出让不少知友们回过头来阅读了《三国演义》甚至是《三国志》。而《欧陆风云》（电脑游戏）的推出让无数玩家对欧洲历史产生了浓厚的兴趣。这个桌游如果确实好玩的话，也会促使玩家们回过头理解安全的相关知识。而这不就是科普的本质嘛！&lt;/li&gt;&lt;li&gt;通过桌游，可以为企业安全意识培训提供优秀的方法。很多公司的安全意识培训都是以讲座、授课的形式进行，考核方式一般就是在线答题等。如果某个企业能够参考这种方法进行安全意识培训，相信所有的员工都会乐意参与，并且会极大地增加学习的主动性。&lt;/li&gt;&lt;li&gt;通过桌游，可以为安全领域吸引人才。安全的一大问题就是相对比较抽象，门槛比较高。这对初学者来说实际上形成了一个天然的阻碍。另一方面，安全领域实在是太宽泛了：大到IT审计、IT治理，小到一个安全协议的设计，一个密码算法的调用，背后都是一大片知识。初学者很容易在这么多领域内挑花了眼。桌游可以让大家大致了解安全涉及的领域，并进一步根据自己的兴趣选择合适的领域进行研究。&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5020874016082e841ee41f6b01c34345_r.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;85&quot;&gt;&lt;h2&gt;有价值的链接&lt;/h2&gt;&lt;p&gt;说了这么多，哪里能下载到呢？我这里列举视频中给出的几个链接，感兴趣的知友们可以参考。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/maelstromthegame/defcon24&quot; data-editable=&quot;true&quot; data-title=&quot;maelstromthegame/defcon24: Postings for DEF CON 24&quot; class=&quot;&quot;&gt;maelstromthegame/defcon24: Postings for DEF CON 24&lt;/a&gt;。这个项目的GitHub。里面包含了游戏规则、卡牌介绍、DEF CON视频的PPT等内容。&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://vimeo.com/177304576&quot; data-editable=&quot;true&quot; data-title=&quot;vimeo.com 的页面&quot;&gt;https://vimeo.com/177304576&lt;/a&gt;。这是此桌游试玩的演示视频。演示视频还挺逗的，最后防御者出了个杀手锏：&lt;b&gt;叫警察卡牌&lt;/b&gt;，令攻击状态退回到侦查阶段。这一下把攻击方搞的无语了…&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://attack.mitre.org/wiki/Main_Page&quot; data-editable=&quot;true&quot; data-title=&quot;ATT&amp;amp;CK&quot;&gt;ATT&amp;amp;CK&lt;/a&gt;。MITRE公司给出的ATT&amp;amp;CK框架。这个框架到现在为止（2017年3月2日）列举了127个典型攻击手段。对安全感兴趣的知友们可以把它当作一个攻击技术小词典。&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://capec.mitre.org/&quot; data-editable=&quot;true&quot; data-title=&quot;Common Attack Pattern Enumeration and Classification&quot;&gt;Common Attack Pattern Enumeration and Classification&lt;/a&gt;。一个更全的攻击技术目录，如果说ATT&amp;amp;CK是个小词典，那CAPEC就是个辞海了。&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5020874016082e841ee41f6b01c34345_r.jpg&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;85&quot;&gt;&lt;h2&gt;写在最后：个人声明&lt;/h2&gt;&lt;p&gt;回想至今，在知乎上答题/写专栏也有2年多了。在这2年多时间里，我在知乎上与很多优秀的知友们相识相知，可以说知乎带给了我很多东西，不论是认识朋友/前辈，还是获得了优质的知识。因此，我特别感谢这个高质量的社区，这也是我为何愿意为这个社区持续贡献知识（一些可能不是什么干货…）的主要原因。&lt;/p&gt;&lt;p&gt;2017年2月，我收到了知乎官方的推荐，成为了知乎社区“荣誉会员”的候选人之一。可以说，这是知乎社区官方对我答案和专栏文章贡献的肯定。虽然肯定是选不上的啦，但是有这样一个提名荣誉已经是对我最大的肯定了！而且客观对比，领域内其他答主的水平确实在我之上，无论是输出数量也好，输出质量也好，均超过我不是一星半点，因此我也呼吁：&lt;b&gt;关注我知乎，阅览我答案和文章的知友们为他们投上一票，他们更值得拥有“荣誉会员”这一称号！&lt;/b&gt;&lt;/p&gt;&lt;p&gt;然而，参加“荣誉会员”也好，答案入选“知乎日报”或“编辑推荐”也好，虽然给我带来了很多的认可，却也给我带来了很多的负担。一方面，我的答案深度越来越弱，语言越来越啰嗦。这是因为这样半持续性的输出几乎耗尽了我的库存。我本来也只是一个只了解一点领域内知识的普通人而已，耗尽知识存储后，答案和文章越发要抓热点，迎合更多知友的认可，反而让我无法更深入的学习并理解知识本身了。就好像我现在读论文只读Introduction，而不读后面的内容了。另一方面，答案和文章认可度的提升让我自己有点飘飘然。我明显觉得自己对待知识、对待知友们的态度越来越差（至少我自己觉得越来越差）。但我其实什么也不是。在此，我也想给所有知友们道歉。如果我的答案、文章、评论中有冒犯之处，还请知友们原谅…&lt;/p&gt;&lt;p&gt;近期几件事情也深深触动了我，让我理解到科普本身是对的，但是为了科普而科普，甚至为了科普而丢了自己本来拥有的优势，这是不可原谅的。为了一些虚荣，我其实已经迷失了方向。而在我迷失方向的时候，领域内/领域外的很多朋友们都在进步着。我在知乎上回答问题，撰写专栏，本身是为了给自己一个追新知识的契机，但我现在变成了自己最讨厌的样子。我周围朋友前几天不经意的一句话也点醒了我：“我现在觉得有时候不能浪费你的时间”。TA说这句话本身没有恶意。但我觉得，我的心态其实已经爆炸了，这不是我真正想要的。&lt;/p&gt;&lt;br&gt;&lt;p&gt;所以，借着写完毕业论文的状态，我认为是时候放下之前得到的一切，是时候重新轻装上阵，带着我5年前什么都不懂但什么都想学的态度，重新开始了。&lt;b&gt;我决定离开知乎一段时间，停止答案和本专栏的更新。&lt;/b&gt;因此，Black Hat、DEF CON优质视频的翻译和分享也将告一段落。当然了，除暂时离开知乎之外，我也有一些其它的计划和决定，但那些和知乎社区关系不大了…&lt;/p&gt;&lt;p&gt;我还会阅览知乎上的优质答案，支持好答案，为好答案点赞！另外，我仍然会前往盐Club，带着自己的热情，和优秀的答主们相见相识（当然了，要是这篇文章发布后邀请被撤销了，也是有可能的，哈哈哈）。&lt;/p&gt;&lt;p&gt;2017年3月26日，不见不散。&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2017-03-02-25510575</guid>
<pubDate>Thu, 02 Mar 2017 00:00:00 +0800</pubDate>
</item>
<item>
<title>Black Hat 2015 - 二进制自动化分析工具：angr</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2017-02-09-25150055.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/25150055&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-efb324bac4ee3dc124b0f8c941c6f586_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;各位知友新年快乐！&lt;/p&gt;&lt;p&gt;今天收到私信，我这个接近半年没有更新的专栏竟然被知乎的编辑们推荐到了App端「发现」页面的「专栏」项目中了。我个人其实感觉挺羞愧难当的。虽然下半年也完成了不少Black Hat、DEF CON视频的翻译工作，无奈手头上的事情实在太多，没能静下心来好好撰写分析文章。不过现在好啦，手上的事情基本处理完了，我也能抽出时间踏踏实实读一读材料，尽量为知友们带来高质量的国际黑客大会演讲分析。&lt;/p&gt;&lt;p&gt;今天为大家带来的视频来自Black Hat 2015，题目为：应用静态二进制分析方法寻找固件中的漏洞和后门（Using Static Binary Analysis To Find Vulnerabilities And Backdoors In Firmware）。之所以分析这个视频，是因为我非常认同此种研究：依托高校，解决实际问题，同时在顶级安全会议和顶级黑客会议上报告。我认为这才是安全应有的态度，理论和实践本身是不分家的，理论和实践的结合会做出更棒的成果！&lt;/p&gt;&lt;ul&gt;&lt;li&gt;视频YouTube链接：&lt;a href=&quot;https://www.youtube.com/watch?v=Fi_S2F7ud_g&quot; data-editable=&quot;true&quot; data-title=&quot;youtube.com 的页面&quot; class=&quot;&quot;&gt;https://www.youtube.com/watch?v=Fi_S2F7ud_g&lt;/a&gt;&lt;/li&gt;&lt;li&gt;演讲者：加州大学圣巴巴拉分校（UC Santa Barbara）教授Christophe Hauser、加州大学圣巴巴拉分校（UC Santa Barbara）博士研究生Yan Shoshitaishvili&lt;/li&gt;&lt;li&gt;关键字：嵌入式设备固件、静态分析、二进制分析&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;固件和固件中的后门&lt;/h2&gt;&lt;p&gt;嵌入式设备越来越多地出现在人们的日常生活之中。所谓嵌入式设备，简单地说就是一个可独立完成特定工作的设备，或者说是一个微型计算机。最经典的嵌入式设备就是日常生活中的手机了。当然，不光智能手机属于嵌入式设备，以前的哪些非智能手机，甚至是最早的大哥大，都可以看作是嵌入式设备。&lt;/p&gt;&lt;p&gt;和计算机类似，嵌入式设备也有硬件部分和软件部分。嵌入式设备的硬件部分就是设备本身，而软件部分就是「固件」。为什么起了这么个名字呢？因为嵌入式设备的固件一般存储在EROM（可擦写只读存储器）或EEPROM（电可擦可编程只读存储器）中。&lt;/p&gt;&lt;p&gt;注意，这两种存储器都包含同一个关键字：「只读」。当写入到此类存储器后，固件只能被读取、或被擦除后重写，但是不能修改。这也是为什么如手机、路由器等典型嵌入式设备总有一个功能为：恢复出厂设置。所谓恢复出厂设置，就是把手机的全部内容擦除，把手机重置为存储在固件中的出厂设置。&lt;/p&gt;&lt;p&gt;不过，我们总会听到一种说法：刷一下固件。一般刷固件就是把EROM或EEPROM中存储的固件删除，再重写入一个新的固件。之前的很多手机都可以通过刷固件的方式实现各种神奇的功能，比如清除系统应用程序什么的。本质上，刷固件相当于把嵌入式设备的软件系统完全替换。软件系统都被完全替换了，系统应用程序自然而然也就被替换了。&lt;/p&gt;&lt;p&gt;什么是固件中的后门呢？固件后门是指，固件的开发人员或者恶意攻击者，可以利用所谓的后门，在未得到用户授权的条件下控制或完全控制设备。&lt;/p&gt;&lt;p&gt;听起来比较抽象，我们举个例子：一般来说，手机用户需要自行设置手机的解锁口令（比如密码、九宫格什么的），只有正确输入解锁口令才能解锁手机。然而，手机的固件中存在一个后门：只要输入一个特殊的口令就可以直接解锁手机。更隐蔽的方法可能是：按10次Home键，按3次增加音量键，再按2次减小音量键，就可以解锁手机。这就是所谓的后门了。&lt;/p&gt;&lt;p&gt;后门可能不仅仅是解锁手机这么简单。如果汽车、门禁系统有后门，那可就糟糕了。举几个例子：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;如果门禁系统有后门，攻击者可以通过后门打开门禁。当然，后门还可能是另一种形式：攻击者给门禁发送一个特殊的指令，门禁告诉攻击者用户那些时候开门了。这样一来，攻击者就可以把握用户的动向，判断用户是否在家。&lt;/li&gt;&lt;li&gt;如果智能电报有后门，攻击者或许可以篡改电表数字，让用户支付更多的电费。攻击者或许还可以知道用户用电量的趋势。如果某时刻用电量大，则判断用户在家；如果长时间用电量低，则判断用户出远门了。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;分析固件的后门还有一个难题：一般来说设备厂商不会公开固件的源代码。如果有源代码的话，后门的分析可能还简单一些。但是，我们可能只能从二进制文件入手分析固件的后门了。&lt;/p&gt;&lt;p&gt;我们知道，源代码要经过编译、链接等操作，最终生成二进制可执行文件：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d2791d75621f228b1204c10b08a76344_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;但在生成二进制文件的过程中，代码中的变量名、变量类型、函数名等会被完全剔除。由于存储固件的存储器空间有限，编译器有时候还会对代码进行优化，甚至从汇编语言的层面上进行优化。这使得逆向工程会变得非常困难。即使实现了二进制文件的逆向工程，源代码可能也和天书没什么区别…&lt;/p&gt;&lt;p&gt;那么，如果不能对固件的二进制文件实施逆向，就无法分析后门了吗？答案是否定的。&lt;/p&gt;&lt;h2&gt;静态二进制分析与动态二进制分析&lt;/h2&gt;&lt;p&gt;一般来说，二进制文件有两种分析方法：静态分析、动态分析。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-eb686fbf260f7d94b3fd70845d688198_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;静态分析是指：直接阅读二进制编码。虽然固件已经被编译为二进制文件，但毕竟二进制文件本身还在，如果能弄明白二进制文件在做什么，肯定能判断固件是否存在后门。因此，静态分析的特点是：覆盖全面。&lt;/p&gt;&lt;p&gt;但是，静态分析有它的缺点。如前面所说，二进制文件本身并不好理解，甚至像天书一样。因此，静态分析想得到精确的结果，则需要进行长时间的分析，使分析时间变长。如果分析时间有限，静态分析得出的结论可能是不准确的。结论可能会是这样的：&lt;b&gt;这个固件可能存在后门&lt;/b&gt;。这个结论没错，但是没什么卵用。静态分析的优缺点可见下图的幻灯片：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-0d30ba042d55db2f14573357a93bca5d_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;动态分析不阅读二进制代码，而是直接把固件扔到实际环境下执行：&lt;b&gt;试试各种口令，看看能不能碰到一个万能口令&lt;/b&gt;。很明显，如果试出来了，那么不仅能判断固件有后门，还能判断后门是什么。但是，由于设备的输入信息可以是任意的，因此动态分析不可能做到面面俱到。也就是说，分析结果虽然非常准确，但不能全面覆盖。动态分析的优缺点可见下图的幻灯片：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-08557c1dc00bb6f8d1b44a9bc5a40f30_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;另外，我在网上找到了科罗拉多大学计算机科学家Mario Barrenechea的一个课件，课件中详细讲解了静态分析、动态分析这两种程序分析手段。知友们可参考此课件了解相关的知识：&lt;a href=&quot;https://www.cs.colorado.edu/~kena/classes/5828/s12/presentation-materials/barrenecheamario.pdf&quot; data-editable=&quot;true&quot; data-title=&quot;colorado.edu 的页面&quot;&gt;https://www.cs.colorado.edu/~kena/classes/5828/s12/presentation-materials/barrenecheamario.pdf&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;我们的问题是：能否克服静态分析或者动态分析的缺点，实现一个比较好的二进制文件自动化分析工具呢？&lt;/p&gt;&lt;h2&gt;基本实现思想&lt;/h2&gt;&lt;p&gt;Christophe Hauser与Yan Shoshitaishvili解决的问题是：应用静态分析方法，寻找「认证旁路」这类特殊的后门。所谓认证旁路，就是后门可以不执行固件中的身份认证算法，从而直接控制设备。&lt;/p&gt;&lt;p&gt;传统的认证旁路检测思路如下图所示：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-589a5d1d07e6f1f72282d86cbf741603_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;控制流图中一般存在一个「认证过程」，程序执行时先通过认证，认证通过后达到「认证通过」状态，进行后续操作；否则，达到「认证失败」状态，不允许进行后续操作。所谓后门，就是幻灯片左边的程序分支：应用后门可以绕过认证过程，直接达到「认证通过」状态。这种方法的问题是：从二进制程序中找到「认证过程」很麻烦。&lt;/p&gt;&lt;p&gt;我们换个思路，能否不找「认证过程」，而是找「认证通过」状态，通过「认证通过」状态回溯「认证过程」呢？答案是肯定的。实际上，这便是Christophe Hauser与Yan Shoshitaishvili的核心创新点：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5c7154cc706355c2bc27782bc764a9c2_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;如何寻找认证通过状态呢？因为认证通过的目的是允许用户执行一些操作，因此我们可以先从功能上定义，哪些操作可以认为是认证通过后才允许执行的。这些操作就可以作为「认证通过」状态。这些操作包括但不限于：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;执行特定的系统服务，如唤醒系统、重启、关机等&lt;/li&gt;&lt;li&gt;访问特定的文件&lt;/li&gt;&lt;li&gt;访问特定的内存地址，甚至访问特定的寄存器地址&lt;/li&gt;&lt;li&gt;执行特定的代码，如向周边设备发送「请求数据」命令&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a80d5d77a6213a1143b4f70b6ab3b60d_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;br&gt;&lt;p&gt;得到「认证通过」状态后，以此状态为出发点对程序进行针对性的分析，从而找到漏洞。&lt;/p&gt;&lt;br&gt;&lt;h2&gt;二进制自动化分析工具：angr&lt;/h2&gt;&lt;p&gt;Christophe Hauser与Yan Shoshitaishvili所在的团队开发了二进制自动化分析工具angr，实现了上述思路，做到了固件认证旁路的自动化分析。当然了，他们的分析工具用到了很多比较复杂的技术，如符号执行（Symbolic Execution）、值-集分析（Value-Set Analysis）等。这些虽然是已经存在的技术，但是对非专业人士来说相对比较复杂。感兴趣的知友们需要阅读Christophe Hauser与Yan Shoshitaishvili发表的论文。我在专栏的最后会给出论文题目。&lt;br&gt;&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0dc87527bb430d5bfa52efab6f4b1742_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;先来看看效果吧，Yan编写了一个包含后门的小程序：一般情况下，正确输入用户名和口令后，输入特定的口令，程序才会打印「认证通过」。但是，当输入特定的口令时，程序会直接打印「认证通过」。这个特定的口令直接写在了程序内部，并硬编码到了二进制可执行文件中。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8a91ecb845099ab296bd4eda7b131b69_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;随后，Yan用angr的图形化操作界面，简单地点了点鼠标，就完成了此二进制文件的分析，找到了这个特定的口令：Welcom to the admin console, trusted user。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-295e3ed1743fdc5a98c0f78f5293ea1e_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;当然了，实际二进制文件的控制流图会非常复杂，后门可能不仅仅是特殊口令这么简单了。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e39fc21c0b75bb2913cebddf2f5ab040_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;Yan用angr直接对bash的二进制文件进行分析。只分析bash的初始化过程就消耗了大量的时间。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b62540948e4d58e79699c0b2f63a8bf8_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;为实现对任意二进制文件的快速分析，Yan等人综合应用了多种静态分析方法。这些方法的深入分析已经超过了我的理解能力… 感兴趣的知友真的需要阅读论文了。哎，不得不说，现在做安全也要读文献啦，其实是个好消息。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a3ddb3ab56e0c351d26ec19054ae1670_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;Yan等人把angr用在了哪里呢？他们把angr用到了DARPA网络大挑战（DAPRA Cyber Grand Challenge）中，并获胜（官方网址：&lt;a href=&quot;http://archive.darpa.mil/CyberGrandChallenge_CompetitorSite/&quot; class=&quot;&quot;&gt;http://archive.darpa.mil/CyberGrandChallenge_CompetitorSite/&lt;/a&gt;）。可能有些知友不了解这个所谓的DAPRA Cyber Grand Challenge。这个比赛的宗旨是构建自动化工具，实现攻击和防御功能。可别小看这个比赛，Cyber Grand Challenge属于Grand Challenge的一部分，组织方是那个缩写Defense Advanced Research Projects Agency（DAPRA），这个组织隶属于美国国防部…&lt;/p&gt;&lt;blockquote&gt;The DARPA Grand Challenge is a prize competition for American autonomous vehicles, funded by the Defense Advanced Research Projects Agency, the most prominent research organization of the United States Department of Defense. Congress has authorized DARPA to award cash prizes to further DARPA&#39;s mission to sponsor revolutionary, high-payoff research that bridges the gap between fundamental discoveries and military use.（来源：&lt;a href=&quot;https://en.wikipedia.org/wiki/DARPA_Grand_Challenge&quot; data-editable=&quot;true&quot; data-title=&quot;DARPA Grand Challenge&quot; class=&quot;&quot;&gt;DARPA Grand Challenge&lt;/a&gt;）&lt;/blockquote&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-ff842fcd4d61bd30381f7e40becc8e08_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;因为angr实在是太优秀了，Yan等人分别在Black Hat 2015和DEF CON 24上讲解了angr。下方连接为DEF CON 24的演讲稿：&lt;a href=&quot;https://media.defcon.org/DEF%20CON%2024/DEF%20CON%2024%20presentations/DEFCON-24-Shellphish-Cyber%20Grand%20Shellphish-UPDATED.pdf&quot; data-editable=&quot;true&quot; data-title=&quot;defcon.org 的页面&quot; class=&quot;&quot;&gt;https://media.defcon.org/DEF%20CON%2024/DEF%20CON%2024%20presentations/DEFCON-24-Shellphish-Cyber%20Grand%20Shellphish-UPDATED.pdf&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;与此同时，团队还在信息安全旗舰会议NDSS 2015、NDSS 2016、Security and Privacy 2016上分别介绍了angr的各个组成部分和功能。&lt;/p&gt;&lt;p&gt;最令人欣慰的是，在Black Hat 2015结束后，团队把angr开源了！整个工程用Python撰写，代码量约为60000行。angr的官方网址为：&lt;a href=&quot;http://angr.io&quot; data-editable=&quot;true&quot; data-title=&quot;angr.io 的页面&quot;&gt;http://angr.io&lt;/a&gt;。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c64977042f4d2db96cbdd9c5bdd072c7_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;最后，我分别给出与angr相关的学术论文，它们是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;NDSS 2015：Firmalice - Automatic Detection of Authentication Bypass Vulnerabilities in Binary Firmware（&lt;a href=&quot;http://101.96.8.164/www.cs.ucsb.edu/~chris/research/doc/ndss15_firmalice.pdf&quot; data-editable=&quot;true&quot; data-title=&quot;96.8.164 的页面&quot; class=&quot;&quot;&gt;http://101.96.8.164/www.cs.ucsb.edu/~chris/research/doc/ndss15_firmalice.pdf&lt;/a&gt;）。&lt;/li&gt;&lt;li&gt;NDSS 2016：Driller: Augmenting Fuzzing Through Selective Symbolic Execution（&lt;a href=&quot;https://www.internetsociety.org/sites/default/files/blogs-media/driller-augmenting-fuzzing-through-selective-symbolic-execution.pdf&quot; data-editable=&quot;true&quot; data-title=&quot;internetsociety.org 的页面&quot; class=&quot;&quot;&gt;https://www.internetsociety.org/sites/default/files/blogs-media/driller-augmenting-fuzzing-through-selective-symbolic-execution.pdf&lt;/a&gt;）&lt;/li&gt;&lt;li&gt;Security and Privacy 2016：SoK: (State of) The Art of War: Offensive Techniques in Binary Analysis（&lt;a href=&quot;http://ieeexplore.ieee.org/abstract/document/7546500/&quot; data-editable=&quot;true&quot; data-title=&quot;SOK: (State of) The Art of War: Offensive Techniques in Binary Analysis&quot;&gt;SOK: (State of) The Art of War: Offensive Techniques in Binary Analysis&lt;/a&gt;）&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;PS&lt;/h2&gt;&lt;p&gt;以前我一般会等中文翻译视频发布到i春秋的公开课平台（&lt;a href=&quot;http://www.ichunqiu.com/opencourse&quot; data-editable=&quot;true&quot; data-title=&quot;网络安全课程|网络安全视频课程|网络安全培训课程|信息安全培训教程-i春秋&quot;&gt;网络安全课程|网络安全视频课程|网络安全培训课程|信息安全培训教程-i春秋&lt;/a&gt;）上后再撰写分析贴的。但我现在发现，等视频发出来了，视频内容我也就忘得差不多了… 所以，后面的视频我做完后就会直接撰写分析贴。如果知友英语水平不错，可以直接翻墙到YouTube上面看原始视频，也可以关注i春秋的公开课页面，等待中文翻译版本上线。&lt;/p&gt;&lt;p&gt;需要强调的是，我还真不是为i春秋打广告。由于是i春秋平台组织的视频翻译工作，并负责中文字幕视频的发布与更新，因此知友们想看的话，可能只能通过这一种手段观看…不过，我负责翻译的视频在i春秋上都是免费观看的（但需要注册i春秋账号），我认为这也是尽量踢除广告效应，真切实现技术交流目的的一种方式。安全无价！&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2017-02-09-25150055</guid>
<pubDate>Thu, 09 Feb 2017 00:00:00 +0800</pubDate>
</item>
<item>
<title>随机真的是好事情吗？密文分组链接模式的碰撞攻击——理论与实践</title>
<link>https://henix.github.io/feeds/zhuanlan.datasec/2016-09-07-22268807.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/22268807&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/20017187563e47a19455cb871ac8be40_r.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;好久没给朋友们带来黑客大会视频的分析了。我自己在空余时间仍然在做黑客大会的翻译工作，不过这一段时间听译的内容大多数都是工具的介绍，写起来感觉有些空（不过，如果我遇到有意思的工具，我还是会和大家分享的）。然而，前天发生的一件事情让我下定决心一定要为将要上线的一个DEF CON 23视频撰写一篇专栏。&lt;/p&gt;&lt;p&gt;事情的起因是这样的，在前天中午我与实验室新来的一位老师闲聊的时候，他提到业内有个学者的博客很不错，可以时常关注一下。一听这个人叫Matthew Green，我就来了兴趣。安全圈子里面的人可能不太知道这个人，但这个人在理论圈子里面可是非常知名的。理论圈子里面有3个最顶级的安全会议，分别叫做Usenix Security Symposium（Usenix Security）、ACM Conference on Computer and Communications Security（ACM CCS）、IEEE Symposium on Security and Privacy（S &amp;amp; P）。基本上国内研究机构每年也没几个人能在这3个会议上发表论文。这3个会议只要中了一篇，基本上就是各种基金项目信手拈来的程度。然而，从2010年开始，Matthew Green这个人&lt;b&gt;每年&lt;/b&gt;都会在这3个会议上发表论文！更恐怖的是，这个人只是Johns Hopkins大学的一个普通的Assistant Professor而已。哎，只能说理论安全圈，国内外的研究水平还是有一定差距的…不过，Matthew Green本身是一个很喜欢Coding的人，尤其是喜欢做密码学工程相关的工作。他对理论分析倒并不是那么热衷，这没准也是他一直没沿着学术圈子继续往上升的原因吧。&lt;/p&gt;&lt;p&gt;言归正传，Matthew Green的博客叫做《&lt;a href=&quot;http://webcache.googleusercontent.com/search?q=cache:https://blog.cryptographyengineering.com/&quot; data-editable=&quot;true&quot; data-title=&quot;A Few Thoughts on Cryptographic Engineering&quot; class=&quot;&quot;&gt;A Few Thoughts on Cryptographic Engineering&lt;/a&gt;》（似乎需要翻墙，而且时常会出现链接挂掉的情况）。他的博客通俗易懂，有大家之范，有兴趣的朋友们可以关注一下。我们今天要谈到的就是他在2016年8月24日（没错，就是一周之前）发表的一篇博客《&lt;a href=&quot;https://blog.cryptographyengineering.com/2016/08/24/attack-of-week-64-bit-ciphers-in-tls/&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;Attack of the week: 64-bit ciphers in TLS&quot;&gt;Attack of the week: 64-bit ciphers in TLS&lt;/a&gt;》。因为有的朋友可能打不开链接，我在这里贴出这篇博客的第一部分，大家可以感受一下：&lt;/p&gt;&lt;blockquote&gt;A few months ago it was starting to seem like you couldn’t go a week without a new attack on TLS. In that context, this summer has been a blessed relief. Sadly, it looks like our vacation is over, and it’s time to go back to school.&lt;br&gt;&lt;br&gt;Today brings the news that Karthikeyan Bhargavan and Gaëtan Leurent out of INRIA have a new paper that demonstrates a practical attack on legacy ciphersuites in TLS (it’s called “Sweet32”). What they show is that ciphersuites that use 64-bit blocklength ciphers — notably 3DES — are vulnerable to plaintext recovery attacks that work even if the attacker cannot recover the encryption key.&lt;br&gt;&lt;br&gt;While the principles behind this attack are well known, there’s always a difference between attacks in principle and attacks in practice. What this paper shows is that we really need to start paying attention to the practice.&lt;/blockquote&gt;&lt;p&gt;Karthikeyan Bhargavan和Gaëtan Leurent的这个工作已经被上面3个最顶级安全会议之一，ACM CCS 2016录用。今年，ACM CCS 2016将在奥地利的维也纳召开，时间是2016年10月24日至2016年10月28日（&lt;a href=&quot;https://www.sigsac.org/ccs/CCS2016/&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;ACM CCS 2016&quot;&gt;ACM CCS 2016&lt;/a&gt;）。两位作者专门构建了一个网站：&lt;a href=&quot;https://sweet32.info/&quot; data-editable=&quot;true&quot; data-title=&quot;Sweet32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN&quot; class=&quot;&quot;&gt;Sweet32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN&lt;/a&gt;，提前将攻击原理、代码、分析等放在了网上。因此，我们有幸能提前2个月看到国际顶级学者们的最新研究成果，这也是一件值得庆贺的事情。&lt;/p&gt;&lt;br&gt;但是，当读完论文后我就傻眼了… 这个攻击的攻击原理是很简单的，之前也有人发现过。而公开这个问题的人，正是在DEF CON 23 - Crypto and Privacy Village上发表的讲座。而他们的讲座正是我的团队听译的… 他们是来自Fontbonne大学的Albert Carlson和Patrick Doherty。我不知道Karthikeyan Bhargavan和Gaëtan Leurent是否看过DEF CON 23的演讲，也不知道Albert Carlson和Patrick Doherty是否得知他们的攻击思想被来自另外机构的人完整实现。如果他们互相知道对方的成果，不知道会作何感想…&lt;p&gt;我想强调的是，这个攻击的原理很直观，但是如何正确利用这种攻击方式，两个大学的两组研究团队有着不一样的想法。而这不一样的想法导致他们分别在黑客大会和计算机理论大会上做相关的报告。这也引发了一个问题：&lt;b&gt;安全理论有用吗？&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;讲座信息&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;原始视频：DEF CON 23 - Crypto and Privacy Village - Carlson and Doherty - Breaking CBC。YouTube链接：&lt;a href=&quot;https://www.youtube.com/watch?v=v0IsYNDMV7A&quot; data-editable=&quot;true&quot; data-title=&quot;youtube.com 的页面&quot; class=&quot;&quot;&gt;https://www.youtube.com/watch?v=v0IsYNDMV7A&lt;/a&gt;&lt;/li&gt;&lt;li&gt;中文字幕：i春秋平台上发布，链接为：&lt;a href=&quot;http://www.ichunqiu.com/open/54789&quot; data-editable=&quot;true&quot; data-title=&quot;ichunqiu.com 的页面&quot;&gt;http://www.ichunqiu.com/open/54789&lt;/a&gt;&lt;/li&gt;&lt;li&gt;翻译：ScalersTalk成长会听力小组成员Myra&lt;/li&gt;&lt;li&gt;校对、压制：&lt;a href=&quot;https://www.zhihu.com/people/d543743c88797978a0a8c453f8768974&quot; data-hash=&quot;d543743c88797978a0a8c453f8768974&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@刘巍然-学酥&quot; data-hovercard=&quot;p$b$d543743c88797978a0a8c453f8768974&quot;&gt;@刘巍然-学酥&lt;/a&gt;&lt;/li&gt;&lt;li&gt;时间轴：&lt;a href=&quot;https://www.zhihu.com/people/3e008eeed2acb09f3dcf3d66a214ab2c&quot; data-hash=&quot;3e008eeed2acb09f3dcf3d66a214ab2c&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@吴诗湄&quot; data-hovercard=&quot;p$b$3e008eeed2acb09f3dcf3d66a214ab2c&quot;&gt;@吴诗湄&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;视频的翻译虽然已经完成，但是&lt;a href=&quot;http://www.ichunqiu.com/&quot; data-editable=&quot;true&quot; data-title=&quot;网络安全培训|信息安全培训&quot; class=&quot;&quot;&gt;i春秋&lt;/a&gt;（微博：&lt;a href=&quot;http://weibo.com/ichunqiu&quot; data-editable=&quot;true&quot; data-title=&quot;i春秋学院的微博&quot;&gt;i春秋学院的微博&lt;/a&gt;）还在后期处理过程中，预计下周三（2016年9月7日）上线。视频上线后我会共享出链接，有兴趣的朋友们可以去i春秋平台上完整观看这个讲座。本文会用到视频中的一些截图。反正是我自己做的，不怕版权问题~&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/0c2ffc7c9178d30b56cd61b31cfd9fea_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;h2&gt;何为密文分组链接模式的碰撞攻击&lt;/h2&gt;&lt;p&gt;要讲起这个话题，我们得先来谈谈对称加密体制，或者说是单钥加密体制了。我在知乎上回答的绝大多数问题都是有关非对称加密体制，或者说是双钥加密体制的。不过，有关单钥加密体制的内容我在很早前已经在我的技术博客里面撰写了（因为后来我发现知乎平台分享知识的效果更好，所以就转战知乎专栏了）。相关分析和实现的内容链接为：&lt;a href=&quot;http://blog.csdn.net/liuweiran900217/article/details/38439875&quot; data-editable=&quot;true&quot; data-title=&quot;Java密码学原型算法实现——第二部分：单钥加密算法&quot; class=&quot;&quot;&gt;Java密码学原型算法实现——第二部分：单钥加密算法&lt;/a&gt;。在这个攻击中，我们只需要关注单钥加密体制里面的分组加密算法。这里我需要引用这里面的一些描述。下述有关分组密码和加密模式讲解的插图来自于Silent Void的happyhippy博客：&lt;a href=&quot;http://www.cnblogs.com/happyhippy/archive/2006/12/23/601353.html&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;对称加密和分组加密中的四种模式(ECB、CBC、CFB、OFB)&quot;&gt;对称加密和分组加密中的四种模式(ECB、CBC、CFB、OFB)&lt;/a&gt;。觉得它博客里面的图还是非常清晰的，大家也可以直接看这位作者的描述。&lt;/p&gt;&lt;p&gt;分组密码将明文消息编码表示后的子串划分等长的组，各组分别在各子密钥的控制下变成等长的输出序列。最典型，现在仍然认为是安全的分组加密算法为AES。AES分组加密算法的流程如下图所示：&lt;br&gt;&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/ad74a3c251e19b80baf4fac0517d76fd_r.jpg&quot; data-rawwidth=&quot;782&quot; data-rawheight=&quot;467&quot;&gt;&lt;p&gt;如果不特别说明，一般密码学初学者在使用分组加密算法时会使用所谓的电码本加密模式（ECB模式），也就是上图中的加密方法。这也是分组加密算法最简单、最直接的使用方法。&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;为了保证加密结果一定可以被正确的密钥成功解密，对于对称加密算法我们有这样一个要求：&lt;b&gt;如果加密时输入的明文和密钥是一样的，那么输出的密文也一定是一样的&lt;/b&gt;。ECB模式完美遵从了这个特性。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/2d8921a5240454cbaca592655c45a7e0_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;然而，这也带来了安全问题：如果在相同密钥下将一个消息加密两次，那么输出的密文也一定是相同的。在应用中，数据通常有部分可猜测的信息，例如薪水的数目就有一个可猜测的范围。如果明文消息是可猜测的，那么由确定性加密方案得到的密文就会使攻击者通过使用猜测的方法猜测出明文。因此，在大多数应用中不要使用ECB模式。在视频中，Carlson也讲到了ECB模式的这一个缺陷：&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/2104afc441a4d8333fe659726a8e0a2d_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;为了解决这个问题，人们提出了其他的加密方法。比较典型的加密方法是密文分组链接模式（CBC模式）、输出反馈模式（OFB模式）、密码反馈模式（CFB模式）、计数器模式（CTR模式）。我们今天要攻击的就是CBC模式。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/e94e466cfbff2e81578f367e079545b4_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;CBC模式是用于一般数据加密的一个普通的分组密码加密模式。在这个模式中，第一个密文分组的计算需要一个特殊的明文，习惯上称之为初始向量（IV）。IV是一个随机的分组，每次会话加密时都要使用一个新的随机IV，IV无须保密，但一定是不可预知的。由于IV的随机性，IV将使得后续的密文分组都因为IV而随机化。由于IV需要公开，且第一个分组的加密结果是IV，因此CBC模式对于m个分组的明文将输出m+1个分组的密文。视频里面给出的CBC模式是这样的：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/c706c5bbcd6be734bf13a7ddc4e08b0c_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;我也想吐槽，幻灯片上的图实在是太小了… 我们还是用Silent Void博客：&lt;a href=&quot;http://www.cnblogs.com/happyhippy/archive/2006/12/23/601353.html&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;对称加密和分组加密中的四种模式(ECB、CBC、CFB、OFB)&quot;&gt;对称加密和分组加密中的四种模式(ECB、CBC、CFB、OFB)&lt;/a&gt; 上的图吧，CBC模式实例如下图所示：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/0d69c37d108716e61faac15523d9fd04_r.jpg&quot; data-rawwidth=&quot;583&quot; data-rawheight=&quot;398&quot;&gt;虽然CBC模式在理论界一直被别人诟病（最为经典的当属Padding Oracle Attack了，相关解释参见我的知乎答案：&lt;a href=&quot;https://www.zhihu.com/question/26437065/answer/32790364&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;为什么说密文链接模式已经丧失安全性？ - 刘巍然-学酥的回答&quot;&gt;为什么说密文链接模式已经丧失安全性？ - 刘巍然-学酥的回答&lt;/a&gt;），但是在现实中可以使用的攻击方法也挺难找的。CBC模式真的不安全吗？实际上，密码学家们很早就发现一个问题：&lt;b&gt;当在CBC模式中使用分组长度比较短（比如每个分组的长度是64bit）的对称加密算法时，方案在理论上是不安全的&lt;/b&gt;，因为可以存在一个所谓的碰撞攻击。&lt;p&gt;什么是碰撞攻击？我们首先粗略讲解一下什么是安全的加密算法。一个加密算法足够安全的要求是，加密结果看起来和随机数没什么区别。这个性质要求非常高了，如果加密结果跟随机数一模一样的话，相当于我们无法从密文中得到任何信息，这个加密也就是安全的了。然而，随机性在CBC模式下会带来一个很严重的问题：&lt;b&gt;正因为随机，我们可以用很巧妙的概率学方法来分析，从而在随机中找到不随机&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;我们考察下面的一个情况：一组密文是用相同的密钥key，在CBC模式加密输出的。如果输出的密文中有两个密文相等，会发生什么情况？举例来说，下图中两个红色部分的密文是相等的。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic2.zhimg.com/aaa993710e0f574b7ef252904787290b_r.png&quot; data-rawwidth=&quot;601&quot; data-rawheight=&quot;242&quot;&gt;由于密文一样，密钥也一样，根据加密的一对一特性，我们可以直接得出：输入到加密算法的明文也一定是一样的，也就是说，上图“与或”运算的红色点是一样的。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic1.zhimg.com/58d4105e5eec02b5e4ea16ec3b1887b2_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;然而，CBC模式输入的明文是什么呢？是真实的明文与上一个分组中密文的与或结果（上图黄色部分）。因此，假定两个密文分组c_i和c_j相等，这意味着：&lt;equation&gt;c_{i-1} \oplus p_i = c_{j-1} \oplus p_j&lt;/equation&gt;，也就是说，我们能找到c_i和c_j前面一个分组中明文和密文的关系。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/d9924b537cb519ec3b6260b518291f90_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;由于密文是通过不安全信道传输的，所有人都可能截获到密文。因此，如果我们知道其中一个明文是什么，我们就能够通过与或运算，得到另一个明文。&lt;br&gt;&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/971db61e20046b969dacfee8f51507d6_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;讲到这里，有的朋友不开心了… 输出都是随机的，密文中出现碰撞情况的概率太低了吧… 实际上概率一点都不低。朋友们还记得生日攻击吗？看看这个答案吧：&lt;a href=&quot;https://www.zhihu.com/question/23853358/answer/34099260&quot; data-editable=&quot;true&quot; data-title=&quot;你认为最反直觉的数学定理是什么？ - 知乎用户的回答&quot;&gt;你认为最反直觉的数学定理是什么？ - 知乎用户的回答&lt;/a&gt;。&lt;/p&gt;&lt;blockquote&gt;多少个人中可以找到2个生日在同一天的人？&lt;br&gt;&lt;br&gt;许多人以为要使至少有一个重复的概率大于0.5，那么大约应有100人，事实上只要23人。&lt;/blockquote&gt;&lt;img src=&quot;https://pic3.zhimg.com/b82a44efa427922c165354464113ea3a_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;在单钥加密中，我们也能发现相同的规律。&lt;/p&gt;&lt;h2&gt;理论分析（有点数学，可忽略）&lt;/h2&gt;&lt;p&gt;放在分组加密算法中，假设加密算法中每n比特分成一组，那么密文输出一共有N=2^n种可能。假设我们得到了2^d个密文分组，那么发生碰撞的概率为：&lt;/p&gt;&lt;equation&gt;p=1-\prod_{i=0}^{D-1}{\frac{N-i}{N}} \geq 1 -  \prod_{i=0}^{D-1}{e^{-i/N}} \geq 1 - e^{-D(D-1)/2N}&lt;/equation&gt;&lt;br&gt;&lt;p&gt;也就是说，我们大概得到2^{n/2}个分组，就有大约50%的概率得到一次碰撞。更进一步，如果我们有2^d个密文分组，那么得到碰撞分组的个数大约为&lt;equation&gt;2^{2d-n-1}&lt;/equation&gt;。&lt;/p&gt;&lt;p&gt;这么看下来，感觉这个数也挺大的… 带入具体的数值呢？虽然AES分组很长，架不住安全工程师们不用啊… 根据调查，安全通信中仍然有大约1%的通信链路使用了64 bit分组的3DES或者Blowfish加密。如果分组长度是64 bit，并假设：敏感数据量占所有分组量的&lt;equation&gt;\alpha&lt;/equation&gt;，已知明文的密文分组占所有分组量的&lt;equation&gt;\beta
&lt;/equation&gt;，从概率上讲，我们只要能碰到一次已知明文的密文分组和敏感数据的分组，就能得到敏感数据了，所以有：&lt;equation&gt;2^{2d-n-1} = \frac{1}{\alpha \beta}&lt;/equation&gt;。整理一下，我们大概需要&lt;equation&gt;\sqrt{1/\alpha \beta}\cdot 2^{n/2}&lt;/equation&gt;个分组就够了。这是个什么概念呢？HTTP的一次问询的长度为512 Byte（64个64 bit的分组），如果其中包含了一个8 Byte的Cookie（1个64 bit的分组），并且问询的其他内容攻击者都知道的话，我们有&lt;equation&gt;\alpha = 63/64 \approx 1&lt;/equation&gt;，&lt;equation&gt;\beta = 1/64&lt;/equation&gt;，因此我们需要大约2^35个分组。这么多分组，需要捕获256GB的网络流量。256GB，似乎并不是一个很夸张的数字…攻击，没准是真的可行的。&lt;/p&gt;&lt;br&gt;&lt;h2&gt;实际分析：如何实现碰撞攻击——CCS 2016篇&lt;/h2&gt;&lt;p&gt;在实际网络中，这种攻击的实施具有哪些要求呢？Green列举了这些要求：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;The client and server must &lt;b&gt;negotiate a 64-bit cipher&lt;/b&gt;. This is a relatively rare occurrence, but can happen in cases where one of the two sides is using an out-of-date client. For example, stock &lt;b&gt;Windows XP&lt;/b&gt; does not support any of the AES-based ciphersuites. Similarly, SSL3 connections may negotiate 3DES ciphersuites.&lt;br&gt;&lt;/li&gt;&lt;li&gt;The server and client must &lt;b&gt;support long-lived TLS sessions&lt;/b&gt;, i.e., encrypting a great deal of data with the same key. Unfortunately, most web browsers place no limit on the length of an HTTPS session if Keep-Alive is used, provided that the server allows the session. The Sweet32 authors scanned and discovered that many servers (including IIS) will allow sessions long enough to run their attack. Across the Internet, the percentage of vulnerable servers is small (less than 1%), but includes some important sites.&lt;br&gt;&lt;/li&gt;&lt;li&gt;The client must &lt;b&gt;encipher a great deal of known data, including a secret session cookie&lt;/b&gt;. This is generally achieved by running adversarial Javascript code in the browser, although it could be done using standard HTML as well.&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;在CCS 2016中，Karthikeyan Bhargavan和Gaëtan Leurent是如此实现攻击的。攻击原理如下图所示（图片来源：&lt;a href=&quot;https://sweet32.info/#demo&quot; data-editable=&quot;true&quot; data-title=&quot;Sweet32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN&quot; class=&quot;&quot;&gt;Sweet32: Birthday attacks on 64-bit block ciphers in TLS and OpenVPN&lt;/a&gt;）。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/64af5c6f185d1c1a2309bfba5691a11e_r.png&quot; data-rawwidth=&quot;324&quot; data-rawheight=&quot;333&quot;&gt;&lt;br&gt;&lt;ol&gt;&lt;li&gt;强制建立一个64 bit分组加密算法CBC模式的链接。Karthikeyan Bhargavan和Gaëtan Leurent做了详细的调研，认真分析了现有网络中64 bit分组加密算法CBC模式的使用率，结论是这种方式的使用率是非常高的。他们甚至指出，TLS的标准中也写明这种使用方法是正确而安全的，推荐使用（If you negotiate 3DES with a 1024-bit RSA key exchange with a host whose certificate you have verified, you can expect to be that secure），参见论文第3章。这里就可以看出，两位学者工作是多么的扎实。&lt;/li&gt;&lt;li&gt;要求通信双方建立长时间的TLS链接。这也是可以实现并在实际中会发生的，比如发送数据量很大、服务器的链接一直不断开。&lt;/li&gt;&lt;li&gt;重复发送一个秘密信息，并且其他信息攻击者还都知道。这个是最难实现的，然而两位学者想到了一个非常巧妙的方法：撰写一个Javascript恶意链接，让客户端重复请求下载并显示一个图片。作者利用了Session Cookie的特性来实现这个场景。Session Cookie的目的是让服务器知道对方是验证通过的用户，这个Cookie是秘密的，但是是在链接建立后，通过安全链接发送给服务器的。而HTTP的其他请求都是恶意程序生成的。这样就实现了知道秘密位置，不知道秘密本身，其他密文所对应的明文攻击者都能获知的这一极端条件。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;攻击结果呢？事实证明，整个攻击需要运行19-38小时的攻击程序，捕获785GB的数据，完成Session Cookie这一秘密值的恢复。看起来这个数字很夸张，但对于现在的计算机来说，这种攻击的时间和存储量是完全可以接受的！&lt;/p&gt;&lt;h2&gt;实际分析：如何实现碰撞攻击——DEF CON 23篇&lt;/h2&gt;&lt;p&gt;DEF CON 23中使用的攻击方法就没有看起来那么科学了… 他们测试了更小分组长度的密码（实际上把分组长度降低到了5 bit），但是对于64 bit分组的加密似乎仍然无能为力。在更小分组长度下，他们使用了语言的特性。但在实际攻击中，语言特性是很难利用的。&lt;/p&gt;&lt;br&gt;&lt;img src=&quot;https://pic2.zhimg.com/e279283d9deb2cb25bdbcf70579cee57_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;p&gt;不过，我们还是可以从视频中得到一些有意思的结论，比如下面这条：&lt;br&gt;&lt;img src=&quot;https://pic1.zhimg.com/cd0841b3c4261c8ae9e55efc6cce6a56_r.jpg&quot; data-rawwidth=&quot;1280&quot; data-rawheight=&quot;720&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;总结&lt;/h2&gt;&lt;p&gt;总的来说，针对64 bit分组长度、CBC加密模式的碰撞攻击条件在真实网络环境下仍然比较苛刻。但这也说明，随着计算机计算能力的不断提升，不仅是暴力破解的难度会逐渐降低，通过其他概率算法，也会从侧面对一些经典加密算法实现攻击。&lt;/p&gt;&lt;p&gt;在文章的最后我想问大家一个问题：&lt;b&gt;这种攻击的成功，标志着分组长度过短的加密算法在哪个安全模型下（选择密文攻击、选择明文攻击、静态攻击）是不安全的呢？或者说，在什么安全常数下是不安全的呢？&lt;/b&gt;（有关安全常数的解释，参见：&lt;a href=&quot;https://www.zhihu.com/question/48949270&quot; data-editable=&quot;true&quot; data-title=&quot;密码体制中的安全参数k到底是个什么？ - 信息安全和密码学&quot;&gt;密码体制中的安全参数k到底是个什么？ - 信息安全和密码学&lt;/a&gt;）&lt;/p&gt;</description>
<author>刘巍然-学酥</author>
<guid isPermaLink="false">2016-09-07-22268807</guid>
<pubDate>Wed, 07 Sep 2016 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
