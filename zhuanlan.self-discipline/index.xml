<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>业余程序员的个人修养</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/</link>
<description></description>
<language>zh-cn</language>
<lastBuildDate>Sun, 27 Jan 2019 15:16:33 +0800</lastBuildDate>
<item>
<title>前端开发心理学（五）：不要急于求成</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2019-01-26-55759218.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/55759218&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b172b97367d79ad1e94d2391d05a7330_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;374&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-b172b97367d79ad1e94d2391d05a7330_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b172b97367d79ad1e94d2391d05a7330_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;374&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic1.zhimg.com/v2-b172b97367d79ad1e94d2391d05a7330_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-b172b97367d79ad1e94d2391d05a7330_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;上一篇中我们提到，只要我们不断的缩小&lt;b&gt;现状&lt;/b&gt;与&lt;b&gt;目标&lt;/b&gt;之间的&lt;b&gt;差距&lt;/b&gt;，&lt;br&gt;达成目标就只是时间问题了，&lt;br&gt;也就是说，只要路走对了，就不怕远。&lt;/p&gt;&lt;p&gt;道理谁都懂，但是，在实际执行的过程中，&lt;br&gt;人们却很难做到这一点，&lt;br&gt;经常在&lt;b&gt;积累&lt;/b&gt;还不够的情况下，急于求成。&lt;/p&gt;&lt;p&gt;实际上，欲速则不达，事情总得花一定的时间来完成，&lt;br&gt;不可能&lt;b&gt;瞬变&lt;/b&gt;，只能&lt;b&gt;渐变&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;不幸的是，各种&lt;b&gt;营销广告&lt;/b&gt;却牢牢的抓住了这种急躁心理，&lt;br&gt;让我们误以为自己与成功之间，只差一个&lt;b&gt;想法&lt;/b&gt;，&lt;br&gt;可惜这是不可能的。&lt;/p&gt;&lt;p&gt;回过神来，我们才发现，自己还是&lt;b&gt;一无所有&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;估算&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-eefcef09c3e9b590c84027e945079d14_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;462&quot; data-rawheight=&quot;276&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;462&quot; data-original=&quot;https://pic1.zhimg.com/v2-eefcef09c3e9b590c84027e945079d14_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-eefcef09c3e9b590c84027e945079d14_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;462&quot; data-rawheight=&quot;276&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;462&quot; data-original=&quot;https://pic1.zhimg.com/v2-eefcef09c3e9b590c84027e945079d14_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-eefcef09c3e9b590c84027e945079d14_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;我们在开发软件的时候，有一个常见的环节就是&lt;b&gt;评估工期&lt;/b&gt;，&lt;br&gt;也就是预估一下我们大概需要多久能够完成，&lt;br&gt;虽然程序员们经常&lt;b&gt;反讽&lt;/b&gt;估算的不准确性，但它却不失为一种有效的度量方法。&lt;/p&gt;&lt;p&gt;强行缩短工期的行为是不理智的，也是违反&lt;b&gt;软件规律&lt;/b&gt;的，&lt;br&gt;它会带来很多&lt;b&gt;风险&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这个道理，对于程序员的个人成长而言也是如此，&lt;br&gt;用十年学会编程并不是在劝退，&lt;br&gt;&lt;b&gt;一万小时定律&lt;/b&gt;，也不是妄谈。&lt;/p&gt;&lt;p&gt;因此，有些事情是急不来的，急也没有用。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;时间管理&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-05d0930768e0aed6f96d9a6fc7856a7e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;398&quot; data-rawheight=&quot;384&quot; class=&quot;content_image&quot; width=&quot;398&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-05d0930768e0aed6f96d9a6fc7856a7e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;398&quot; data-rawheight=&quot;384&quot; class=&quot;content_image lazy&quot; width=&quot;398&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-05d0930768e0aed6f96d9a6fc7856a7e_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;很多软件项目，都会遇到&lt;b&gt;不能按时交付&lt;/b&gt;的问题，&lt;br&gt;因此，如何缩短时间，如何提高开发效率，&lt;br&gt;都是老生常谈了。&lt;/p&gt;&lt;p&gt;为此人们考虑了各种各样的办法，但实际却&lt;b&gt;鲜有成效&lt;/b&gt;，&lt;br&gt;所以，我更倾向于认为开发效率是团队的一个隐含属性，&lt;br&gt;它的瓶颈不在技术，而在于&lt;b&gt;人的管理&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;对于绝大多数工作而言，任务如何划分，成员之间怎样合作，&lt;br&gt;具体的工作流程是怎样的，都会对效率产生&lt;b&gt;严重&lt;/b&gt;影响，&lt;br&gt;而与&lt;b&gt;是否在做软件开发&lt;/b&gt;无关。&lt;/p&gt;&lt;p&gt;因此，提高效率应该多从&lt;b&gt;技术无关的角度&lt;/b&gt;想一想，&lt;br&gt;对于个人成长也是如此。&lt;/p&gt;&lt;p&gt;我们不可能无限制的提高效率，但总有一个当前最明显的&lt;b&gt;阻塞点&lt;/b&gt;，&lt;br&gt;不以&lt;b&gt;消除瓶颈&lt;/b&gt;为目的做出的努力，都是徒劳的，&lt;br&gt;不能假设换了学习方法之后一定会有效果。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;实战经验&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-ec75e015bdfa041982b615f9b4742bb4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;550&quot; data-rawheight=&quot;302&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;550&quot; data-original=&quot;https://pic1.zhimg.com/v2-ec75e015bdfa041982b615f9b4742bb4_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-ec75e015bdfa041982b615f9b4742bb4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;550&quot; data-rawheight=&quot;302&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;550&quot; data-original=&quot;https://pic1.zhimg.com/v2-ec75e015bdfa041982b615f9b4742bb4_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-ec75e015bdfa041982b615f9b4742bb4_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;上文我们提到，努力过程中必要的“一万小时”或许是&lt;b&gt;难免的&lt;/b&gt;，&lt;br&gt;因此，我们大可不必再抱有&lt;b&gt;侥幸&lt;/b&gt;心理了。&lt;br&gt;其次，提高效率也要以消除瓶颈为突破口，优先处理阻碍自己进步的&lt;b&gt;阻塞点&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;对于前端开发者而言，一个明显的阻塞点就是&lt;b&gt;项目经验&lt;/b&gt;，&lt;br&gt;任何不进行&lt;b&gt;实战操作&lt;/b&gt;的技能学习，到最后几乎都会被证明是毫无用处的。&lt;br&gt;这简直就是“房间里的大象”。&lt;/p&gt;&lt;p&gt;大家都知道如此，但很少有人&lt;b&gt;主动&lt;/b&gt;去克服它。&lt;br&gt;有用的经验需要从&lt;b&gt;实战&lt;/b&gt;中获取，我们可以不用再怀疑自己的这种判断了。&lt;br&gt;我甚至认为，直接投入到&lt;b&gt;真实的项目环境&lt;/b&gt;中才是最有效的学习方法。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;泛读&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-af82cbc57092f986c784e1981586d1e1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;480&quot; data-rawheight=&quot;319&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;480&quot; data-original=&quot;https://pic2.zhimg.com/v2-af82cbc57092f986c784e1981586d1e1_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-af82cbc57092f986c784e1981586d1e1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;480&quot; data-rawheight=&quot;319&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;480&quot; data-original=&quot;https://pic2.zhimg.com/v2-af82cbc57092f986c784e1981586d1e1_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-af82cbc57092f986c784e1981586d1e1_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;另外一个比较重要的阻塞点是开发者自身的&lt;b&gt;知识体系&lt;/b&gt;，&lt;br&gt;有不少&lt;b&gt;爱学习&lt;/b&gt;的程序员，只阅读专业的技术书籍，&lt;br&gt;这虽然在短时间看来突飞猛进，但从长远来看，却十分有害。&lt;/p&gt;&lt;p&gt;因为软件中遇到的问题，&lt;b&gt;很少&lt;/b&gt;是一个纯技术问题，&lt;br&gt;即使是纯技术问题，也跟我们&lt;b&gt;如何定义问题&lt;/b&gt;有关。&lt;/p&gt;&lt;p&gt;因此，除了编程语言，工具框架，软件工程，网络与计算机体系结构，&lt;br&gt;还应当&lt;b&gt;泛读&lt;/b&gt;一些非计算机类的书籍，&lt;br&gt;例如，经济学，数学，逻辑学，心理学，等等。&lt;/p&gt;&lt;p&gt;这样做会&lt;b&gt;重塑&lt;/b&gt;我们的知识体系，改变认知，&lt;br&gt;很多令人迷惑的问题，在其他领域早就有人解决过了，&lt;br&gt;思而不学则殆。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文主要介绍了阻碍开发者成长的两个方面，&lt;br&gt;一个是缺乏实战经验，另一个则是没有进行广泛的阅读，&lt;br&gt;要想做到这两点，首先得&lt;b&gt;摒弃浮躁&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;只有静下心来，才能耐心的进行实战练习，&lt;br&gt;而不是&lt;b&gt;妄想&lt;/b&gt;从介绍性的资料中获取专业知识，&lt;br&gt;只有看清现实，不急于求成，才肯花时间涉足多个领域。&lt;/p&gt;&lt;p&gt;很多人告诉过我们，要珍惜时间，&lt;br&gt;但其实不珍惜时间，&lt;b&gt;什么也不做，其实更加困难&lt;/b&gt;，&lt;br&gt;总会做点什么事情。&lt;/p&gt;&lt;p&gt;参与到一个项目中，正常的完成工作任务，&lt;br&gt;即使没想着要学习，也是在学习了，&lt;br&gt;反之，强迫自己学习那些&lt;b&gt;仅让自己满意&lt;/b&gt;的技术，学了也未必有效果。&lt;/p&gt;&lt;p&gt;所以，工作和生活不妨轻松一点。&lt;/p&gt;&lt;p&gt;正是，&lt;/p&gt;&lt;blockquote&gt;草长莺飞二月天，拂堤杨柳醉春烟。&lt;br&gt;儿童散学归来早，忙趁东风放纸鸢。&lt;/blockquote&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2019-01-26-55759218</guid>
<pubDate>Sat, 26 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>前端开发心理学（四）：梦想是怎样实现的</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2019-01-26-55758815.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/55758815&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1744a199b66ba451583777af87518d8c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1240&quot; data-rawheight=&quot;697&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1240&quot; data-original=&quot;https://pic1.zhimg.com/v2-1744a199b66ba451583777af87518d8c_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1744a199b66ba451583777af87518d8c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1240&quot; data-rawheight=&quot;697&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1240&quot; data-original=&quot;https://pic1.zhimg.com/v2-1744a199b66ba451583777af87518d8c_r.jpg&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-1744a199b66ba451583777af87518d8c_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;做人要有梦想，万一实现了呢？&lt;br&gt;本文就是想跟大家探讨下&lt;b&gt;梦想的实现方式&lt;/b&gt;。&lt;br&gt;或者简言之，&lt;b&gt;目标的达成过程&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;不幸的是，在学校里很少有人会告诉我们什么是&lt;b&gt;目标&lt;/b&gt;，&lt;br&gt;也没有人告诉我们，怎样&lt;b&gt;达成&lt;/b&gt;一个目标。&lt;/p&gt;&lt;p&gt;这使得我们要么随波逐流，&lt;br&gt;要么有心无力，无法做出改变。&lt;/p&gt;&lt;p&gt;曾记否，我们有过多少次努力学习，却没有成效，&lt;br&gt;还记得我们毕业时的迷茫和不知所措么？&lt;br&gt;这都源于我们不知道自己&lt;b&gt;要去哪里&lt;/b&gt;，&lt;b&gt;怎样&lt;/b&gt;过去。&lt;/p&gt;&lt;p&gt;这其实不怪我们，是大环境造成的。&lt;br&gt;下文我们将给出一些技巧，让自己&lt;b&gt;重拾信心&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;三步走&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6736d027a3fe0adfea96db9f132977c3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;728&quot; data-rawheight=&quot;515&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;728&quot; data-original=&quot;https://pic4.zhimg.com/v2-6736d027a3fe0adfea96db9f132977c3_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6736d027a3fe0adfea96db9f132977c3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;728&quot; data-rawheight=&quot;515&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;728&quot; data-original=&quot;https://pic4.zhimg.com/v2-6736d027a3fe0adfea96db9f132977c3_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-6736d027a3fe0adfea96db9f132977c3_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;要达成一个目标，需要三个步骤，&lt;br&gt;（1）确定要去哪里&lt;br&gt;（2）找到现状与目标之间差距&lt;br&gt;（3）不断的缩短差距，直到达成&lt;/p&gt;&lt;p&gt;注意，这并不像很多成功学的书籍那样，&lt;br&gt;它不是一碗鸡汤，而是一套有效的&lt;b&gt;执行方案&lt;/b&gt;，&lt;br&gt;也并不空洞，下面我们仔细的分析每一步都要做什么。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;确定目标&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-91603de1263bf50b4940bb791c83640e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;622&quot; data-rawheight=&quot;414&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;622&quot; data-original=&quot;https://pic3.zhimg.com/v2-91603de1263bf50b4940bb791c83640e_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-91603de1263bf50b4940bb791c83640e_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;622&quot; data-rawheight=&quot;414&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;622&quot; data-original=&quot;https://pic3.zhimg.com/v2-91603de1263bf50b4940bb791c83640e_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-91603de1263bf50b4940bb791c83640e_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;对于饱受应试教育毒害的同学们来说，确定目标或许是第一个难题，&lt;br&gt;因为他们&lt;b&gt;自己都不知道&lt;/b&gt;以后要做什么，&lt;br&gt;对的，我也是一个这样的人。&lt;/p&gt;&lt;p&gt;所以，要做的第一件事就是摆脱这种浑浑噩噩的感觉，&lt;br&gt;睁开双眼，敢于给自己定目标，为自己负责。&lt;br&gt;其实，不知道自己要做什么，只是没有找到&lt;b&gt;在社会中的位置&lt;/b&gt;而已。&lt;/p&gt;&lt;p&gt;我们需要了解这个社会是&lt;b&gt;怎样运转&lt;/b&gt;的，&lt;br&gt;以及要将自己的生命投入到&lt;b&gt;哪部分&lt;/b&gt;工作之中去。&lt;br&gt;这个社会&lt;b&gt;位置&lt;/b&gt;就是目标，决定了我们立志要成为一个什么样的人。&lt;/p&gt;&lt;p&gt;假如我们已经确定自己要从事前端开发这个岗位了，&lt;br&gt;那么，这个岗位的&lt;b&gt;工作要求&lt;/b&gt;，就是一个很明确的目标。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;找出差距&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-87482852cb9203d03ff48d6d6c1aa847_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;860&quot; data-rawheight=&quot;552&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;860&quot; data-original=&quot;https://pic4.zhimg.com/v2-87482852cb9203d03ff48d6d6c1aa847_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-87482852cb9203d03ff48d6d6c1aa847_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;860&quot; data-rawheight=&quot;552&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;860&quot; data-original=&quot;https://pic4.zhimg.com/v2-87482852cb9203d03ff48d6d6c1aa847_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-87482852cb9203d03ff48d6d6c1aa847_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;有了目标之后，先不要&lt;b&gt;贸然&lt;/b&gt;行动，也不要&lt;b&gt;盲目&lt;/b&gt;准备，&lt;br&gt;考试之前&lt;b&gt;临时&lt;/b&gt;抱佛脚是没有用的，&lt;br&gt;努力却不改善自己的&lt;b&gt;弱点&lt;/b&gt;，考试成绩显然还是提高不了。&lt;/p&gt;&lt;p&gt;所以，我们得先静下心来，找出差距。&lt;br&gt;我们在哪里？&lt;br&gt;离目的地还有多远？&lt;/p&gt;&lt;p&gt;学会了衡量差距，就得到了一个&lt;b&gt;标尺&lt;/b&gt;，&lt;br&gt;就可以隔三差五的&lt;b&gt;检查&lt;/b&gt;自己，是进步了还是退步了。&lt;/p&gt;&lt;p&gt;比如，对于打算转行进行前端开发的朋友来说，&lt;br&gt;要经常问自己，我们离一个称职的前端工程师还有多少距离？&lt;br&gt;我们今天学了这项技能，会不会缩短差距？&lt;/p&gt;&lt;p&gt;因为每个人的精力都是有限的，所以，&lt;br&gt;达成目标最快的方式，就是&lt;b&gt;减少无效的努力&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;如何缩短差距&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2bbb4a520b13250a99b6edf69f8bf385_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1024&quot; data-rawheight=&quot;768&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1024&quot; data-original=&quot;https://pic2.zhimg.com/v2-2bbb4a520b13250a99b6edf69f8bf385_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2bbb4a520b13250a99b6edf69f8bf385_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1024&quot; data-rawheight=&quot;768&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1024&quot; data-original=&quot;https://pic2.zhimg.com/v2-2bbb4a520b13250a99b6edf69f8bf385_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2bbb4a520b13250a99b6edf69f8bf385_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;当我们谈论如何缩小差距的时候，有些人就会长舒一口气，&lt;br&gt;因为有太多的&lt;b&gt;成功学&lt;/b&gt;书籍，告诉我们&lt;b&gt;只要那样做&lt;/b&gt;就能成功。&lt;/p&gt;&lt;p&gt;其实，这才是“成功学”的害人之处，&lt;br&gt;因为成功者之所以成功，是因为&lt;b&gt;他自己找到了&lt;/b&gt;一个适合自己的办法，&lt;br&gt;而&lt;b&gt;不是&lt;/b&gt;因为那个办法具有通用性。&lt;/p&gt;&lt;p&gt;所以，这里不得不强调，如何缩短差距要&lt;b&gt;自己&lt;/b&gt;想办法。&lt;br&gt;我们可以学习别人的办法当做参考，&lt;br&gt;但同时也要知道那个方法是需要&lt;b&gt;调整&lt;/b&gt;的。&lt;/p&gt;&lt;p&gt;其实，上文提及的“三步法”，也应当被这样看待，&lt;br&gt;如有必要，我们当然可以&lt;b&gt;灵活的&lt;/b&gt;修改它，&lt;br&gt;让它对自己更&lt;b&gt;有效&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;回到正文，也正是因为我们有了第二步——不断衡量差距的意识，&lt;br&gt;所以，对于如何缩短差距，我们就有了行之有效的&lt;b&gt;甄别&lt;/b&gt;之道，&lt;br&gt;只需不断尝试，找出能让自己离目标&lt;b&gt;更近&lt;/b&gt;的办法即可。&lt;/p&gt;&lt;p&gt;剩下的只是时间问题。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文总结了达成目标的“三步法”，&lt;br&gt;即，确定目标，找出差距，不断的缩小差距。&lt;/p&gt;&lt;p&gt;如果能早点知道这个技巧的话，我想我们应该能在学校中取得更好的成绩，&lt;br&gt;因为当时很多人都一直放任自己的&lt;b&gt;弱科&lt;/b&gt;不管，胡乱的学习一通，&lt;br&gt;以期望考试时&lt;b&gt;奇迹般的&lt;/b&gt;能提高成绩。&lt;/p&gt;&lt;p&gt;这是不可能的。&lt;br&gt;或者说，这件事的可能性极低。&lt;/p&gt;&lt;p&gt;正是，&lt;/p&gt;&lt;blockquote&gt;尽日寻春不见春，芒鞋踏遍陇头云。&lt;br&gt;归来笑拈梅花嗅，春在枝头已十分。&lt;/blockquote&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2019-01-26-55758815</guid>
<pubDate>Sat, 26 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>前端开发心理学（二）：选择和坚持</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2019-01-20-55247066.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/55247066&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b3a6d48f40fbd38a1957c2973ba38c53_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;236&quot; data-rawheight=&quot;306&quot; class=&quot;content_image&quot; width=&quot;236&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b3a6d48f40fbd38a1957c2973ba38c53_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;236&quot; data-rawheight=&quot;306&quot; class=&quot;content_image lazy&quot; width=&quot;236&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-b3a6d48f40fbd38a1957c2973ba38c53_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;也不知道是不是我&lt;b&gt;已身处&lt;/b&gt;开发者行列的缘故，&lt;br&gt;从行内来看，我了解到这几年&lt;b&gt;转行&lt;/b&gt;做程序员的年轻人越来越多了，&lt;br&gt;同事中科班出身的，也少之又少。&lt;/p&gt;&lt;p&gt;这可能是跟近几年软件行业的极速发展有关，&lt;br&gt;有大量的工作机会，也需要更多的人。&lt;/p&gt;&lt;p&gt;我本身也&lt;b&gt;不是&lt;/b&gt;计算机专业的。&lt;br&gt;和当前的这些汹涌从业大军比起来，&lt;br&gt;我刚毕业时之所以选择编程，是因为&lt;b&gt;别无选择&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;当时几乎找不到任何力所能及的工作，&lt;br&gt;只有&lt;b&gt;编程&lt;/b&gt;这一条路可以走。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;如何面对选择&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-a7d449783cffcf162f810cea1ee39035_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;275&quot; data-rawheight=&quot;183&quot; class=&quot;content_image&quot; width=&quot;275&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-a7d449783cffcf162f810cea1ee39035_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;275&quot; data-rawheight=&quot;183&quot; class=&quot;content_image lazy&quot; width=&quot;275&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-a7d449783cffcf162f810cea1ee39035_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;选择一个行业之前，是需要仔细考虑的，&lt;br&gt;虽然学校里并没有特意告知我们&lt;b&gt;需要一个考虑的过程&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;而且当面临多个选择时，&lt;b&gt;纠结感&lt;/b&gt;也会立刻袭上心来，&lt;br&gt;翻来覆去不知道到底哪个选择才是正确的。&lt;/p&gt;&lt;p&gt;我认为此时就应该采用&lt;b&gt;试探法&lt;/b&gt;，&lt;br&gt;尽可能多的&lt;b&gt;行动&lt;/b&gt;起来，尝试做一些&lt;b&gt;切实相关的&lt;/b&gt;工作。&lt;br&gt;不向前走就只能原地踏步，左右为难的根本原因是&lt;b&gt;信息量不足&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这时候就需要进行广泛的调研，&lt;br&gt;以纠正了自己不恰当的&lt;b&gt;假设&lt;/b&gt;与&lt;b&gt;认知&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;如何决定&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-81513cc7ee93cb48ba740d3b52ea4bc9_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;225&quot; data-rawheight=&quot;225&quot; class=&quot;content_image&quot; width=&quot;225&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-81513cc7ee93cb48ba740d3b52ea4bc9_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;225&quot; data-rawheight=&quot;225&quot; class=&quot;content_image lazy&quot; width=&quot;225&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-81513cc7ee93cb48ba740d3b52ea4bc9_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;甚至都没人告诉过我们&lt;b&gt;如何做决定&lt;/b&gt;，这很不幸，&lt;br&gt;因此，要么我们做出的决定都比较&lt;b&gt;草率&lt;/b&gt;，&lt;br&gt;要么我们就&lt;b&gt;难以&lt;/b&gt;做出决定。&lt;/p&gt;&lt;p&gt;尤其是当我们有众多选择的时候，&lt;br&gt;总得有所&lt;b&gt;取舍&lt;/b&gt;，&lt;br&gt;什么都不放弃，就什么也得不到。&lt;/p&gt;&lt;p&gt;因此，做决定需要用&lt;b&gt;排除法&lt;/b&gt;，&lt;br&gt;不要认为自己擅长做任何事情，而是要看到自己的弱点。&lt;br&gt;保持谦虚，将有助于我们回归理性&lt;b&gt;消除野心&lt;/b&gt;看清现实。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;坚持&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f06f704a5b92ea4d7c4c0d155e4aef35_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;361&quot; data-rawheight=&quot;300&quot; class=&quot;content_image&quot; width=&quot;361&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f06f704a5b92ea4d7c4c0d155e4aef35_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;361&quot; data-rawheight=&quot;300&quot; class=&quot;content_image lazy&quot; width=&quot;361&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-f06f704a5b92ea4d7c4c0d155e4aef35_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;一旦做出决定，似乎只要&lt;b&gt;坚持住&lt;/b&gt;迎接胜利就行了，&lt;br&gt;其实这一点都不简单，&lt;br&gt;有太多的人在中途&lt;b&gt;改变&lt;/b&gt;了主意。&lt;/p&gt;&lt;p&gt;会不会有更好的选择？&lt;br&gt;这样做究竟对不对？&lt;br&gt;这些&lt;b&gt;自我怀疑&lt;/b&gt;，很容易让我们半途而废。&lt;/p&gt;&lt;p&gt;所以，应对迷茫，唯一的办法就是&lt;b&gt;傻瓜式的坚持&lt;/b&gt;，&lt;br&gt;一旦做出决定，就不要再听别人的&lt;b&gt;建议&lt;/b&gt;了，&lt;br&gt;因为，不在于做什么&lt;b&gt;事&lt;/b&gt;，而在于做事的&lt;b&gt;人&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;选取一个固定时间段，每天坚持完这几个小时，&lt;br&gt;不要想那么多，让改变慢慢发生，&lt;br&gt;尤其不要考虑这件事&lt;b&gt;是否&lt;/b&gt;有意义。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文描写了与&lt;b&gt;选择&lt;/b&gt;，&lt;b&gt;决定&lt;/b&gt;以及&lt;b&gt;坚持&lt;/b&gt;相关的心理活动，&lt;br&gt;这方面我们听说过很多&lt;b&gt;相互矛盾&lt;/b&gt;的说法，&lt;br&gt;“选择大于努力”，“失败只有一种，那就是半途而废”，等等。&lt;/p&gt;&lt;p&gt;因此，一旦遇到困难，我们就会&lt;b&gt;陷入纠结&lt;/b&gt;，&lt;br&gt;到底是应该灵活选择？还是应当坚持下去？&lt;br&gt;是虚心接受别人的建议？还是坚持自己的看法？&lt;/p&gt;&lt;p&gt;本文倾向于把这种问题分为三个&lt;b&gt;阶段&lt;/b&gt;，&lt;br&gt;在&lt;b&gt;选择阶段&lt;/b&gt;，我们要尽量多的掌握信息，开阔视野，&lt;br&gt;在&lt;b&gt;决定阶段&lt;/b&gt;，要看清自己的局限性，消除野心，&lt;br&gt;而在&lt;b&gt;坚持阶段&lt;/b&gt;，就得义无反顾的坚持下去，绝不动摇。&lt;/p&gt;&lt;p&gt;这样我们的方案，就能够吸取众家之长了，&lt;br&gt;也具有较强的&lt;b&gt;可执行性&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;正是，&lt;/p&gt;&lt;blockquote&gt;古人学问无遗力，少壮工夫老始成。&lt;br&gt;纸上得来终觉浅，绝知此事要躬行。&lt;/blockquote&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2019-01-20-55247066</guid>
<pubDate>Sun, 20 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>前端开发心理学（三）：攻防战</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2019-01-19-55247931.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/55247931&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-269ec9d7fb0f502c3362414f395fc709_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;260&quot; data-rawheight=&quot;194&quot; class=&quot;content_image&quot; width=&quot;260&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-269ec9d7fb0f502c3362414f395fc709_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;260&quot; data-rawheight=&quot;194&quot; class=&quot;content_image lazy&quot; width=&quot;260&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-269ec9d7fb0f502c3362414f395fc709_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;在九十年代，当时电脑还不是那么普及，&lt;br&gt;网络更不用说了，不但速度慢，而且内容还缺乏。&lt;br&gt;人们日常接受&lt;b&gt;信息&lt;/b&gt;的渠道是，看电视，查书和读报纸。&lt;/p&gt;&lt;p&gt;随着互联网的快速发展，我们虽然也享受到了极大的便利，&lt;br&gt;但是&lt;b&gt;大脑&lt;/b&gt;也因此受到了摧残，&lt;br&gt;头脑中每天都&lt;b&gt;充斥着&lt;/b&gt;琐碎的信息，占用了很大的处理&lt;b&gt;带宽&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;信息的更新速度，我们已经远远&lt;b&gt;跟不上了&lt;/b&gt;。&lt;br&gt;因此，我觉得未来的人们肯定&lt;b&gt;并不缺乏信息&lt;/b&gt;，&lt;br&gt;而是更缺乏对信息的&lt;b&gt;过滤&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;现在，我们虽然学习的更快了，但是环境也更&lt;b&gt;嘈杂&lt;/b&gt;了，&lt;br&gt;让我们更难&lt;b&gt;专心&lt;/b&gt;的做事情。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;护城河&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4eceef40f3eacaf2e53c1940c364671a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;440&quot; data-rawheight=&quot;198&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;440&quot; data-original=&quot;https://pic3.zhimg.com/v2-4eceef40f3eacaf2e53c1940c364671a_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4eceef40f3eacaf2e53c1940c364671a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;440&quot; data-rawheight=&quot;198&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;440&quot; data-original=&quot;https://pic3.zhimg.com/v2-4eceef40f3eacaf2e53c1940c364671a_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4eceef40f3eacaf2e53c1940c364671a_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;我们知道，在一场战争中，虽然&lt;b&gt;进攻&lt;/b&gt;很重要，&lt;br&gt;但是&lt;b&gt;防守&lt;/b&gt;无疑更加重要。&lt;br&gt;假如没有一个足够坚固的堡垒守护胜利的成果，就会落个&lt;b&gt;疲于奔命&lt;/b&gt;的下场。&lt;/p&gt;&lt;p&gt;可是，如果再想想我们自己的话，&lt;br&gt;在&lt;b&gt;学习&lt;/b&gt;各种新知识的过程中，又何尝不是疲于奔命呢？&lt;/p&gt;&lt;p&gt;例如，今天遇到了一个xx专家，于是我们就想把xx学好，&lt;br&gt;明天又看到某人精通zz，我们就又想去学zz了。&lt;br&gt;这样学习，让自己好累啊。&lt;/p&gt;&lt;p&gt;因此，&lt;b&gt;营销&lt;/b&gt;和&lt;b&gt;自学&lt;/b&gt;，&lt;br&gt;简直可以看做是，现代社会中的一个&lt;b&gt;没有硝烟的攻防战&lt;/b&gt;了。&lt;/p&gt;&lt;p&gt;在攻防战中，护城河很重要，&lt;br&gt;我们必须有让别人无法轻易取胜的&lt;b&gt;杀手锏&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;剑走偏锋&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ba35a710d01dd7b587b126e1aa2b0036_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;252&quot; data-rawheight=&quot;188&quot; class=&quot;content_image&quot; width=&quot;252&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ba35a710d01dd7b587b126e1aa2b0036_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;252&quot; data-rawheight=&quot;188&quot; class=&quot;content_image lazy&quot; width=&quot;252&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-ba35a710d01dd7b587b126e1aa2b0036_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;提到攻防&lt;b&gt;策略&lt;/b&gt;，就不得不提中国古代的一本奇书了，&lt;br&gt;就是《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/1949420/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;孙子兵法&lt;/a&gt;》。&lt;/p&gt;&lt;blockquote&gt;兵者，诡道也。&lt;/blockquote&gt;&lt;p&gt;在孙子兵法中，“兵”可以理解为“资源”，&lt;br&gt;这本书，正是教人&lt;b&gt;如何运用资源&lt;/b&gt;，在不利的情况下取胜的。&lt;/p&gt;&lt;p&gt;对于防守而言，兵法中是这样写的，&lt;/p&gt;&lt;blockquote&gt;不可胜者，守也；可胜者，攻也。&lt;br&gt;守则不足，攻则有余。&lt;/blockquote&gt;&lt;p&gt;有了不可战胜的条件，就可以守；对方出现了可胜之隙，就可以攻；&lt;br&gt;守，应依靠自己不可战胜，力有裕如；攻，要针对对方弱点、不足，举兵必克。&lt;/p&gt;&lt;p&gt;因此，我们要&lt;b&gt;先让自己不可战胜&lt;/b&gt;，再去进攻。&lt;br&gt;这一点看起来是很难的，&lt;br&gt;其实不然。&lt;/p&gt;&lt;p&gt;具体对软件开发而言，&lt;br&gt;我们只需要把一项&lt;b&gt;冷门的知识&lt;/b&gt;掌握就足够了，&lt;br&gt;一旦遭遇别人的&lt;b&gt;营销&lt;/b&gt;，只需要拿出这个&lt;b&gt;武器&lt;/b&gt;即可。&lt;/p&gt;&lt;p&gt;千万不要贸然去&lt;b&gt;别人的地盘&lt;/b&gt;打仗。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;求战&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f9d461e9675c1fbadf70698470889075_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;424&quot; data-rawheight=&quot;232&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;424&quot; data-original=&quot;https://pic2.zhimg.com/v2-f9d461e9675c1fbadf70698470889075_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f9d461e9675c1fbadf70698470889075_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;424&quot; data-rawheight=&quot;232&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;424&quot; data-original=&quot;https://pic2.zhimg.com/v2-f9d461e9675c1fbadf70698470889075_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-f9d461e9675c1fbadf70698470889075_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;有了护城河之后，就有了不可被战胜的条件了，&lt;br&gt;接下来该怎样取得胜利呢？&lt;/p&gt;&lt;p&gt;这时候就该找对方的弱点&lt;b&gt;求战&lt;/b&gt;了，&lt;/p&gt;&lt;blockquote&gt;我专为一，敌分为十，是以十攻其一也，则我众而敌寡；&lt;br&gt;能以众击寡者，则吾之所与战者，约矣。&lt;/blockquote&gt;&lt;p&gt;我集中兵力为一处，敌分散兵力为十处，这就形成局部的以十防一的态势，&lt;br&gt;那么我就兵力众多而敌人就兵力寡少了。&lt;br&gt;能以众多兵力对付寡少兵力，与我交战的敌人就陷入困境了。&lt;/p&gt;&lt;p&gt;在信息爆炸的时代，虽然人们获取信息的渠道增多了，&lt;br&gt;但同时，也没有人能够&lt;b&gt;精通所有的&lt;/b&gt;知识。&lt;br&gt;在别人不擅长的领域，更容易取得成功。&lt;/p&gt;&lt;p&gt;所以，&lt;/p&gt;&lt;blockquote&gt;古之所谓善战者，胜于易胜者也。&lt;br&gt;是故胜兵先胜而后求战，败兵先战而后求胜。&lt;/blockquote&gt;&lt;p&gt;古代善战的人，总是取胜于&lt;b&gt;容易取胜的&lt;/b&gt;敌人。&lt;br&gt;因此，胜利之师是&lt;b&gt;先具备必胜的条件&lt;/b&gt;然后再去交战，&lt;br&gt;失败之师总是先同敌人交战，然后&lt;b&gt;期求&lt;/b&gt;从苦战中侥幸取胜。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;回到现实&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-448b82851337cc80769da158d7cd2f21_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;396&quot; data-rawheight=&quot;210&quot; class=&quot;content_image&quot; width=&quot;396&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-448b82851337cc80769da158d7cd2f21_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;396&quot; data-rawheight=&quot;210&quot; class=&quot;content_image lazy&quot; width=&quot;396&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-448b82851337cc80769da158d7cd2f21_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;对软件开发而言，跟别人比&lt;b&gt;别人擅长的&lt;/b&gt;那些知识点，是不明智的，&lt;br&gt;我们也没必要浪费精力去“弥补”自己的差距。&lt;/p&gt;&lt;p&gt;相反，我们应该先去学一些，别人不怎么关注的但是&lt;b&gt;确实有用的&lt;/b&gt;知识，&lt;br&gt;并以此作为自己的护城河，&lt;b&gt;保护自己&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;在跟别人讨论问题时，也不要被带着走，而是先找到&lt;b&gt;对自己有利的位置&lt;/b&gt;。&lt;br&gt;这样就会节省出大量的时间，去学那些真正对自己有用的知识，&lt;br&gt;知识是学不完的，“弥补差距”是个&lt;b&gt;伪命题&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文借用孙子兵法阐述了&lt;b&gt;学习过程中&lt;/b&gt;的攻防战，&lt;br&gt;让我们认识到，在学习资料极大丰富的情况下，&lt;br&gt;可能更考验我们的应敌&lt;b&gt;战略&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;如果说不学习是因为懒惰，&lt;br&gt;那么比懒惰更可悲的是&lt;b&gt;盲目的学习&lt;/b&gt;，&lt;br&gt;盲目的学习浪费了时间，还给自己一种在努力的&lt;b&gt;假象&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;尤其是在别人&lt;b&gt;已经擅长&lt;/b&gt;的领域投入时间，会凶多吉少，&lt;br&gt;我们几乎永远无法成为心目中的那个人。&lt;/p&gt;&lt;p&gt;所以，我们得在混乱中塑造性格，在平凡中显出特色。&lt;br&gt;先成为小圈子里&lt;b&gt;独一无二&lt;/b&gt;的那个人吧。&lt;/p&gt;&lt;p&gt;正是，&lt;/p&gt;&lt;blockquote&gt;我家洗砚池头树，朵朵花开淡墨痕。&lt;br&gt;不要人夸好颜色，只留清气满乾坤。&lt;/blockquote&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2019-01-19-55247931</guid>
<pubDate>Sat, 19 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>前端开发心理学（一）：开篇</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2019-01-19-54228461.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54228461&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;850&quot; data-rawheight=&quot;603&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;850&quot; data-original=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;850&quot; data-rawheight=&quot;603&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;850&quot; data-original=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E5%25BF%2583%25E7%2590%2586%25E5%25AD%25A6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;心理学&lt;/a&gt;是一门研究人类以及其他动物的&lt;b&gt;内在心理历程&lt;/b&gt;、精神功能和&lt;b&gt;外在行为&lt;/b&gt;的科学，&lt;br&gt;既是一门理论学科，也是一门应用学科。&lt;br&gt;包括理论心理学与应用心理学两大领域。&lt;/p&gt;&lt;p&gt;心理学研究涉及&lt;b&gt;意识、感觉、知觉、认知、动机、&lt;/b&gt;&lt;br&gt;&lt;b&gt;情绪、人格、行为和人际关系&lt;/b&gt;等众多领域，影响其他学科的发展。&lt;/p&gt;&lt;p&gt;例如：教育学、管理学、传播学、社会学、&lt;br&gt;经济学、精神病学、统计学、&lt;b&gt;计算机科学&lt;/b&gt;以及文学等等。&lt;/p&gt;&lt;p&gt;心理学一方面尝试用&lt;b&gt;大脑运作&lt;/b&gt;来解释个体基本的行为与心理机能，&lt;br&gt;同时，心理学也尝试解释个体&lt;b&gt;心理机能&lt;/b&gt;在社会行为与社会动力中的角色。&lt;/p&gt;&lt;p&gt;&lt;b&gt;心理学家从事基础研究的目的是描述、解释、预测和控制行为&lt;/b&gt;。&lt;br&gt;应用心理学家还有第五个目的——提高人类生活的质量。&lt;br&gt;这些目标构成了心理学事业的基础。&lt;/p&gt;&lt;p&gt;以上截取自维基百科（&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E5%25BF%2583%25E7%2590%2586%25E5%25AD%25A6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;心理学&lt;/a&gt;）。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;写作目的&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;364&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;364&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;本系列文章之所以&lt;b&gt;盗用&lt;/b&gt;“开发心理学”的名字，&lt;br&gt;是想向&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Gerald_Weinberg&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Gerald Weinberg&lt;/a&gt;前辈致敬，&lt;br&gt;他是著名的软件思想家，有30多本书籍和数以百计的论文。&lt;/p&gt;&lt;p&gt;Weinberg写过很多对程序员“友好”的著作，例如，&lt;br&gt;《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/25772550/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;你的灯亮着吗&lt;/a&gt;》《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26282714/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;咨询的奥秘&lt;/a&gt;》《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/1866824/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;理解专业程序员&lt;/a&gt;》&lt;br&gt;《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26298694/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;系统化思维导论&lt;/a&gt;》《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26419766/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;程序开发心理学&lt;/a&gt;》，等等。&lt;/p&gt;&lt;p&gt;书中谈论的很多话题，都与&lt;b&gt;思维方式&lt;/b&gt;有关，&lt;br&gt;为我打开了一扇通往新世界的大门，&lt;br&gt;让我认识到&lt;b&gt;看待问题角度&lt;/b&gt;的重要性。&lt;/p&gt;&lt;p&gt;类似的，在编写软件的时候，我们除了会考虑&lt;b&gt;编程技巧&lt;/b&gt;之外，&lt;br&gt;内心中还有丰富多彩的&lt;b&gt;心理活动&lt;/b&gt;，&lt;br&gt;这些心理活动，对我们的最终&lt;b&gt;行为&lt;/b&gt;也产生了影响。&lt;/p&gt;&lt;p&gt;本系列文章，主要是想分享一下自己的&lt;b&gt;所见所感&lt;/b&gt;，&lt;br&gt;希望能得到一些共鸣。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;最后，不得不&lt;b&gt;诚恳&lt;/b&gt;的说，我并不是心理学专业的，&lt;br&gt;只是对心理学感兴趣。&lt;/p&gt;&lt;p&gt;因此，肯定会出现一些不正确的认识，&lt;br&gt;恳请各位多多包涵，不吝指正。&lt;/p&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2019-01-19-54228461</guid>
<pubDate>Sat, 19 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>前端开发心理学（一）：开篇</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2019-01-07-54228461.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54228461&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;850&quot; data-rawheight=&quot;603&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;850&quot; data-original=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;850&quot; data-rawheight=&quot;603&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;850&quot; data-original=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_r.jpg&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-23c72660ec23e890efd8a270445adeab_b.jpg&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;背景&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E5%25BF%2583%25E7%2590%2586%25E5%25AD%25A6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;心理学&lt;/a&gt;是一门研究人类以及其他动物的&lt;b&gt;内在心理历程&lt;/b&gt;、精神功能和&lt;b&gt;外在行为&lt;/b&gt;的科学，&lt;br&gt;既是一门理论学科，也是一门应用学科。&lt;br&gt;包括理论心理学与应用心理学两大领域。&lt;/p&gt;&lt;p&gt;心理学研究涉及&lt;b&gt;意识、感觉、知觉、认知、动机、&lt;br&gt;情绪、人格、行为和人际关系&lt;/b&gt;等众多领域，影响其他学科的发展。&lt;/p&gt;&lt;p&gt;例如：教育学、管理学、传播学、社会学、&lt;br&gt;经济学、精神病学、统计学、&lt;b&gt;计算机科学&lt;/b&gt;以及文学等等。&lt;/p&gt;&lt;p&gt;心理学一方面尝试用&lt;b&gt;大脑运作&lt;/b&gt;来解释个体基本的行为与心理机能，&lt;br&gt;同时，心理学也尝试解释个体&lt;b&gt;心理机能&lt;/b&gt;在社会行为与社会动力中的角色。&lt;/p&gt;&lt;p&gt;&lt;b&gt;心理学家从事基础研究的目的是描述、解释、预测和控制行为&lt;/b&gt;。&lt;br&gt;应用心理学家还有第五个目的——提高人类生活的质量。&lt;br&gt;这些目标构成了心理学事业的基础。&lt;/p&gt;&lt;p&gt;以上截取自维基百科（&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//zh.wikipedia.org/wiki/%25E5%25BF%2583%25E7%2590%2586%25E5%25AD%25A6&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;心理学&lt;/a&gt;）。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;写作目的&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;364&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;364&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;640&quot; data-original=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-e547df38b42020dd561c0ef06773d101_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;本系列文章之所以&lt;b&gt;盗用&lt;/b&gt;“开发心理学”的名字，&lt;br&gt;是想向&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//en.wikipedia.org/wiki/Gerald_Weinberg&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;Gerald Weinberg&lt;/a&gt;前辈致敬，&lt;br&gt;他是著名的软件思想家，有30多本书籍和数以百计的论文。&lt;/p&gt;&lt;p&gt;Weinberg写过很多对程序员“友好”的著作，例如，&lt;br&gt;《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/25772550/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;你的灯亮着吗&lt;/a&gt;》《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26282714/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;咨询的奥秘&lt;/a&gt;》《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/1866824/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;理解专业程序员&lt;/a&gt;》&lt;br&gt;《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26298694/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;系统化思维导论&lt;/a&gt;》《&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//book.douban.com/subject/26419766/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;程序开发心理学&lt;/a&gt;》，等等。&lt;/p&gt;&lt;p&gt;书中谈论的很多话题，都与&lt;b&gt;思维方式&lt;/b&gt;有关，&lt;br&gt;为我打开了一扇通往新世界的大门，&lt;br&gt;让我认识到&lt;b&gt;看待问题角度&lt;/b&gt;的重要性。&lt;/p&gt;&lt;p&gt;类似的，在编写软件的时候，我们除了会考虑&lt;b&gt;编程技巧&lt;/b&gt;之外，&lt;br&gt;内心中还有丰富多彩的&lt;b&gt;心理活动&lt;/b&gt;，&lt;br&gt;这些心理活动，对我们的最终&lt;b&gt;行为&lt;/b&gt;也产生了影响。&lt;/p&gt;&lt;p&gt;本系列文章，主要是想分享一下自己的&lt;b&gt;所见所感&lt;/b&gt;，&lt;br&gt;希望能得到一些共鸣。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;最后，不得不&lt;b&gt;诚恳&lt;/b&gt;的说，我并不是心理学专业的，&lt;br&gt;只是对心理学感兴趣。&lt;/p&gt;&lt;p&gt;因此，肯定会出现一些不正确的认识，&lt;br&gt;恳请各位多多包涵，不吝指正。&lt;/p&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2019-01-07-54228461</guid>
<pubDate>Mon, 07 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>设计模式奏鸣曲（九）：软件设计者的自身修养</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2018-09-10-40453858.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/40453858&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-17dc9e017f96a3b76bb50843e76f9699_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;700&quot; data-rawheight=&quot;467&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-17dc9e017f96a3b76bb50843e76f9699&quot; data-watermark-src=&quot;v2-5bf0672569dc64d2a8467a1ad5b6a0b1&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;h2&gt;&lt;b&gt;1. 用户&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%88%BF%E9%96%93%E8%A3%8F%E7%9A%84%E5%A4%A7%E8%B1%A1&quot;&gt;房间里的大象&lt;/a&gt;（elephant in the room）是一个英语熟语，&lt;br&gt;用来隐喻某件虽然明显却被集体视而不见、不做讨论的事情或者叫风险，&lt;br&gt;抑或是一种不敢反抗争辩某些明显的问题的&lt;b&gt;集体迷思&lt;/b&gt;。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c7fa2f1919ca96ea8281ef3fb648d063_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;572&quot; data-rawheight=&quot;344&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-c7fa2f1919ca96ea8281ef3fb648d063&quot; data-watermark-src=&quot;v2-f8e379a201526bcc1d5e351383ff7f16&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;在软件设计领域有哪些集体迷思呢？&lt;/p&gt;&lt;p&gt;我想其中之一应该是，&lt;br&gt;&lt;b&gt;人们会经常性的忽视软件方案的使用成本。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;大多数软件开发人员，卖的是开发软件这项服务，&lt;br&gt;所以，通常我们不是在为自己解决问题，而是为用户。&lt;br&gt;可是，一旦我们自己不使用它，就不知道多么&lt;b&gt;难用&lt;/b&gt;了。&lt;/p&gt;&lt;p&gt;我们一定见识过那些体验较差的软件，&lt;br&gt;深知研究正确的使用方式，是一件令人沮丧的事情，&lt;br&gt;简直是在浪费生命。&lt;/p&gt;&lt;p&gt;不幸的是，我们的用户也这么认为。&lt;/p&gt;&lt;p&gt;究其根本，是因为人们总是习惯性的认为，&lt;br&gt;教会用户如何使用软件，是&lt;b&gt;别人的事情&lt;/b&gt;，&lt;br&gt;而钻研怎样把功能实现好，才是工程师&lt;b&gt;分内之事&lt;/b&gt;。&lt;/p&gt;&lt;blockquote&gt;这样精益求精的态度值得赞赏。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;2. 预期&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;英国作家&lt;a href=&quot;http://www.baike.com/wiki/%E5%A8%81%E5%BB%89%C2%B7%E8%B5%AB%E5%85%B9%E9%87%8C%E7%89%B9&quot;&gt;威·赫兹里特&lt;/a&gt;说，偏见是无知的产物。&lt;/p&gt;&lt;p&gt;人们之所以容易产生偏见，主要原因还是对&lt;b&gt;其他事物&lt;/b&gt;不够了解，&lt;br&gt;在锤子眼里，所有问题都是钉子。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-212cef7982bbb710a59a89f9f0aecda0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;500&quot; data-rawheight=&quot;278&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-212cef7982bbb710a59a89f9f0aecda0&quot; data-watermark-src=&quot;v2-55b388e8da9aef5962a060d8f9640675&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;这种拿着方案去匹配可解问题的方法，很容易产生偏见。&lt;/p&gt;&lt;blockquote&gt;在采取行动说服别人接受我们的方案之前，必须问自己一个非常重要的问题。&lt;br&gt;我们是在解决问题，还是在推行方案？&lt;/blockquote&gt;&lt;p&gt;方案和问题是不同的，问题是目的，方案是手段。&lt;br&gt;长视者把目的当手段，短视者把手段当目的。&lt;/p&gt;&lt;p&gt;不同的人区分目标和手段的方式，也是不同的，因为每个人的预期不一样。&lt;/p&gt;&lt;blockquote&gt;所谓问题，就是应有的景象与现状之间的落差，&lt;br&gt;所谓解决方案就是填补落差的处方签。&lt;/blockquote&gt;&lt;p&gt;建立正确的预期，才能解决正确的问题。&lt;br&gt;&lt;b&gt;在方案上产生冲突的根本原因是，不明白别人的预期。&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;3. 修身&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;为了消除偏见，我们就得想尽办法掌握最先进的文明，&lt;/p&gt;&lt;blockquote&gt;Any sufficiently advanced technology is indistinguishable from magic.&lt;/blockquote&gt;&lt;p&gt;学习那些先进的解决问题的方式。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-359376338444fac691a0fc90bf56ea41_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;200&quot; data-rawheight=&quot;200&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-359376338444fac691a0fc90bf56ea41&quot; data-watermark-src=&quot;v2-37eff338565aabeb68023c74bf4f9a93&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;此外，软件作品还表现了作者的做事方式。&lt;br&gt;软件如何关爱用户，如何与其他系统交互，如何运营如何发展，&lt;br&gt;正是作者自身处世方式的写照。&lt;/p&gt;&lt;p&gt;作者的设计哲学，借由作品淋漓尽致的体现出来。&lt;/p&gt;&lt;blockquote&gt;古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知，致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。&lt;br&gt;—— 《&lt;a href=&quot;https://baike.baidu.com/item/%E7%A4%BC%E8%AE%B0%C2%B7%E5%A4%A7%E5%AD%A6&quot;&gt;礼记·大学&lt;/a&gt;》&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;只有自身有修养，才能坚持做正确的事情。&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;如果你在意谁得到了赏识，你就永远不能完成任何事。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;4. 文化&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;如果在&lt;b&gt;团队文化&lt;/b&gt;上，不想看到坏事发生，&lt;br&gt;那么他们所设计出来的软件，在遇到异常情况时，就不会报错。&lt;/p&gt;&lt;p&gt;如果在&lt;b&gt;团队文化&lt;/b&gt;上，过分注重结果而不在乎过程，&lt;br&gt;那么突发的未料到的事情，就会多出来很多，&lt;br&gt;他们设计出来的软件系统就总会无端的发生故障。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e084494364d1ef53159cd9825a6ab558_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;958&quot; data-rawheight=&quot;476&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-e084494364d1ef53159cd9825a6ab558&quot; data-watermark-src=&quot;v2-a5de045a9eb0241153bb3d286a3f32d0&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;如果在&lt;b&gt;团队文化&lt;/b&gt;上，互相推卸责任人人自危，&lt;br&gt;那么与其他系统进行交互时，团队设计出来的系统也将只求自保。&lt;/p&gt;&lt;p&gt;&lt;b&gt;总之，团队设计出来的软件，在整个软件生态中，&lt;/b&gt;&lt;br&gt;&lt;b&gt;表现出了团队文化所拥有的那些特征。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这正是作品表现作者做事方式的另一个例子。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;为了设计出一个好的系统，我们得在内心深处乐于&lt;b&gt;助人&lt;/b&gt;，&lt;b&gt;坚持&lt;/b&gt;做正确的事情，&lt;br&gt;必须学会建立合适的&lt;b&gt;预期&lt;/b&gt;，掌握最先进的技术&lt;b&gt;文明&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这些精神财富，都会在我们的&lt;b&gt;设计&lt;/b&gt;中体现出来。&lt;/p&gt;&lt;blockquote&gt;Your biggest hurdle isn&#39;t your opponent, it&#39;s yourself.&lt;/blockquote&gt;&lt;p&gt;有时候不用过分纠结做事方式，只是&lt;b&gt;品味&lt;/b&gt;不同而已。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;参考&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/1709302/&quot;&gt;数学·计算·逻辑&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/1288844/&quot;&gt;设计心理学&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/26416883/&quot;&gt;乌合之众&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/27127665/&quot;&gt;大癫狂&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/25772550/&quot;&gt;你的灯亮着吗&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/3604068/&quot;&gt;发现问题的思考术&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/25783682/&quot;&gt;营销的16个关键词&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/6990284/&quot;&gt;布道之道&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/26835090/&quot;&gt;软技能：代码之外的生存指南&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/1784687/&quot;&gt;Expert C Programming&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/26282714/&quot;&gt;咨询的奥秘&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%85%8B%E6%8B%89%E5%85%8B%E5%9F%BA%E6%9C%AC%E5%AE%9A%E5%BE%8B&quot;&gt;克拉克基本定律&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%88%BF%E9%96%93%E8%A3%8F%E7%9A%84%E5%A4%A7%E8%B1%A1&quot;&gt;房间里的大象&lt;/a&gt;&lt;/p&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2018-09-10-40453858</guid>
<pubDate>Mon, 10 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>设计模式奏鸣曲（八）：要不要相信类型</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2018-09-07-40075765.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/40075765&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-45ffddfe55316d4e15e970bb4f4ee5a1_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;700&quot; data-rawheight=&quot;409&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-45ffddfe55316d4e15e970bb4f4ee5a1&quot; data-watermark-src=&quot;v2-23bc477b007ec02c513c469fdf4f7a35&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;h2&gt;&lt;b&gt;1. 一致性&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E7%9B%B4%E8%A7%89%E4%B8%BB%E4%B9%89%E9%80%BB%E8%BE%91&quot;&gt;直觉主义逻辑&lt;/a&gt;不承认经典逻辑中的&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E6%8E%92%E4%B8%AD%E5%BE%8B&quot;&gt;排中律&lt;/a&gt;——对于任意命题P，或者P真，或者¬P为真。&lt;br&gt;但是和经典逻辑一样，接受&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%97%A0%E7%9F%9B%E7%9B%BE%E5%BE%8B&quot;&gt;无矛盾律&lt;/a&gt;——任何命题P，P和¬P不能同时为真。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b716a1bd5fe145e8f7468ef76fb0a135_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;330&quot; data-rawheight=&quot;328&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-b716a1bd5fe145e8f7468ef76fb0a135&quot; data-watermark-src=&quot;v2-5166b84a7f111863cd32d2d20d9a0b22&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;无矛盾的逻辑系统，称为&lt;b&gt;一致的&lt;/b&gt;，或者协调的。&lt;br&gt;一个有用的逻辑系统不能包含矛盾。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;2. 完备性&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;上文关于一致性的讨论中，我们并没有区分逻辑公式的&lt;b&gt;证明&lt;/b&gt;和&lt;b&gt;语义&lt;/b&gt;，&lt;br&gt;所谓&lt;b&gt;证明&lt;/b&gt;，就是一串符号推导序列，从一些合法的公式经过一步或多步，推导出另一些合法的公式。&lt;/p&gt;&lt;p&gt;而公式的&lt;b&gt;语义&lt;/b&gt;则是人为选择的，人们倾向于为公式选择&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%AE%9A%E7%90%86&quot;&gt;可靠的&lt;/a&gt;语义，&lt;br&gt;即，所有可证的公式，在语义上都为真。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-964b158a04039bcece9550a8294c27d1_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;361&quot; data-rawheight=&quot;283&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-964b158a04039bcece9550a8294c27d1&quot; data-watermark-src=&quot;v2-e72e4360c7cf2b132e164c78586abd63&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;但是可靠性并不意味着&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%A4%87%E6%80%A7&quot;&gt;完备性&lt;/a&gt;，&lt;br&gt;即，所有语义上为真的命题，并不一定总是可证的。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;3. 第一第二不完备性定理&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;人们在研究逻辑系统的时候，对&lt;b&gt;一致性&lt;/b&gt;和&lt;b&gt;完备性&lt;/b&gt;有着很强烈的追求，&lt;br&gt;谁都希望自己发明的逻辑系统中没有矛盾，而且所有为真的命题都可证。&lt;/p&gt;&lt;p&gt;但是1931年，&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%BA%93%E5%B0%94%E7%89%B9%C2%B7%E5%93%A5%E5%BE%B7%E5%B0%94&quot;&gt;哥德尔&lt;/a&gt;发现了两个定理，粉碎了这个幻想，&lt;/p&gt;&lt;blockquote&gt;任何相容的形式系统，只要蕴涵皮亚诺算术公理，就可以在其中构造在体系中不能被证明的真命题，因此通过推演不能得到所有真命题（即体系是不完备的）。&lt;br&gt;—— &lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%93%A5%E5%BE%B7%E5%B0%94%E4%B8%8D%E5%AE%8C%E5%A4%87%E5%AE%9A%E7%90%86&quot;&gt;哥德尔第一不完备性定理&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;哥德尔定理，给出了符号推导方法的局限性，&lt;br&gt;如果要求系统无矛盾，那么某些事实可能是&lt;b&gt;不可证&lt;/b&gt;的。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f39a2d57e1e2f3c106a5818880b5afa8_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;518&quot; data-rawheight=&quot;353&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-f39a2d57e1e2f3c106a5818880b5afa8&quot; data-watermark-src=&quot;v2-56f5fc0763a97cb114b3ec0f4b66ed13&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;此外，&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%93%A5%E5%BE%B7%E5%B0%94%E4%B8%8D%E5%AE%8C%E5%A4%87%E5%AE%9A%E7%90%86&quot;&gt;哥德尔第二不完备性定理&lt;/a&gt;指出，&lt;/p&gt;&lt;blockquote&gt;任何逻辑自洽的形式系统，只要蕴涵皮亚诺算术公理，它就不能用于证明它本身的相容性。&lt;/blockquote&gt;&lt;p&gt;好吧，连自身的一致性，也不能在系统之内证明了。&lt;/p&gt;&lt;blockquote&gt;所以，在软件开发过程中，检查一个软件系统是否符合设计要求，所使用的方法就是对它进行测试，在这个软件系统之外进行证明。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;4. 排除错误&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;在使用编程语言的时候，我们都或多或少的接触过&lt;b&gt;类型&lt;/b&gt;这个概念。&lt;br&gt;类型系统的一个重要作用就是，通过&lt;b&gt;类型检查&lt;/b&gt;排除可能会发生的错误。&lt;/p&gt;&lt;p&gt;和逻辑系统一样，如果类型系统保证所有&lt;b&gt;良类型&lt;/b&gt;的程序都&lt;b&gt;按预期&lt;/b&gt;正常表现，&lt;br&gt;我们就说它是&lt;b&gt;可靠的&lt;/b&gt;，&lt;br&gt;这是一个很好的性质，&lt;b&gt;如果A成立，则B成立&lt;/b&gt;，建立了&lt;b&gt;符号&lt;/b&gt;和&lt;b&gt;行为&lt;/b&gt;之间的联系。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d9d822c63916fc7b723ab1521ad723b1_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;284&quot; data-rawheight=&quot;90&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-d9d822c63916fc7b723ab1521ad723b1&quot; data-watermark-src=&quot;v2-dfc743dfa2a01282e4b5f3ffacdba948&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;不幸的是，程序即使经过了类型检查，&lt;br&gt;也保证不了那些&lt;b&gt;不在预期范围之内&lt;/b&gt;的特性，&lt;br&gt;即，&lt;b&gt;如果A成立，则C是否成立，我们是不确定的。&lt;/b&gt;&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3bc6c64ae2b45ef09107cd93974808c9_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;260&quot; data-rawheight=&quot;100&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-3bc6c64ae2b45ef09107cd93974808c9&quot; data-watermark-src=&quot;v2-2225c9f3d0cead3e951c6c5dffd65078&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;例如，对除法表达式进行简单的类型检查，能保证除法操作数的类型合法，&lt;br&gt;但无法避免除&lt;code class=&quot;inline&quot;&gt;0&lt;/code&gt;错误，&lt;br&gt;这可能需要更强大的类型系统才行。&lt;/p&gt;&lt;p&gt;另一方面，上面提到良类型的程序，预期会表现正常。&lt;br&gt;但是，类型不合法的程序，却&lt;b&gt;未必&lt;/b&gt;会出错。&lt;br&gt;&lt;b&gt;如果A不成立，那么B是否成立也是不确定的。&lt;/b&gt;&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8216b1c971eefbdc85a609eed003bb2a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;302&quot; data-rawheight=&quot;102&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-8216b1c971eefbdc85a609eed003bb2a&quot; data-watermark-src=&quot;v2-de916fd575c22e18a201d6df9256cf5d&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;这两件事和&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98&quot;&gt;停机问题&lt;/a&gt;是一脉相承的，&lt;br&gt;对于图灵完备的编程语言来说，要想判定一段程序的所有运行时特征，唯一的办法&lt;b&gt;运行它&lt;/b&gt;，仅依赖静态检查是行不通的。&lt;/p&gt;&lt;blockquote&gt;不存在通用的过程，来判断一段程序是否停机。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;5. Believe the type&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;那么我们还要相信类型吗？&lt;br&gt;&lt;b&gt;要相信。&lt;/b&gt;&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9f2137b50469a4455a8cf4a323e8f904_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;180&quot; data-rawheight=&quot;127&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;我们要相信类型系统，可以帮我们排除那些&lt;b&gt;已被证明的&lt;/b&gt;错误。&lt;br&gt;相信类型系统，能指导我们设计出&lt;b&gt;一致的&lt;/b&gt;软件。&lt;/p&gt;&lt;blockquote&gt;Show me your type, and I&#39;ll show you your language.&lt;/blockquote&gt;&lt;p&gt;然而，类型信息却不等同于文档，它只能提供一些辅助信息，&lt;br&gt;它不是用来&lt;b&gt;传递知识&lt;/b&gt;的，真是如有雷同，实属巧合，&lt;br&gt;这恰恰反映了在知识传递方面，所做的工作还不够。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文从逻辑系统出发，介绍了人们经常提及的一些特性，&lt;br&gt;包括一致性，完备性，可靠性，进而还介绍了哥德尔不完备性定理。&lt;/p&gt;&lt;p&gt;&lt;b&gt;类型检查&lt;/b&gt;可看做是一种逻辑推导，&lt;br&gt;它可以排除某些&lt;b&gt;已知的&lt;/b&gt;错误，但也不是万能的。&lt;/p&gt;&lt;p&gt;要想写出高质量的代码，除了在设计方面多花一些心思之外，&lt;br&gt;更好的办法就是对它进行&lt;b&gt;测试&lt;/b&gt;，不论是静态检查还是运行时检查，&lt;br&gt;不论是自动化的单元测试，还是&lt;b&gt;人工测试&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;完全依赖&lt;b&gt;设计&lt;/b&gt;和&lt;b&gt;检查&lt;/b&gt;是行不通的，有时候唯一可以发现错误的方法就是&lt;b&gt;运行&lt;/b&gt;它。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;参考&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/1513387/&quot;&gt;计算机科学中的现代逻辑学&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/1230394/&quot;&gt;离散数学教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/2364517/&quot;&gt;数理逻辑&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://homepage.divms.uiowa.edu/~tinelli/classes/185/Fall06/notes/cardelli-95.pdf&quot;&gt;Type Systems&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/27004230/&quot;&gt;Type-driven Development with Idris&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E7%9B%B4%E8%A7%89%E4%B8%BB%E4%B9%89%E9%80%BB%E8%BE%91&quot;&gt;直觉主义逻辑&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E6%8E%92%E4%B8%AD%E5%BE%8B&quot;&gt;排中律&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E6%97%A0%E7%9F%9B%E7%9B%BE%E5%BE%8B&quot;&gt;无矛盾律&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%8F%AF%E9%9D%A0%E6%80%A7%E5%AE%9A%E7%90%86&quot;&gt;可靠性&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%AE%8C%E5%A4%87%E6%80%A7&quot;&gt;完备性&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%93%A5%E5%BE%B7%E5%B0%94%E4%B8%8D%E5%AE%8C%E5%A4%87%E5%AE%9A%E7%90%86&quot;&gt;哥德尔不完备性定理&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/%E5%81%9C%E6%9C%BA%E9%97%AE%E9%A2%98&quot;&gt;停机问题&lt;/a&gt;&lt;/p&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2018-09-07-40075765</guid>
<pubDate>Fri, 07 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>设计模式奏鸣曲（七）：依赖管理</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2018-09-03-39577769.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/39577769&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-90d8835a214aeddd4468b871ad9e56ff_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1920&quot; data-rawheight=&quot;1080&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-90d8835a214aeddd4468b871ad9e56ff&quot; data-watermark-src=&quot;v2-2520a9e764b1e552afc9c142470093b8&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;h2&gt;&lt;b&gt;1. 系统&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;b&gt;系统&lt;/b&gt;（system）是人们常用的术语，&lt;br&gt;常见的系统，包括财务系统，计算机系统，血液循环系统，等等，&lt;br&gt;它为我们描述、理解、划分和分析组织中的现象，提供了有用的框架。&lt;/p&gt;&lt;blockquote&gt;系统的概念，就本质而言是一定环境中一类为达到某种目的，而相互联系、相互作用的事物有机集合体。&lt;br&gt;——《&lt;a href=&quot;https://book.douban.com/subject/1666873/&quot;&gt;信息系统开发方法&lt;/a&gt;》&lt;/blockquote&gt;&lt;p&gt;系统中各组成要素之间存在着密切的&lt;b&gt;联系&lt;/b&gt;，这种联系决定了整个系统的性质。&lt;br&gt;系统内部的要素本身，也可能构成了一个较小的&lt;b&gt;子系统&lt;/b&gt;，&lt;br&gt;一个系统也可能包含在更大的系统中，这称之为系统的&lt;b&gt;层次性&lt;/b&gt;。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0c4a7e9e33b23bc3f868ad83af486bb5_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;464&quot; data-rawheight=&quot;260&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-0c4a7e9e33b23bc3f868ad83af486bb5&quot; data-watermark-src=&quot;v2-f482952eafe6c99428dcda72151a6365&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;计算机科学中的&lt;b&gt;面向对象编程&lt;/b&gt;，构建了一个&lt;b&gt;对象系统&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;Smalltalk的设计者之一&lt;a href=&quot;https://en.wikipedia.org/wiki/Alan_Kay&quot;&gt;Alan Kay&lt;/a&gt;，&lt;br&gt;在答复&lt;a href=&quot;http://userpage.fu-berlin.de/~ram/pub/pub_jf47ht81Ht/doc_kay_oop_en&quot;&gt;Meaning of &quot;Object-Oriented Programming&quot;&lt;/a&gt;的邮件中提到了，&lt;/p&gt;&lt;blockquote&gt;I thought of objects being like biological cells and/or individual computers on a network, only able to communicate with messages.&lt;/blockquote&gt;&lt;p&gt;Alan Kay将对象（object）类比为生物学中的细胞，计算过程通过对象之间交换信息来完成。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;2. 依赖&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;系统中个组成要素之间可能具有&lt;b&gt;依赖关系&lt;/b&gt;，&lt;br&gt;某一部分改变了，其它部分可能会受到影响。&lt;/p&gt;&lt;p&gt;在面向对象的软件系统中，过多的依赖，意味着系统更&lt;b&gt;脆弱&lt;/b&gt;。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-cb09e27bc625a45329f42c392c7c8045_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;700&quot; data-rawheight=&quot;391&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-cb09e27bc625a45329f42c392c7c8045&quot; data-watermark-src=&quot;v2-a6d153e8dd927ca768a7181b666ecc9f&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;有两个测量指标，可用于衡量系统中各要素之间的依赖情况，&lt;br&gt;分别称为&lt;b&gt;传入耦合&lt;/b&gt;（afferent coupling）与&lt;b&gt;传出耦合&lt;/b&gt;（efferent coupling），&lt;br&gt;它们反映了系统架构的可维护性问题。&lt;/p&gt;&lt;p&gt;要么对象对其他太多对象负有责任——高传入耦合，&lt;br&gt;要么这个对象不够独立于其他对象——高传出耦合。&lt;/p&gt;&lt;p&gt;修改一个高传入耦合的对象，是有风险的，依赖该对象的其他对象，都有可能受到影响。&lt;br&gt;而具有高传出耦合的对象，则更容易受到系统中其它变更的影响。&lt;/p&gt;&lt;blockquote&gt;传入耦合高的对象会造成破坏，传出耦合高的配件则会受到破坏。&lt;/blockquote&gt;&lt;p&gt;我们可以用以下公式，计算系统中每个对象的&lt;b&gt;不稳定性&lt;/b&gt;，&lt;br&gt;其中，&lt;code class=&quot;inline&quot;&gt;1&lt;/code&gt;表示不稳定，&lt;code class=&quot;inline&quot;&gt;0&lt;/code&gt;表示稳定。&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;不稳定性 = 传出耦合 / (传出耦合 + 传入耦合)&lt;/code&gt;&lt;h2&gt;&lt;b&gt;3. 兼容&lt;/b&gt;&lt;/h2&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-19689cc498c4f0f85a898abe80d009a3_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;679&quot; data-rawheight=&quot;198&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-19689cc498c4f0f85a898abe80d009a3&quot; data-watermark-src=&quot;v2-806c0c80c6ceb7387c79492c5f5da00e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;一般而言，依赖是由自身进行管理的，&lt;br&gt;但是，自身被哪些对象所依赖，是不可控的。&lt;br&gt;因此，我们应该尽可能进行&lt;b&gt;兼容更新&lt;/b&gt;。&lt;/p&gt;&lt;blockquote&gt;兼容更新：这些更新中会新增接口，所有先前可用的接口仍保持不变。&lt;br&gt;不兼容更新：这些更新会更改现有接口，使此接口的现有用户操作失败或不正确地执行操作。&lt;br&gt;—— &lt;a href=&quot;https://docs.oracle.com/cd/E24847_01/html/E22196/chapter5-90363.html&quot;&gt;接口兼容性&lt;/a&gt;&lt;/blockquote&gt;&lt;p&gt;兼容更新，遵循了&lt;a href=&quot;https://zh.wikipedia.org/zh-hans/%E5%BC%80%E9%97%AD%E5%8E%9F%E5%88%99&quot;&gt;开闭原则&lt;/a&gt;，&lt;br&gt;即，软件中的对象（类，模块，函数等等），应该对于扩展是开放的，但是对于修改是封闭的。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2e8777d65233c03272e3470bfd345b7c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;700&quot; data-rawheight=&quot;390&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-2e8777d65233c03272e3470bfd345b7c&quot; data-watermark-src=&quot;v2-8441f4e15502b7b231c2671c87bdb154&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;保持兼容性的另一个办法是，对&lt;b&gt;反向依赖&lt;/b&gt;进行管理，&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35929167&quot;&gt;超大型 JavaScript 应用的设计哲学&lt;/a&gt;，这篇文章中提到了一些实践，&lt;/p&gt;&lt;blockquote&gt;如果你 enhance 一个模块，你会让这个模块对你产生依赖。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;4. 版本&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;在进行软件开发的时候，我们都希望依赖是稳定的，&lt;br&gt;如果在开发时，测试时，或者在用户使用时，系统的依赖都是不同的，&lt;br&gt;那就很难保证功能的&lt;b&gt;稳定性&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;除此之外，很多软件系统并不是运行在源代码之上的，&lt;br&gt;而是运行在“目标代码”之上，&lt;br&gt;源代码经过编译，构建，或者打包，最终生成了可“执行”的目标代码。&lt;/p&gt;&lt;p&gt;我们期望，不同时期对源代码进行的任一次构建，&lt;br&gt;都应当生成&lt;b&gt;同样的&lt;/b&gt;一份目标代码，至少也应具有&lt;b&gt;相同的功能&lt;/b&gt;，&lt;br&gt;特别是当依赖项是通过网络进行传输的时候。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-85f333015f28d5798135ab73a8162989_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;188&quot; data-rawheight=&quot;268&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;添加版本号，是一个不错的主意，&lt;br&gt;但是，每一次升级，都必须让&lt;b&gt;所有用户&lt;/b&gt;更新依赖项才会生效，&lt;br&gt;于是人们提出了&lt;a href=&quot;https://semver.org/lang/zh-CN/&quot;&gt;语义化版本&lt;/a&gt;的概念。&lt;/p&gt;&lt;p&gt;语义化版本是一个约定，&lt;br&gt;&lt;b&gt;被认为是&lt;/b&gt;兼容性的变更，会在下一次构建中自动生效，&lt;br&gt;而&lt;b&gt;被认为是&lt;/b&gt;非兼容性的变更，则需要用户手动更新依赖。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文讨论了系统中各要素之间的&lt;b&gt;依赖&lt;/b&gt;，以及对依赖进行管理所衍生出来的问题，&lt;br&gt;增加依赖可能会减少重复，但也会让系统变得更脆弱。&lt;/p&gt;&lt;p&gt;为依赖项添加版本号是一个好习惯，&lt;br&gt;因为不添加意味着总是使用&lt;b&gt;最新&lt;/b&gt;的版本。&lt;/p&gt;&lt;p&gt;最后，现阶段进行&lt;b&gt;反向依赖管理&lt;/b&gt;仍然是困难的，&lt;br&gt;这使得我们不得不坚持开闭原则，&lt;br&gt;改动一个已发布的功能，其&lt;b&gt;影响范围&lt;/b&gt;是不可控的。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;参考&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Compatibility&quot;&gt;Compatibility&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=ZZmUwXEiPm4&quot;&gt;Malte Ubl - Designing very large JavaScript applications&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35929167&quot;&gt;超大型 JavaScript 应用的设计哲学&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/1666873/&quot;&gt;信息系统开发方法&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/2580604/&quot;&gt;持续集成&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt;&lt;/p&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2018-09-03-39577769</guid>
<pubDate>Mon, 03 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>设计模式奏鸣曲（六）：沟通结构</title>
<link>https://henix.github.io/feeds/zhuanlan.self-discipline/2018-08-31-39177473.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/39177473&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-4355bc17577877caa859dcf9f0394f86_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1600&quot; data-rawheight=&quot;900&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-4355bc17577877caa859dcf9f0394f86&quot; data-watermark-src=&quot;v2-d220ffe7acabfd7b592c0078fa09d26e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;h2&gt;&lt;b&gt;1. 沟通结构&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;计算机科学家 &lt;a href=&quot;https://en.wikipedia.org/wiki/Melvin_Conway&quot;&gt;Melvin Conway&lt;/a&gt; 在1968年的一篇&lt;a href=&quot;http://www.melconway.com/Home/Committees_Paper.html&quot;&gt;文章&lt;/a&gt;中提到，&lt;/p&gt;&lt;blockquote&gt;Organizations which design systems are constrained to produce designs which are copies of the communication structures of these organizations.&lt;/blockquote&gt;&lt;p&gt;即，&lt;b&gt;产品结构&lt;/b&gt;反映了设计该产品的组织的&lt;b&gt;沟通结构&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;后来这句话被人们称为，&lt;a href=&quot;http://www.melconway.com/Home/Conways_Law.html&quot;&gt;康威定律&lt;/a&gt;。&lt;br&gt;康威定律并&lt;b&gt;不是&lt;/b&gt;一种心得体会，而是对软件项目所进行&lt;b&gt;观察&lt;/b&gt;的结果。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-28c15e216dbfb527f76a4e950a3f0c6c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;584&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-28c15e216dbfb527f76a4e950a3f0c6c&quot; data-watermark-src=&quot;v2-119093764f623fb9246978bba1c3d33c&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;在软件工程中，假设模块A通过接口依赖模块B，&lt;br&gt;那么，模块A的开发者，就不得不与模块B的开发者，就&lt;b&gt;如何使用&lt;/b&gt;模块B进行&lt;b&gt;沟通&lt;/b&gt;，&lt;br&gt;反之亦然。&lt;/p&gt;&lt;p&gt;因此，软件系统各模块之间的&lt;b&gt;接口结构&lt;/b&gt;，和人与人之间的&lt;b&gt;沟通结构&lt;/b&gt;是一致的。&lt;br&gt;对模块B而言，一旦关注到它的&lt;b&gt;外部特征&lt;/b&gt;，就意味着需要与人进行沟通，&lt;br&gt;有一些必要的信息，必须在接口层面达成&lt;b&gt;共识&lt;/b&gt;。&lt;/p&gt;&lt;blockquote&gt;A description of a system, if it is to describe what goes on inside that system, must describe the system&#39;s connections to the outside world, and it must delineate each of the subsystems and how they are interconnected.&lt;/blockquote&gt;&lt;p&gt;在描述一个系统的时候，除了描述系统内部发生了什么，&lt;br&gt;还必须描述该系统是怎样&lt;b&gt;与外界&lt;/b&gt;进行交互的。&lt;br&gt;而描述系统内部的时候，同时也要谈及子系统&lt;b&gt;之间&lt;/b&gt;是怎样交互的。&lt;/p&gt;&lt;p&gt;作为实现者，关注系统的外部特征，是一件很容易被忽视的事情。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;2. 利益相关者&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;利益是影响人们决策的一项重要因素。&lt;/p&gt;&lt;p&gt;要想促成一件事，那就应该&lt;b&gt;头脑清醒&lt;/b&gt;，小心行事，&lt;br&gt;着眼于利益，而不是立场。&lt;/p&gt;&lt;blockquote&gt;立场是已作的决定，而利益是导致作出这一决定的原因。&lt;/blockquote&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-fe38579e842b9e1eec1b0205ada5ba58_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;250&quot; data-rawheight=&quot;177&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-fe38579e842b9e1eec1b0205ada5ba58&quot; data-watermark-src=&quot;v2-e87f99d9afea35cea6264abbd10e41ad&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;《&lt;a href=&quot;https://book.douban.com/subject/11445551/&quot;&gt;谈判力&lt;/a&gt;》一书中提到，谈判的目的就是实现自己的利益。&lt;br&gt;在谈判发生冲突的时候，应当首先确定双方的利益，&lt;br&gt;问问自己，为什么没有那样做，那样做会影响到的什么利益？&lt;/p&gt;&lt;p&gt;仅仅根据个人喜恶来做出决定，是一个常见的误区。&lt;br&gt;程序员们在讨论&lt;b&gt;代码品味&lt;/b&gt;的时候，很容易犯这个错误。&lt;br&gt;优雅的代码是需要付出代价的，很多现象都是做出&lt;b&gt;让步&lt;/b&gt;的结果。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-3c2bed2cf233952a5880d621ae7ba51f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;225&quot; data-rawheight=&quot;225&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-3c2bed2cf233952a5880d621ae7ba51f&quot; data-watermark-src=&quot;v2-f45d7653e7d6ef3d8d270f87aaeb46a0&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;《&lt;a href=&quot;https://book.douban.com/subject/24530471/&quot;&gt;软件系统架构&lt;/a&gt;》中提到了架构设计中必须考虑的&lt;b&gt;利益相关者&lt;/b&gt;（stakeholder）这一概念，&lt;/p&gt;&lt;blockquote&gt;Stakeholders are the people for whom we build systems.&lt;br&gt;A key part of your role as an architect is knowing how to work with stakeholders in order to create an architecture that meets their complex, overlapping, and often conflicting needs.&lt;/blockquote&gt;&lt;p&gt;好的系统架构必须满足所有相关者的&lt;b&gt;利益&lt;/b&gt;。&lt;br&gt;优雅的架构不见得能够落实下去，&lt;br&gt;必须所有参与者&lt;b&gt;同意&lt;/b&gt;这样落实才行。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;3. 开发者的外部影响&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;b&gt;3.1 像企业一样思考&lt;/b&gt;&lt;/p&gt;&lt;p&gt;作为一名开发者，我们所售卖的是把想法变成软件的&lt;b&gt;开发服务&lt;/b&gt;，&lt;br&gt;企业需要持续不断地&lt;b&gt;改进和完善&lt;/b&gt;自己的产品，&lt;br&gt;我们也应该这样做。&lt;/p&gt;&lt;p&gt;作为一名开发人员，除了要提供有形的价值之外，&lt;br&gt;还要传达，我们提供的开发服务，与成千上万名其他开发人员提供的服务有什么不同。&lt;br&gt;企业应该&lt;b&gt;运营&lt;/b&gt;自己的产品，我们也应该这样做。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5edd6989a91178e4d460f9aca7b71b5e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;358&quot; data-rawheight=&quot;160&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-5edd6989a91178e4d460f9aca7b71b5e&quot; data-watermark-src=&quot;v2-9609ba84d017b4bc8c6dbe917056336b&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;所以，我们应该关注当前提供了怎样的服务，&lt;br&gt;以及如何&lt;b&gt;营销&lt;/b&gt;这项服务，&lt;br&gt;想方设法提高服务的品质，并且让更多的人&lt;b&gt;知道&lt;/b&gt;它。&lt;/p&gt;&lt;p&gt;&lt;b&gt;3.2 强行推行自己的方案？&lt;/b&gt;&lt;/p&gt;&lt;p&gt;在采取行动说服别人接受我们的方案之前，应该先想一想，&lt;br&gt;我们是在&lt;b&gt;解决问题&lt;/b&gt;，还是在&lt;b&gt;推行方案&lt;/b&gt;？&lt;/p&gt;&lt;p&gt;售卖锤子的供应商，会更笃定客户遇到了锤子可以解决的问题。&lt;br&gt;其实未必。&lt;br&gt;能否放弃现有方案，往往暗示着是否&lt;b&gt;真的存在问题&lt;/b&gt;。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f982f205cac7c9c0d6116ce8ac332205_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;391&quot; data-rawheight=&quot;263&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-f982f205cac7c9c0d6116ce8ac332205&quot; data-watermark-src=&quot;v2-84f2ff7cf91aa6f7d16042e39570d301&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;blockquote&gt;要解决正确的问题，最困难的莫过于把目光从自己最倾心的方案转移到其他方案了。&lt;br&gt;—— 《&lt;a href=&quot;https://book.douban.com/subject/6990284/&quot;&gt;布道之道&lt;/a&gt;》&lt;/blockquote&gt;&lt;p&gt;此外，有些人是不关心问题能否被解决的，&lt;br&gt;那么这些人就不是问题的&lt;b&gt;主体&lt;/b&gt;，&lt;br&gt;在解决问题的时候，应该努力避开这些干扰因素。&lt;/p&gt;&lt;p&gt;因为他们的个人爱好，兴趣态度，会误导我们对方案作出不正确的判断。&lt;br&gt;毕竟，谁会为问题买单，谁才会关心问题的进展。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;结语&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;本文从系统的&lt;b&gt;信息和价值流动&lt;/b&gt;的角度进行分析，&lt;br&gt;强调了系统的设计者应该关注的一些外部因素。&lt;/p&gt;&lt;p&gt;比设计一个系统更难的是&lt;b&gt;发现真正的问题&lt;/b&gt;，并说服各参与者合力将它解决，&lt;br&gt;这会涉及不断的与人沟通，协商，谈判和推动。&lt;/p&gt;&lt;p&gt;系统本身即使再优雅，如果不能给使用者带来任何收益，&lt;br&gt;就没有&lt;b&gt;价值&lt;/b&gt;流向开发端，入不敷出，&lt;br&gt;这样的系统是不长久的，企业必须以盈利为目的才能存活下去。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;参考&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.melconway.com/Home/Conways_Law.html&quot;&gt;CONWAY&#39;S LAW&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.melconway.com/Home/Committees_Paper.html&quot;&gt;How Do Committees Invent?&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/11445551/&quot;&gt;谈判力&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/24530471/&quot;&gt;软件系统架构&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/6990284/&quot;&gt;布道之道&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://book.douban.com/subject/26835090/&quot;&gt;软技能：代码之外的生存指南&lt;/a&gt;&lt;/p&gt;</description>
<author>何幻</author>
<guid isPermaLink="false">2018-08-31-39177473</guid>
<pubDate>Fri, 31 Aug 2018 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
