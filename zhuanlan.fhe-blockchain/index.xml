<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>全同态加密与区块链</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/</link>
<description>区块链与密文计算让数据可以自由的分享 全同态加密具有神奇的功能，在不解密的情况下能够对密文进行任意计算。区块链能够在去中心化的环境下，保证数据的不可篡改、可追溯等。区块链+全同态加密=让我的数据属于我掌控。</description>
<language>zh-cn</language>
<lastBuildDate>Sat, 12 Jan 2019 16:02:08 +0800</lastBuildDate>
<item>
<title>区块链上交易传统资产的实例研究-part 6</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54611242.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54611242&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;除了技术限制外, 使用的 ethereum 框架等公共区块链也会对数据隐私产生负面影响。为了考虑到这些隐私问题, 我们提出了一个在链和脱链(on- and off- chain )储存模式 (Xu et al. 2016; Zyskind et al. 2015), 用于车辆专用和个人信息, 并建议以哈希为基础表示个人和公司身份证。此外, 市场参与者通过用户特定的接口访问数据库, 从而接收反映不同隐私级别的不同信息。结合允许的区块链权限设置, 限制了授权 id 要求的越权访问(the requirement of an authorized ID restricts unauthorized access), 并确保最低限度的数据保护。&lt;/p&gt;&lt;p&gt;由于其原型特性，比特币或其他加密货币以外的基于现实世界的区块链系统的缺乏, 以及已建立的 it 系统的多样性, 评估我们系统的实际大规模适用性仍然具有挑战性。然而, 为了提供一个总的方向, 我们提供了集中和分布式数据库的抽象和简短的区别, 并在以下段落中指出了区块链技术的优势。&lt;/p&gt;&lt;p&gt;在集中式数据库中, 数据存储在一个物理位置, 用户通过接口访问存储的数据。因此, 集中式数据库提供了轻松的数据管理和维护、高性能并保持可扩展性。另一方面, 集中化将安装和维护成本集中在数据库提供商身上, 增加了停机和数据丢失的风险, 并要求用户信任管理运营商(Elmasri&lt;/p&gt;&lt;p&gt;and Navathe 2015; Connolly and Begg 2015)。&lt;/p&gt;&lt;p&gt;在分布式数据库中, 存储和处理单元是单独保存的, 数据存储在多个位置并在相互联系, 用户通过网络访问数据库。若要更新节点和维护数据库, 数据在网上需要被重复复制。分布式数据库系统的核心优势是持续可用性和更高的可靠性、轻松的数据恢复以及模块化增长的灵活性。然而, 这些优势的代价是高度复杂、(不断)增加的处理开销以及数据完整性暴露在不一致之处 (Elmasri and Navathe 2015;Connolly and Begg 2015)。&lt;/p&gt;&lt;p&gt;基于区块链的系统结合了系统和数据库的特性，从而提供了一个具有弹性的分布式数据库, 通过所有节点的协商一致确保数据完整性, 从而为多方提供了一个可靠的数据库。特别是交易历史相互联系的各方和其他相关利益相关者的独立审查的开放性, 最大限度地降低了重复、错误和数据不一致的风险。在区块链基础设施上建立登记册系统利用了这些关键属性, 并满足了现代登记册的主要要求, 其中包括完整性、可用性、可访问性、高效读取和不可变性(Tran et al. 2017)。&lt;/p&gt;&lt;p&gt;为了提供一个超出登记册用例的方向, 我们还提出了三个先决条件, 可以说, 基于区块链的系统应该满足这些先决条件, 以可能构成对传统方法的改进。&lt;/p&gt;&lt;p&gt;首先, 由于其分布式性质和综合共识机制, 区块链技术提供了一种概念方法, 可以在公共和匿名设置中管理多方交易, 而无需中央(机构)的参与。因此, 这些系统具有缓和代理人之间冲突和利益能力。如果利益冲突为参与真相启示过程(the truth revelation process)提供了强烈的内在动机, 我们也可以抛弃加密货币中普遍存在的货币激励的观念。&lt;/p&gt;&lt;p&gt;其次, 我们建议利用区块链作为一种方法, 减少对不对称分布的信息的暴露, 并将其作为一个工具箱来感知和应用, 以促进提供、验证和传播交易历史。因此, 如果至少有一方与私人信息有关, 就无法从透明度的提高中获利, 那么, 基于区块链的系统的好处仍然有限。&lt;/p&gt;&lt;p&gt;第三, 作为分布式系统，区块链技术允许多方在不影响数据完整性的情况下对共享数据库进行书面访问。然而, 要使这些好处生效, 用例需要至少由两个具有对系统的书面访问权限的冲突方组成。如果只有一方有写入访问权, 就不需要达成共识, 因此, 有写入访问权的一方只是相当于中央机构。&lt;/p&gt;&lt;p&gt;如果我们将这些先决条件映射到 DMR用例中, 我们发现这三个条件都得到了满足: 第一, 买卖双方之间会出现利益冲突, 因为卖家不想透露他们的私人信息, 而买家则想了解关于市场上汽车的真正质量。此外, 多边市场环境和动态交易过程要求所有有关方，(要)向该系统提供数据。&lt;/p&gt;&lt;p&gt;&lt;b&gt;7结论&lt;/b&gt;&lt;/p&gt;&lt;p&gt;本研究中开发的概念验证原型旨在用替代办法取代官僚公共登记处, 并说明基于区块链的现实资产交易系统可能是什么样子。此外, 它还强调了区块链如何发挥透明度的作用, 以不完善的信息缓解市场的低效率。从技术角度来看, 我们提供了一个管理二手车所有权转让的平台, 并从本质上向交易方、政府机构和其他第三方提供可靠和完整的车辆历史记录。为了实现原型, 我们采用了面向对象的软件工程方法, 该方法便于理解, 并允许研究人员和从业人员超越交易汽车的用例, 将交易系统应用于其他资产,交易市场设置和注册系统。&lt;/p&gt;&lt;p&gt;除了其实际相关性外, 我们的研究对学术研究的贡献有三个方面: 第一, 我们引入了一种机制来降低基于区块链的交易不可逆转性所带来的交易风险。其次, 我们用一个无信任和自主的交易数据库系统取代了基于信任的、集中式和官僚式的登记册, 该系统提供了一个安全的注册和交易过程, 而不需要中央管理机构。第三, 我们提出了一个新的解决方案概念, 通过提供可靠、透明和完整的每个资产历史记录, 减少柠檬市场质量的不确定性和由导致的逆向选择效果。&lt;/p&gt;&lt;p&gt;为了降低复杂性并专注于手头的研究问题, 我们进一步放弃了第三方服务和官方流程的集成, 如汽车检查或重建许可。但是, 随着原型的成熟, 这些功能和其他功能可能会包含在未来的版本中。&lt;/p&gt;&lt;p&gt;除了上述优点外, 应用技术仍处于早期开发阶段, 并面临一些挑战, 如可有限的扩展性和隐私问题, 尚未完全掌握。此外, 用户需要信任操作算法 (lustig and nardi 2015) 的正确性和准确性, 受信任的第三方提供有关资产的信息仍然是一个重要的先决条件。但是, 这一规定仅限于在检查、修理、改装或事故后更新车辆特有的信息。交易过程完全在链上进行, 因此生成事务历史记录不需要任何第三方集成。在一定程度上, 这种信任问题可能会通过物联网的集成来解决--至少在汽车的情况下如此--传感器提供所需的数据(Gubbi et al. 2013)。&lt;/p&gt;&lt;p&gt;无论这些问题如何, 我们的原型都为将区块链技术应用于公共注册和交易系统领域提供了有效的第一步, 并说明了这种方法的机遇和挑战。&lt;/p&gt;&lt;p&gt;完结&lt;/p&gt;&lt;p&gt;大家对该文有任何问题，欢迎留言！&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54611242</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>区块链上交易传统资产的实例研究-part 5</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54611136.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54611136&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;5评估&lt;/b&gt;&lt;/p&gt;&lt;p&gt;在第4节中引入的概念验证原型。 实现了自动化和安全的注册和交易过程。该系统在以太坊上运行，并允许用户调用DMR合同在DMR市场上任何其他可以注册和授权的用户安全地注册（发布）和交易车辆。总的来说，我们为第2节中提出的所有三个研究问题提供了解决方案，同时DMR的用例突出了我们的IT工件（IT artifact）的质量，功能，完整性和有效性。此外，4.2节中引入了通用软件架构和市场框架，确保我们的工件的实用性和提供的价值超出特定用例。为了更详细地评估原型的效用和功效，我们还进行了广泛的结构(White Box)和功能(Black Box)测试(Hevner et al. 2004).&lt;/p&gt;&lt;p&gt;&lt;br&gt;在第一步中，我们使用Chai Assertion Library（http：// &lt;a href=&quot;http://link.zhihu.com/?target=http%3A//chaijs.com&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;chaijs.com&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt; /）以及之前介绍的Truffle（2017）框架在JavaScript中进行各种单元测试。 Chai是一个JavaScript库，可以创建单元测试，并允许在每个测试方法之前进行测试设置和拆卸。在结构测试中，我们创建了大约1500行代码并进行了46次单元测试，以验证市场，可交易和令牌的正确性。更具体地说，测试旨在评估每个公共方法在使用正确的输入序列调用时是否按预期运行（有关调用有效序列的示例，请参见图5），并确保系统在状态更改期间正常运行。&lt;br&gt;&lt;/p&gt;&lt;p&gt;在第二步中，在DMR的使用案例中发布，购买和销售汽车的场景用作功能测试环境并且说明工件的执行。这样，我们的目标是检测任何故障或在基本市场、DMR扩展和 web 应用程序中的潜在缺陷。&lt;/p&gt;&lt;p&gt;此外, 在测试场景中执行我们的原型, 可使完成交易的平均计算成本等于403,000 汽油(gas)。由于在我们的设置中，一个区块积累了大约 3, 140, 000  gas, 假设区块链只用于汽车的交易, , 我们的系统可以处理每个块多达8个交易。如果我们将平均延迟 (即块创建时间) 设置为 30秒, 我们的原型每天最多可以处理 22, 439 笔交易。总体而言, 该原型解决了与汽车二手交易相关的透明度和数据不一致问题, 并说明了基于区块链的交易系统方法如何通过引入escrow-like 的智能来帮助降低交易风险合同。此外, 它还允许第三方通过观察者模式进行整合, 并通过区块链的透明性质消除不利的选择效应和信息不对称。&lt;/p&gt;&lt;p&gt;&lt;b&gt;6讨论&lt;/b&gt;&lt;/p&gt;&lt;p&gt;第4节介绍的IT 工件引入了一种新的方法来管理现实世界中的资产登记册, 方法是将注册证书转换为由区块链管理和维护的独特的数字资产。我们的系统允许用户注册车辆, 并与任何其他授权用户安全地交易注册车辆。交易完成后, 交易的车辆将会自动在DMR取消注册，再重新注册。因此, 登记系统向潜在买家、政府机构和其他第三方提供了每辆车交易历史的完整和正确的记录, 而没有任何机构参与。&lt;/p&gt;&lt;p&gt;数据块的及时捕获了过去的交易的顺序, 并加密互连，为数据不可变性奠定了基础, 这对于确保数据完整性和历史记录的有效性至关重要。结合下放一致的权力, 交易数据正确性的责任从中央机构转移到受不对称分布信息影响最严重的利益攸关方者。通过这种方式, 我们的系统起到了透明的作用, 确保提供完整、有效和公开的车辆历史记录和过去所有权变化的记录, 从而披露以前的私人信息。更具体地说, 由于区块链交易是公开的, 汽车的潜在买家能够查阅每辆车的历史, 从而可以提高他们对潜在购买（的东西的）质量的评估。此外, 系统内的任何一个参与者都不需要得到信任, 因为条目是根据一致同意的协议储存的, 之后不能改变。&lt;/p&gt;&lt;p&gt;此设置的一个明显限制是受信任的第三方提供检查、维修或修改后提供特定车辆的信息。这种依赖重新引入了欺诈的可能性, 并为车辆特征提供者提供了与当前车主勾结提供错误信息的机会。因此, 交易过程之外的所有操作都不是完全安全的,任然存在有人插入有关车辆特征的损坏信息的残余风险。&lt;/p&gt;&lt;p&gt;虽然该系统无法防止这种类型的欺诈行为, 但提供无篡改的历史记录限制了欺诈者传播虚假车辆数据的能力。特别是, 如果系统中存在一定的诚实节点, 遍历交易历史使潜在买家和政府机构能够发现欺诈造成的不一致, 如里程操纵。这些不一致可能会成为向买方发出的信号, 表明车辆质量很低。此外, 对第三方信息的依赖仅限于车辆特征, 而汽车保有量记录仍未受到影响, 因此仍为质量评估提供了宝贵的数据。&lt;/p&gt;&lt;p&gt;处理欺诈问题的另一个方法出现在区块链技术和物联网的结合上 (Zhang and Wen 2017)。在我们的用例中, 物联网可以免除受信任的第三方的数据提供职责, 而是让智能汽车直接向注册系统报告其状态和变化。这样, 数据的提供就可以以自动化和加密安全的方式进行 (chredis  and  devetsikiotis 2016)。然而, 这种方法的一个先决条件是车辆确定其目前状况并向区块链报告其现状的技术能力。&lt;/p&gt;&lt;p&gt;从用户的角度来看, 买家、卖家和其他方通过 web 应用程序访问系统, 交易由智能合同指定的算法过程进行。这样, 使用不足和误解就会降到最低(Beck et al. 2016), 因为人类行为的方向是由部署的算法决定的。此外, web 应用程序还为每个利益相关者提供特定用户的视图, 并提供足够的信息可视化,来帮助利益相关者对数据的理解。&lt;/p&gt;&lt;p&gt;总之, 这些措施旨在通过消除相互作用的各方之间的信息不对称分布, 最大限度地减少买方对交易对象特点的不确定性, 减少逆向选择对市场效率的影响。&lt;/p&gt;&lt;p&gt;除了这些使用具体案例的考虑, 区块链技术, 特别是以太框架仍然是新兴的技术, 因此面临着一些技术挑战和限制。&lt;/p&gt;&lt;p&gt;当今区块链的一个主要问题是可伸缩性。根据块的大小和块创建间隔, 实际吞吐量 (以每秒执行的交易数) 是有限的, 并且交易的执行可能会在交易负载较高的情况下延迟 (Gervais et al. 2016)。在 dmr 的用例中, 重点放在每个时间间隔内数量有限的车辆的不频繁交易上, 因此可伸缩性问题不会对这一特定用例产生重大影响。但是, 对于其他用例, 因该考虑可伸缩性问题。如果我们将交易系统应用于更大的市场设置 (如德国汽车市场) 或不同的场景, 有限的可伸缩性、延迟问题和查询延迟会是一个采用加密交易的一个令人望而却步的受限系统。此外, 随着分布式分类帐积累交易(进行中的), 它会随着时间的推移而不断增长, 从而占用越来越多的磁盘空间。&lt;/p&gt;&lt;p&gt;然而, 这些制约因素很可能是暂时的, 随着区块链技术的成熟, 可以通过进一步改进目前的协议和新协议的发展来解决这些制约因素 (glaser 2017)。&lt;/p&gt;&lt;p&gt;待续&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54611136</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>区块链在国家安全领域的应用</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54610827.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54610827&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过创建比特币，以太坊和XRP等加密货币，区块链使一些人变的非常富有，但同时也有助于欺诈和洗钱。尽管该技术仍处于初级阶段，但它具有巨大的潜力。&lt;/p&gt;&lt;p&gt;但到目前为止，关于区块链在国家安全领域的潜在用途的文章很少，区块链技术可能非常有用。但是，如果处理不当，它也可能造成危险。为了使前者最大化并减少危险，美国需要在竞争者赶上之前，充分利用其早期技术的优势才是明智的。&lt;/p&gt;&lt;p&gt;首先简要介绍基本技术：区块链是分布式账簿，分布在计算机或节点网络中，实时记录交易。在通过网络达成共识验证交易后，它会向“链”添加新的和独特的“块”。简单来说，如果Bob支付Jen，网络中的每台计算机都将收到交易的详细记录，并加密敏感信息，然后验证Bob是否有足够的资金并且尚未将其用于其他地方。在确认之后，该交易被永久地添加到其他已验证交易的块中并附加到链的末端，使其不可改变，易于追踪，并且极难伪造。&lt;/p&gt;&lt;p&gt;区块链有时被描述为“无信任”系统。它消除了对银行或其他中间人的需求，因为每个节点都会验证并重新执行每个交易，记录一个公共并不可变的历史记录。它可以降低用户的成本，并在某些情况下提高速度和效率。尽管许多区块链（例如比特币和以太坊）目前只能处理主要信用卡公司每秒交易次数的一小部分，但业界正在努力加快这一过程。&lt;/p&gt;&lt;p&gt;区块链可以彻底改变金融服务，医疗保健，数据存储和企业供应链管理等行业。它们对国家安全也有重要的应用。&lt;/p&gt;&lt;p&gt;例如，区块链可以改变国防合同的供应链管理。国防部对新防御系统的主要担忧之一是这些组件是在世界各地制造的，因此与外国政府勾结的供应商可能会安装不可检测的后门进行间谍活动。在当今不透明的全球供应链中，有缺陷的微芯片或躲避间谍软件是真正的风险。区块链的准确和详细的分类账本机制，可以通过跟踪每个分包商提供的内容并确保每个组件都是可追踪的来减少这些风险。例如，如果把为飞机生产机载计算机微芯片放在中国，国防部审计员可以看到是谁制造的，什么时候安装的以及如何修改。每个操作都将添加到区块链中，提供详细的，不可更改的合同历史记录。&lt;/p&gt;&lt;p&gt;区块链还可以安全地管理承包商和政府雇员的身份。申请安全许可的任何人都知道这个过程是多么麻烦。利用区块链，在安全筛选期间收集的个人信息可以被验证、分类和加密，插入到区块链中，然后可以从所有单独的服务器中删除原始数据。通过将权限附加到其加密&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54610827/edit#1eabc3455492&quot; class=&quot;internal&quot;&gt;数字ID的&lt;/a&gt;特定元素，个人可以更好地控制谁可以访问其个人信息的哪些方面。例如，个人可能允许潜在雇主访问特定的社会保障信息，同时仅向另一个人提供驾驶执照号码。由于全面的个人数据将不再存储在一个中央服务器中，2015年进入美国人事管理办公室的黑客攻击可能会成为过去，而区块链可以最大限度地降低身份盗用和操纵的风险。&lt;/p&gt;&lt;p&gt;政府还可以使用区块链来保护机构间通信并改善数据记录保存。区块链不是将关键信息存储在单个机构的档案中，而是提供许多机构可以访问的&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.coindesk.com/four-genuine-blockchain-use-cases/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;分散数据库&lt;/a&gt;。例如，在一个多机构执法机构中，FBI调查员可以在联合区块链中添加新证据，该区块链带有时间戳，数字签名，并在所有被许可的实体之间即时共享。像泄密者切尔西曼宁这样的人可能很容易被禁止访问国务院的每一个电报，因为她显然没有“需要知道”。区块链消除了每次一个机构需要访问数据时并使访问对象获得许可的需要。&lt;/p&gt;&lt;p&gt;在网络安全中，区块链的分布式和不可变性将允许人们快速识别黑客和做出及时反应。因为链中的每个块都使用其自己的唯一标识符（或“hash”）以及前一个块的唯一标识符进行加密，所以在不更改链中的每个后续块的情况下，不可能操纵任何一个块。要做到这一点，需要大量的计算能力，并且对系统中的每个节点都会立即显现出来。因此，检测攻击并快速识别数据的操作方式要容易得多。&lt;/p&gt;&lt;p&gt;当然，在国家安全领域使用区块链存在一些障碍和潜在的不利因素&lt;i&gt;。&lt;/i&gt;与其他突破性技术相比，区块链仍然是一个在国际上没人管理的沃土。区块链的学术研究人员主要来自美国并且占据主导地位。区块链是跨国界的，世界各地有数百万人参与其中。欺诈性的ICO和其他快速致富计划已经造成混乱，甚至可能阻碍进一步的创新。&lt;/p&gt;&lt;p&gt;虽然区块链是加密的，但它在遇到现实世界时很容易受到攻击，并且可能发生人为错误。区块链账簿就像被数字密钥保护的&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.sciencedirect.com/science/article/pii/S1353485818300060&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;硬件安全模块&lt;/a&gt;一样安全。加密货币交易所的黑客攻击已经变得普遍，并且高达三分之一的比特币被认为丢失了。单个节点上的黑客攻击不会危及广泛分布的系统，但如果网络集中在少数大型采矿作业中，则可能会发生另一个Etalum抢劫案。为了加强网络安全并大规模部署 - 如政府机构的情况 - 行业领导者应协调和开发一个更全面的区块链安全架构。更令人困惑的是，最大的区块链可能非常缓慢且不安全，因此公司正在创建越来越多的私有区块链。这导致了孤立网络和不兼容技术的激增。&lt;/p&gt;&lt;p&gt;美国政府不需要等待解决这些不确定因素，才能使区块链成为国家安全的有用工具。虽然如果政府急于规范区块链的质量标准，就会扼杀创新，但是明智的做法是通过投资并鼓励国防承包商建立最稳定，最安全，最快速的平台来帮助最好的技术获胜。政府还可以阻止承包商建立使用大量能源并对环境产生负面影响的低效且不太安全的“工作证明”区块链。&lt;/p&gt;&lt;p&gt;政府还应通过小额投资和补助来促进积极竞争，并强调区块链的公共使用方面。&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.nasdaq.com/article/darpa-and-advancing-cybersecurity-infrastructure-with-blockchain-cm783507&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;DARPA&lt;/a&gt;已经开始与初创企业签约，研究区块链技术在安全武器、数据存储和加密通信方面的适用性。五角大楼的技术孵化器DIUx和CIA成立的In-Q-Tel也应该效仿。有希望的项目也在州一级开始。例如，&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.prnewswire.com/news-releases/governor-markell-launches-delaware-blockchain-initiative-300260672.html&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;特拉华州&lt;/a&gt;与初创公司签订合同，为合同开发区块链并安全存储档案记录。&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.technologyreview.com/s/603084/the-pentagons-innovation-experiment/&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;这些伙伴关系&lt;/a&gt;有助于分配研发成本，加强联邦机构与硅谷最优秀和最聪明的人之间的联系。它们还有助于建立公众对区块链的信任。&lt;/p&gt;&lt;p&gt;此外，政府可以引导行业采用质量标准和最佳做法。联邦“ &lt;a href=&quot;http://link.zhihu.com/?target=https%3A//www.law111.com/the-federal-government-needs-to-take-action-to-prevent-the-us-from-falling-further-behind-in-blockchain-innovation-&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;监管沙箱&lt;/a&gt; ”将允许公司在受控环境中测试其技术，同时政府监管机构确定适当的监管框架。加拿大于2017年推出了&lt;a href=&quot;http://link.zhihu.com/?target=https%3A//nssc.novascotia.ca/sites/default/files/docs/Feb.%252023%2C%25202017%2520CSA%2520RegSandbox-press%2520release-Final.pdf&quot; class=&quot; wrap external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;这样一个沙箱&lt;/a&gt;，为区块链公司提供限时注册，同时确保消费者隐私和其他保护。&lt;/p&gt;&lt;p&gt;如果美国拖延太久，那些在区块链研究和开发方面投入巨资的竞争对手可能会选择行业并制定自己的标准。列支敦士登和马耳他是建立区块链法律框架的先行者。7月，&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54610827/edit#2d9f1ad449ed&quot; class=&quot;internal&quot;&gt;马耳他&lt;/a&gt;通过了三项法律，建立了内部治理要求和认证程序，以更好地保护消费者和企业。虽然没有人关注马耳他和列支敦士登，但如果中国，俄罗斯或其他与美国对立的政府确定了这项关键新技术的标准，那将毫无帮助。这就是为什么美国企业和立法者必须迅速努力以保持区块链技术的主导地位。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54610827</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>电子货币30年：从电子现金到区块链-part3</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54610401.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54610401&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;一．&lt;/b&gt; &lt;b&gt;Nakamoto,2008&lt;/b&gt; &lt;/p&gt;&lt;p&gt;1. 中本聪实现机制所完成的核心工作是用分布式账本代替可信服务器(replace the server with a distributed ledger)。&lt;/p&gt;&lt;p&gt;2. 账本很难建立，事实证明我们需要共识技术来建立账本，中本聪发明了新的共识技术，这个共识技术始终能自始至终都能很好的执行(use a new consensus technique to construct the ledger)。&lt;/p&gt;&lt;p&gt;3. 在共识协议执行时能够生成新的货币，相当于央行发行货币。系统引入了困难问题(use puzzles to handle consensus &amp;amp; generate funds)。&lt;/p&gt;&lt;p&gt;4. 比特币中最重要的的一个发明：比特币消除了将密钥和身份绑定在一起的必要性，直接将公钥作为用户身份。(Eliminate the need for explicit key/identity bindings)。&lt;/p&gt;&lt;p&gt;5. 其他技术的应用方式就变得非常直接了，几乎可以把密码技术直接般过来了(everythings else is straightforward crypto and excellent engineering)。&lt;/p&gt;&lt;p&gt;&lt;b&gt;二．&lt;/b&gt; &lt;b&gt;从比特币学到的知识&lt;/b&gt;&lt;/p&gt;&lt;p&gt;1.选择正确的共识算法会导致系统发生巨大的变化&lt;/p&gt;&lt;p&gt; 区块链共识技术满足特定的健壮特性，少部分参与方的离开并不会影响系统的稳定性，这是传统的协议无法实现的 。   &lt;/p&gt;&lt;p&gt; 节点以点对点网络的形式组织，节点会周期性地离开网络。你就需要一个不包含启动过程的共识机制，此机制需要处理这种不稳定的情况。即使到了今天，在部署权益证明协议的时候也需要解决这个问题。很多协议都属于权益证明协议，并且在协议中应用了类似可验证秘密分享这类技术，但这些协议要求一部分节点同时保持大约10分钟的通信状态，节点没办法同时保持10分钟通信。因此，除非你能确保部分节点可以满足这一要求，否则在这一特定 场景下，你无法实现可用的共识协议。&lt;/p&gt;&lt;p&gt;2. 我们需要消除密钥，身份管理机制，使得问题会变得简单很多。&lt;/p&gt;&lt;p&gt;3. 人类是个奇怪的生物。这似乎是个显然，很平凡的结论。追忆起来这个结论似乎非常显然，但实际上这个结论并不显然，如果你没有实际部署一个密码货币的话，这个结论并不那么显然。&lt;/p&gt;&lt;p&gt; 从2010-2015年得出的结论是：如果你建立了拥有代币的系统，此系统是安全的，并且可以持续的提供给代币，则人们会有很大的信心，相信系统不会停止运转，相信系统不会失效。更奇怪的是人们为了代币赋予相应的价值。这真的超乎我们的想象，我们根本没有想到会发生这样的事情。但这样的事情确实发生了，而且造成了巨大的影响。造成的影响比人们对技术，对密码货币所估计的影响要大的多，现今人们对代币的估值太随意了。代币的估值可能比真实值大了10倍，甚至可能大了100倍。但这里最重要的是：人们相信他的价值。如果你不自己建立密码货币的话，你估计也不会相信这一点&lt;/p&gt;&lt;p&gt;&lt;b&gt;三．&lt;/b&gt; &lt;b&gt;比特币的缺点(Limitations of Bitcoin)&lt;/b&gt;&lt;/p&gt;&lt;p&gt;比特币的隐私，可扩展性上有很多局限性，好消息是我们可以发行150种货币，来解决可扩展性的问题。真正严峻的问题是，有太多的人在用太多不同的方法尝试解决这种问题。&lt;/p&gt;&lt;p&gt;&lt;b&gt;1&lt;/b&gt;. 比特币的匿名体系有缺陷，匿名会与用户身份产生关联，最终导致失去匿名化。&lt;/p&gt;&lt;p&gt;&lt;b&gt;2&lt;/b&gt;. 2012，2013年NSA在海外部署VPN系统，他们允许用户的比特币节点与此系统建立连接，所以他们不仅可以在区块链上，还可以从VPN系统上看到一大堆交易流量，通过流量数据，他们把假名和用户的IP地址联系起来，实际上于用户的MAC地址关联起来，这样一来对于区块链，比特币中的大多数节点，他们都能实现去匿名化。一旦流量传到这个系统，也无法实现匿名化。&lt;/p&gt;&lt;p&gt;&lt;b&gt;四．关于发表的两篇论文&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt; &lt;/p&gt;&lt;p&gt;一篇叫“零币”在零知识证明上应用RSA聚合算法实现货币匿名化处理。&lt;/p&gt;&lt;p&gt;另一篇叫“零现金”实际部署的系统叫Zcash 。&lt;/p&gt;&lt;p&gt;当开发“零现金”的第一个版本时，写了一个函数库放在github上，同时加上了警告：看在上帝的份上，不要把这个函数库用在产品化的数字货币系统中，不要把资金放在依赖这个糟糕的函数库发布的代币上，毕竟这个函数库只花费了暑假中的一个月时间，时间太短。&lt;/p&gt;&lt;p&gt;之所以展示这份警告函，因为从“零币”的git代码库中能找到这份警告，现在零币在市场的价格约为50亿美元，零币的开发者们原封不动抄袭了代码，他们把警告都直接复制到代码中了。他们直接用这个函数库完成了零币的开发，直接部署在公网上，这种部署方式太吓人了，事实上该代码存在漏洞。在其中一个地方，本应该验证输入的参数是否为代数域中的一个元素，实际上并没有提供该操作。这意味着，用户可以通过A,A+P,A+2P来完成货币的双重花费。&lt;/p&gt;&lt;p&gt;一旦我们有了一个账本，我们就可以做很多有意思的事情。如果你深入理解支付系统的话，你就会发现支付系统就是一个状态转移过程，在这个系统中包含了已经完成的交易单。我们还会在系统中添加尚未完成支付的，尚未确认的交易单。&lt;/p&gt;&lt;p&gt;很显然，下一步的想法就是把此状态转移过程通用化，让转移函数为任意函数，可以通过任意函数实现账本的状态转移，出于这种考虑，以太坊诞生了。所有密码货币的发展方向都应该是这个方向的，把简单的状态转移函数推广成更复杂的函数，这个想法很不错，我们现在有以太坊，我们有了非常复杂的方法来花钱。&lt;/p&gt;&lt;p&gt;下一部分，待续……。&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt; &lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54610401</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>电子货币30年：从电子现金到区块链-part4</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54485297.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54485297&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一．&lt;b&gt;推动电子货币的发展，我们需要解决几个关键的问题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;1.&lt;/b&gt; 如何扩大交易规模。&lt;/p&gt;&lt;p&gt;比特币和区块链的交易频率大约为每秒7笔交易(理论)，可能更低。相比于VISA, 可以支持来自全球的大约40,000笔交易。我们需要用一些方法提高交易频率，将货币吞吐量提高到合理的量级。&lt;/p&gt;&lt;p&gt;&lt;b&gt;引入通道的概念：闪电网络&lt;/b&gt;&lt;/p&gt;&lt;p&gt;有两个交易方，想要进行多次交易，但不想占用比特币太多带宽，所以他们建立了一个三方契约。基本实现就是每个人都在区块链上抵押一部分资金，所有交易汇款，双方对交易完成签名时，这笔交易就会被解锁，或一个交易方中止交易后的一段时间，就会自动解锁。三方契约在其中起到的是中介作用，让交易双方可以快速交易，而区块链在确保最终交易的结果。闪电网络已经上线，并在相应的节点建测试。&lt;/p&gt;&lt;p&gt;这种网络存在如下问题。不能保护交易双方的隐私，但可以理解，它不是隐私保护技术，它是为了双方的即时交易，而不受限于区块链的容量。如果想要实现隐私保护，不想知道通道终点的个体是谁，就需要在通道中设置更多的的中间人，如果几个个体不合谋，则彼此交易双方无法得知另一方的信息。&lt;/p&gt;&lt;p&gt;但是这种系统不太可能运转起来。首先为了实现隐私保护，我们不得不设置多条交易，但不会有人希望在系统中设置多条交易，我们甚至不知道两个参与方之间是都存在一条可以联通的一些通道，我们也不知道位于多条通道之间的参与方是否在区块链上抵押了足够的代币。&lt;/p&gt;&lt;p&gt;即使上述假设都成立，在lighting 中还存在一个非常重要的问题，为了让支付通道可以自动关闭，参与方之间需要分享一种叫哈希锁（hashlock）的东西。这意味着通道中的每个独立的参与方都要分享一个哈希值H，这个哈希值会将支付通道的各个节点绑定到一起，这意味着如果I1和I3合谋，即使I2是诚实的支付通，这个支付通道中的参与方也将面临去匿名化的风险，这种解决方案安全性十分弱。&lt;/p&gt;&lt;p&gt;那如何解决这个问题，如何解决支付通道中的隐私问题，&lt;b&gt;支付通道技术似乎是密码货币的未来&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;我们用支付通道技术购买咖啡，支付租金，我们希望自己的隐私被保护。&lt;/p&gt;&lt;p&gt;David Chaum提出的e-Cash(电子货币技术)已经有 30年了，让我们把它部署在支付通道中。在简单的单通道场景，我们把一个参与方看成是银行，我们可以在两个参与方之间(A and B)建立余额记账系统，这样一来，只要A要花费一笔钱，A就从B那里撤销一部分代币，然后通过匿名的方式将代币发送给B,假设B开启了很多个支付通道，他就无法知道这笔代币是谁发送的，这看起来是个简单的解决方案。&lt;/p&gt;&lt;p&gt;在多跳场景下如何解决隐私问题？&lt;/p&gt;&lt;p&gt;如果我不能和支付方直接建立连接，该怎么办？&lt;/p&gt;&lt;p&gt;A无法与C直接交易，A可以与银行交易，C不可以和银行交易。&lt;/p&gt;&lt;p&gt;事实证明只要修改系统架构，就能让Chaum的电子货币，在两跳点上运行。我们选择让B作为中间人(当然这个B的可能性有很多，所以才能保证两跳场景下的成功交易)B充当银行的角色,&lt;/p&gt;&lt;p&gt;A与C建立连接，提取现金，与C交换代币。&lt;/p&gt;&lt;p&gt;B可以做相同的操作，与C建立联系，提取现金，与C交换代笔。如果我们能建立一个同时能支持转入和转出的代币支付系统。我们可以完成3跳吗？&lt;/p&gt;&lt;p&gt;我们认为不可以运转，还没找到一种支持超过两跳节点支付的隐私保护解决方案，&lt;b&gt;当通道的跳转次数变得更多后，Chaum的电子货币系统似乎就无法支撑了&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;因为在多跳场景下，需要通过一种方法将不相干的通道绑定在一起，但我们还没有找到一种可以实现隐私保护的绑定方式，这是一个公开的问题，如果我们想要实现一个网络，允许多个用户在网络中建立多条支付通道，我们需要一种既能建立长支付通道，又能实现隐私保护的方法，但我们目前还没有找到这种方法。&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.&lt;/b&gt; 找到可以代替工作量证明的共识机制。&lt;/p&gt;&lt;p&gt; 对这个问题我们很感兴趣，很多学者在这方面进行了很深的研究。比特币耗费大量的能源，其一年耗电量和瑞典的耗电量相同，显然的解决方式是将工作量证明替换成其他的密码学证明技术，我们可以用签名密钥对区块进行签名，并于其它参与方建立共识。&lt;/p&gt;&lt;p&gt;如何通过签名密钥选举出记账节点呢，目前摆在台面上的方法是权益证明技术，这个技术的基本思想是拥有越多的节点越可信，越可以生成正确的签名区块。如何实现这一点，所有权益证明技术的思路都类似，要通过协议查出网络中的主要权益持有方，建立一个权益持有方列表，公开纰漏权益持有放的身份，然后根据各个权益持有方所拥有的权益设置采样权重。&lt;/p&gt;&lt;p&gt;接下来从列表中采样，在采样时我们如何得到随机状态呢？从NIST的&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//random.org&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;random.org&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;网站获得随机量吗。我们如何从比特币和网络上获得随机数，这是个公开的问题，目前我们还是有一些解决方案的，有一组学者在EUROCRYOT(欧密会)上发表了一个非常优异的工作成果[DGKR18],[KRDO17],Ouroboros,其中一些测略被部署到实际的代币系统中，那个代币系统叫Cardano。&lt;/p&gt;&lt;p&gt;&lt;b&gt;所有这些系统都面临一个问题，他们都需要依靠一个随机变量来完成采样&lt;/b&gt;。在原始的Ouroboros协议中，这个协议需要在成百上千的节点中执行一个交互式协议，从而建立一个随机种子，此种子将被用于后期的采样过程中，要达到的核心目的是，即使一定数量的节点离开系统，此协议也可以正确执行。但如果太多的节点离开网络，该怎么办，我们不知道是否可以正确的执行。&lt;/p&gt;&lt;p&gt;新的协议应用一个稍显不同的方法来解决此问题，新协议使用基于计算Deffie-Hellman问题的抗碰撞哈希函数。基本思想是，网络中的一些个体要为函数提供输入，我们要计算输入的哈希值，从而生成随机锚点，但不管怎么设计协议，总有一个参与方要执行协议的最后一步。这个参与方，他可以利用他的哈希算力计算不同输入的采样结果，从而偏斜输出随机状态的分配。设计者设计哈希函数，这个哈希函数会组织参与者参与方实施碰撞攻击，使他们难以偏离随机量的概率分布。&lt;/p&gt;&lt;p&gt;哈希函数的设计依赖于相对较强的假设，评估参与方偏离随机量的分布的程度，可以对方案进行严谨的证明，我认为这是最有意思的地方，但为了考察协议是否真的可以运转，我们需要在实际中部署协议。&lt;b&gt;总的来说，密码货币最感到激动的是，它允许我们在上面部署新的密码方案。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;3.&lt;/b&gt; Ledger-conditioned computation, 分类帐本条件计算，&lt;/p&gt;&lt;p&gt;我们反过来看待这些问题。我们一直讨论密码学如何帮助密码货币，但可能密码货币或者区块链可以反过来帮助我们建立密码系统，领域中的很多人都在研究这样一个问题。&lt;/p&gt;&lt;p&gt;假象我们有一些可信的硬件，可以认为这些硬件是可信的，安全的。密码学安全计算技术这一领域，正在快速发展，从理论角度，密码安全技术的实施依赖于硬件平台，或者纯软件平台，程序混淆技术允许我们构建可信计算设备或可信计算电路完成特定的计算任务(技术支持)。&lt;/p&gt;&lt;p&gt;假设我们拥有一些安全硬件，但假设这些可信计算设备无法记录当前状态，这是一个很现实的假设。对于程序混淆等通过软件平台实现的技术更加现实，软件本身没有记录当前状态的能力，我们可以不费吹灰之力构建硬件可信计算平台，&lt;/p&gt;&lt;p&gt;我们想用这些设备完成多步骤交互式计算任务，这意味着我想根据某些输入执行程序得到输出，再把输出作为输入的执行程序。&lt;/p&gt;&lt;p&gt;另一个面临此问题的场景是，假设我们有一个网络，每个节点都是可信的计算设备，我们要运行一个单轮多步骤的，但程序的每个计算步骤都要在不同设备上完成。每一个智能合约系统都会面临上述场景，很多无服务系统，亚马逊的ASW　Lambda 等也面临上述场景，在此类场景下，显然我们需要记录一个同步状态，如何记录同步状态？&lt;/p&gt;&lt;p&gt;解决方案是：假设每个安全计算设备都有一个密钥。用户A将密钥发送给计算设备，我们可以得到输出结果和一个加密后的计算状态，用于后续的计算过程。我要根据下一个输入执行下一个计算步骤，我把加密状态输入一个可信设备中，得到输出和一个新的加密状态。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;但我们可能会碰到一个问题trivial Replay Attacks，简单的重放攻击。因为设备无法在内部储存状态，我们把第三个输出和第一个加密状态发送给设备，这样我们可以让设备计算出一个新的输出结果，我们重复多次实施这种攻击，并且计算设备上执行的是交互式密码协议，这种攻击方式会破坏协议的安全性。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-51c97eb8621e3e6fdd23d6548f0588d8_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;192&quot; data-rawheight=&quot;188&quot; class=&quot;content_image&quot; width=&quot;192&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-51c97eb8621e3e6fdd23d6548f0588d8_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;192&quot; data-rawheight=&quot;188&quot; class=&quot;content_image lazy&quot; width=&quot;192&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-51c97eb8621e3e6fdd23d6548f0588d8_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;……&lt;/p&gt;&lt;p&gt;假设我们有一个区块链，我们有一个公开可验证账本，公开验证的意思是我们可以把字符串放置在账本上，账本可以返回一个签名。或者可验证证明，告诉我们字符串已经放置在账本上，你也可以把整个账本拷贝下来，把完整的账本送给设备。利用这种方法，可以很容易的实现状态记录功能。我们可以把我们的输入发送给账本，我们可以得到储存的内容和相关的证明，设备可以验证账本，查看当前的状态，设备可以返回一个输出结果和一个加密状态，进一步完成相关的细节设计，我们就可以建立一个可信的计算机系统了，只要我们可以于某个账本进行交互，我们就可以抵御重放攻击。抵御重放攻击对智能合约来说非常重要，尤其对于隐私智能合约，对于可信安全计算设备来说，这更为重要。&lt;/p&gt;&lt;p&gt;应用密码程序混淆技术，我们还能实现哪些功能，对此表示好奇。&lt;/p&gt;&lt;p&gt;&lt;b&gt;二．下面我们讨论不同密码学中涉及到的一些糟糕的密码学方案&lt;/b&gt;&lt;/p&gt;&lt;p&gt;1. BitGrain 损失1.7亿美元因为他们把系统中的余额检查功能放在了客户端的javascript代码中。&lt;/p&gt;&lt;p&gt;2. NIST的一个网站&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//random.org&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;random.org&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt; （生成公开可验证的随机量）,用https替换http,这就导致之前用用户为了获得随机量而调用&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//random.org&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;random.org&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;&lt;/span&gt;&lt;/a&gt;的网站，那么他们现在得到是404，这让他们损失一笔钱。&lt;/p&gt;&lt;p&gt; 某人实现了ECDSA,他们想让ECDSA中的临时随机变得更安全，他们把消息和私钥的XOR结果作为临时随机量，这使得临时随机量的分布变得偏离。可以通过256个签名结果恢复私钥，很多用户都恢复了私钥，这种攻击方式被实际验证可行&lt;/p&gt;&lt;h2&gt;&lt;b&gt;     IOTA利用人工智能发明了自己的哈希函数。 IOTA用基于哈希函数的数字签名，不知道他这样做的原因。IOTA使用的签名是 Winternitz signature&lt;/b&gt; &lt;b&gt;温特尼茨签名。&lt;/b&gt;&lt;/h2&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1a3ffc99fb61da72e3bd08bf09c09ea4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;353&quot; data-rawheight=&quot;156&quot; class=&quot;content_image&quot; width=&quot;353&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1a3ffc99fb61da72e3bd08bf09c09ea4_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;353&quot; data-rawheight=&quot;156&quot; class=&quot;content_image lazy&quot; width=&quot;353&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-1a3ffc99fb61da72e3bd08bf09c09ea4_b.jpg&quot;&gt;&lt;/figure&gt;&lt;h2&gt;&lt;b&gt;私钥通过哈希迭代计算哈希值，最终的到公钥&lt;/b&gt;&lt;/h2&gt;&lt;h2&gt;&lt;b&gt;假设我们要对一串字节进行签名，我们要从私钥开始（123434），计算特定次数的哈希值，为了对3进行签名，我需要计算3次哈希值，得到对应的私钥，然后将哈希结果作为签名的一部分，接下来我会对下一个字节进行签名。&lt;/b&gt;&lt;/h2&gt;&lt;h2&gt;&lt;b&gt;问题是:&lt;/b&gt;&lt;/h2&gt;&lt;h2&gt;&lt;b&gt;我们计算出3的哈希值，任何人都可以计算一次哈希值，从而得到字节4对应的签名结果，这样你把消息从3换成4，且对应的签名任然可以得到验证，因此很容易对次签名进行伪造。&lt;/b&gt;&lt;/h2&gt;&lt;h2&gt;&lt;b&gt;解决方法:&lt;/b&gt;&lt;br&gt; &lt;b&gt;实现一个单独的验证码，在签名之前，我们需要把验证嘛放在消息的末尾处，验证码的特性是你不能在保持验证码不变的条件下，把签名中的任何字节增1。验证码的引入对签名算法的安全起到了决定性的作用，IOTA是对消息求和，IOTA发明了自己的验证码，这使得任何人可以把签名消息中的字节增1，同时使新消息对应的签名通过验证。，因此假如我有一个消息M,你就可以创造另一个消息M_1,其各个字节都比M大1，你可以多计算一次哈希结果，从而伪造住M_1对应的签名。&lt;/b&gt;&lt;/h2&gt;&lt;h2&gt;&lt;b&gt;即使如此，我们也很难找到满足上述条件有意义的两个消息。因为如果两个消息很长，带签名的消息还是另外一个哈希函数的输出结果，IOTA只验证完其中的1/3签名，也就是验证27字节，他们称IOTA应用了调优技术，因此验证过程会尝试27次，即验证27字节消息的签名，因此这不是一个安全的签名方案。&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;3.Zcash没有对元素所在数域进行验证的漏洞&lt;/p&gt;&lt;p&gt; 最尴尬的攻击实例，让某人的账户凭空传创建了370，000个代币，通过买卖得到上百万美元的收入。&lt;/p&gt;&lt;p&gt;密码货币是个有趣而火爆的话题，但我们要严肃的对待密码货币，因为密码货币值很多钱，一旦出问题，很多人会受到伤害，但密码货币为我们创造了独一无二的机会，可以让我们研究很多有趣的新密码方案，这里面包含了很多有意思的问题，我们之前没有机会去解决这些问题，我们应该利用好这些独一无二的机会去解决这些问题，在领域内部创新密码技术。&lt;/p&gt;&lt;p&gt; ===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54485297</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>全同态加密算法深入解析</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54484449.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54484449&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;全同态加密算法深入解析&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4e2ced8ec3f46810cdfa09b75122ab9a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;217&quot; data-rawheight=&quot;169&quot; class=&quot;content_image&quot; width=&quot;217&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-4e2ced8ec3f46810cdfa09b75122ab9a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;217&quot; data-rawheight=&quot;169&quot; class=&quot;content_image lazy&quot; width=&quot;217&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-4e2ced8ec3f46810cdfa09b75122ab9a_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;介绍&lt;/b&gt;&lt;/p&gt;&lt;p&gt;同态加密方案提供了一种惊人的能力——能够在不解密的情况下，对密文数据进行计算。这使您无需破坏敏感源数据，同时可以对数据进行处理。&lt;/p&gt;&lt;p&gt;其中最有影响的一个方案(也是最近一些标准化工作的主题)被称为Fan-Vercauteren (FV)方案(或称为Brakerski-Fan-Vercauteren方案)，我们将在这里深入地进行说明，同时你也可以尝试使用以下实现该方案的算法库：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-d4416bc644f8e5308d2d04a8efa7e6ca_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1058&quot; data-rawheight=&quot;738&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;1058&quot; data-original=&quot;https://pic3.zhimg.com/v2-d4416bc644f8e5308d2d04a8efa7e6ca_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-d4416bc644f8e5308d2d04a8efa7e6ca_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1058&quot; data-rawheight=&quot;738&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;1058&quot; data-original=&quot;https://pic3.zhimg.com/v2-d4416bc644f8e5308d2d04a8efa7e6ca_r.jpg&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-d4416bc644f8e5308d2d04a8efa7e6ca_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;这些加密方案看起来很复杂，也有一点神秘，但希望本文能让您清楚地了解它们的工作原理和驱动因素。&lt;/p&gt;&lt;p&gt;这篇文章的整体结构包括&lt;/p&gt;&lt;p&gt;·一点点数学介绍&lt;/p&gt;&lt;p&gt;·加密和解密是如何工作的&lt;/p&gt;&lt;p&gt;·同态加法和乘法&lt;/p&gt;&lt;p&gt;&lt;b&gt;一些数学介绍&lt;/b&gt;&lt;/p&gt;&lt;p&gt;这些同态加密方案是基于Ring Learning with Errors问题。本质上，这些方案中的数据在加密时(密文)和未加密时(明文)都以多项式表示。&lt;/p&gt;&lt;p&gt;这些几乎是学校里每个人都学过的多项式。像&lt;/p&gt;&lt;p&gt;4&lt;i&gt;x&lt;/i&gt;2 + 2&lt;i&gt;x&lt;/i&gt; + 1&lt;/p&gt;&lt;p&gt;但有一些区别，第一个是系数都是整数，并且需要mod &lt;i&gt;t&lt;/i&gt;。假设&lt;i&gt;t&lt;/i&gt; = 24，这就像一个24小时的时钟，21加6得到3。多项式的所有系数都是这样处理的。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-40be0e2131b5e6b365d307df092c1c75_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;240&quot; data-rawheight=&quot;227&quot; class=&quot;content_image&quot; width=&quot;240&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-40be0e2131b5e6b365d307df092c1c75_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;240&quot; data-rawheight=&quot;227&quot; class=&quot;content_image lazy&quot; width=&quot;240&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-40be0e2131b5e6b365d307df092c1c75_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;或者，我们可以将数字考虑在-11到12之间，这样我们就可以方便地求负数。注意，这只是一个方便系数——余数为-1和余数为23(除以24时)之间没有区别。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-33d0f7d4ea7742bedf01dc73cece341c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;237&quot; data-rawheight=&quot;232&quot; class=&quot;content_image&quot; width=&quot;237&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-33d0f7d4ea7742bedf01dc73cece341c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;237&quot; data-rawheight=&quot;232&quot; class=&quot;content_image lazy&quot; width=&quot;237&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-33d0f7d4ea7742bedf01dc73cece341c_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;第二点，也是比较棘手的一点，在于这种使用余数的思想不仅适用于多项式的系数，也适用于多项式本身。&lt;/p&gt;&lt;p&gt;我们定义了一个特殊的多项式，称为多项式模，并且只考虑多项式乘以该多项式模后的余数。FV方案中该多项式模的具体形式为&lt;i&gt;xd&lt;/i&gt; + 1，其中对于某些&lt;i&gt;n&lt;/i&gt;，有&lt;i&gt;d&lt;/i&gt; = 2&lt;i&gt;n&lt;/i&gt;。为了说明这一点，我们取&lt;i&gt;n&lt;/i&gt; = 4，因此多项式为&lt;i&gt;x&lt;/i&gt;16 + 1。&lt;/p&gt;&lt;p&gt;因为我们考虑的是关于模&lt;i&gt;x&lt;/i&gt;16 + 1之后的余数，所以我们只需要考虑幂从&lt;i&gt;x&lt;/i&gt;0到&lt;i&gt;x&lt;/i&gt;15的多项式。任何更高次的幂都会因乘以该多项式模而消去。这也可以被理解为，&lt;i&gt;x&lt;/i&gt;16 ≡ −1(mod &lt;i&gt;x&lt;/i&gt;16 + 1)，这意味着&lt;i&gt;x&lt;/i&gt;16可以被-1替换，以将&lt;i&gt;x&lt;/i&gt;的更高次幂归约到0到15的范围内。&lt;/p&gt;&lt;p&gt;所以我们考虑的多项式都是这种形式的&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3aac67816652ded493e11cecd567354c_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;351&quot; data-rawheight=&quot;40&quot; class=&quot;content_image&quot; width=&quot;351&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3aac67816652ded493e11cecd567354c_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;351&quot; data-rawheight=&quot;40&quot; class=&quot;content_image lazy&quot; width=&quot;351&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-3aac67816652ded493e11cecd567354c_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;其中这16系数(即&lt;i&gt;ai&lt;/i&gt;)中的每一个的范围都是从0到&lt;i&gt;t&lt;/i&gt; − 1。我们可以用系数的环面来说明，如下所示：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-02bc6bd1344aae02bf596eaf48bdd045_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;282&quot; data-rawheight=&quot;192&quot; class=&quot;content_image&quot; width=&quot;282&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-02bc6bd1344aae02bf596eaf48bdd045_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;282&quot; data-rawheight=&quot;192&quot; class=&quot;content_image lazy&quot; width=&quot;282&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-02bc6bd1344aae02bf596eaf48bdd045_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;在这个图中，每个循环表示多项式中&lt;i&gt;x&lt;/i&gt;的幂次方前的系数的取值范围（包含24个可能值）。绿点代表系数取0时所处的位置。这为我们提供了一种很好的方法来可视化多项式，这在我们考虑加密和解密步骤如何工作时将会有所帮助。&lt;/p&gt;&lt;p&gt;FV加密方案涉及大量的多项式乘法。当我们把&lt;i&gt;x&lt;/i&gt;的两个幂次方相乘，比如2&lt;i&gt;x&lt;/i&gt;14和&lt;i&gt;x&lt;/i&gt;4时，我们把它们的指数相加，得到2&lt;i&gt;x&lt;/i&gt;18。有人可能会假设，求这个多项式关于多项式模的余数可能需要在&lt;i&gt;x&lt;/i&gt;16处将指数旋转回0，得到2&lt;i&gt;x&lt;/i&gt;2，就像上面所示的整数系数那样。如果多项式模是&lt;i&gt;x&lt;/i&gt;16，情况就是这样。然而，我们的多项式模是&lt;i&gt;x&lt;/i&gt;16 + 1 - 如上所述，额外的+1因子引入了一个符号变化，这有助于进一步干扰乘法的结果。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e14976c4f2eae96baa06d24c5a00c2a2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;290&quot; data-rawheight=&quot;179&quot; class=&quot;content_image&quot; width=&quot;290&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e14976c4f2eae96baa06d24c5a00c2a2_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;290&quot; data-rawheight=&quot;179&quot; class=&quot;content_image lazy&quot; width=&quot;290&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-e14976c4f2eae96baa06d24c5a00c2a2_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;如上图所示，当2&lt;i&gt;x&lt;/i&gt;14乘以&lt;i&gt;x&lt;/i&gt;4后模&lt;i&gt;x&lt;/i&gt;16 + 1时，取这个项(由上面的红点表示)，向前旋转环面4个幂，然后从0处调整系数的值，得到22&lt;i&gt;x&lt;/i&gt;2(或−2&lt;i&gt;x&lt;/i&gt;2，如果我们认为数字是从-12到11而不是从0到23时)。&lt;/p&gt;&lt;p&gt;&lt;b&gt;这种形式的多项式具有非常丰富的结构和许多不错的特性。它们是分圆多项式的子集&lt;/b&gt;。使用其中一个作为多项式模并不是严格必需的，但是这样做会更加方便快速。&lt;/p&gt;&lt;p&gt;&lt;b&gt;使用环上的多项式加密&lt;/b&gt;&lt;/p&gt;&lt;p&gt;我们已经介绍了FV加密方案中使用的环上的多项式的一些属性，现在我们可以讨论加密和解密的工作原理。首先，我们需要讨论如何生成私钥和公钥，然后讨论如何使用它们进行加密和解密。&lt;/p&gt;&lt;p&gt;&lt;b&gt;私钥和公钥&lt;/b&gt;&lt;/p&gt;&lt;p&gt;加密采用明文，并使用从私钥派生的公钥将其转换为密文。从明文到密文的转换是通过一种只有在您知道私钥的情况下才容易可逆的方式完成的。&lt;/p&gt;&lt;p&gt;更具体地说，明文是环上的多项式，其具有多项式模&lt;i&gt;xd&lt;/i&gt; + 1，其中&lt;i&gt;d&lt;/i&gt; = 2&lt;i&gt;n&lt;/i&gt;，以及系数模&lt;i&gt;t&lt;/i&gt;。明文加密后为密文，其是由两个环上的、具有相同多项式模的多项式构成的，但系数模为&lt;i&gt;q&lt;/i&gt;，通常&lt;i&gt;q&lt;/i&gt;远大于&lt;i&gt;t&lt;/i&gt;。&lt;/p&gt;&lt;p&gt;例如，多项式模为x4096 + 1，这意味着明文和密文中的多项式都有&lt;i&gt;d&lt;/i&gt; = 4096个系数。明文多项式的系数需要模&lt;i&gt;t&lt;/i&gt; = 290764801，密文多项式的系数需要模&lt;i&gt;q&lt;/i&gt; = 9214347247561474048或更大。&lt;/p&gt;&lt;p&gt;为了便于说明，我们将使用较小的数字，但希望这些数字能够更好地说明方案的各个步骤中发生了什么。在第一部分中，为了更直观，我们将使用&lt;i&gt;d&lt;/i&gt; = 16、&lt;i&gt;t&lt;/i&gt; = 7和&lt;i&gt;q&lt;/i&gt; = 874。注意，这些参数是不安全的!!&lt;/p&gt;&lt;p&gt;对于私钥或密钥，我们用&lt;i&gt;s&lt;/i&gt;表示，它是我们随机生成的一个系数为-1、0或1的多项式。例如，&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bd081de5b9d050ac8e4bd6a22c6f60c4_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;326&quot; data-rawheight=&quot;17&quot; class=&quot;content_image&quot; width=&quot;326&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bd081de5b9d050ac8e4bd6a22c6f60c4_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;326&quot; data-rawheight=&quot;17&quot; class=&quot;content_image lazy&quot; width=&quot;326&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-bd081de5b9d050ac8e4bd6a22c6f60c4_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;接下来，我们从密文空间中随机生成一个多项式(用于生成公钥)，其系数模为&lt;i&gt;q&lt;/i&gt;，我们用&lt;i&gt;a&lt;/i&gt;表示。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-05fb519ca483b31adf29d9210f55365a_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;354&quot; data-rawheight=&quot;34&quot; class=&quot;content_image&quot; width=&quot;354&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-05fb519ca483b31adf29d9210f55365a_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;354&quot; data-rawheight=&quot;34&quot; class=&quot;content_image lazy&quot; width=&quot;354&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-05fb519ca483b31adf29d9210f55365a_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;我们还定义了一个噪音多项式，它是“小”的，因为它是从离散高斯分布中取的一个小系数。这个多项式只在这里使用一次，然后丢弃。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b14889e6eabd6d945621668062e72c47_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;46&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b14889e6eabd6d945621668062e72c47_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;46&quot; class=&quot;content_image lazy&quot; width=&quot;318&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-b14889e6eabd6d945621668062e72c47_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;然后将公钥定义为一对多项式，即&lt;b&gt;pk&lt;/b&gt; = ([−&lt;i&gt;as&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;]&lt;i&gt;q&lt;/i&gt;, &lt;i&gt;a&lt;/i&gt;)，其中多项式都是模多项式模和系数模&lt;i&gt;q&lt;/i&gt;的。&lt;/p&gt;&lt;p&gt;对于上面给出的示例，公钥的第一个多项式被构造为&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b684ebe5bc40a14251793c7f0b480ccd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;342&quot; data-rawheight=&quot;57&quot; class=&quot;content_image&quot; width=&quot;342&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b684ebe5bc40a14251793c7f0b480ccd_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;342&quot; data-rawheight=&quot;57&quot; class=&quot;content_image lazy&quot; width=&quot;342&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-b684ebe5bc40a14251793c7f0b480ccd_b.jpg&quot;&gt;&lt;/figure&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a90a56c83f22dd7233f70502fd00fd6e_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;329&quot; data-rawheight=&quot;40&quot; class=&quot;content_image&quot; width=&quot;329&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a90a56c83f22dd7233f70502fd00fd6e_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;329&quot; data-rawheight=&quot;40&quot; class=&quot;content_image lazy&quot; width=&quot;329&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-a90a56c83f22dd7233f70502fd00fd6e_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;其中第一个乘法取多项式&lt;i&gt;a&lt;/i&gt;，它的系数mod &lt;i&gt;q&lt;/i&gt;，然后乘以系数为-1 0或1的&lt;i&gt;s&lt;/i&gt;。由于模上多项式模的多项式的乘法具有“旋转和反射”性质，有效地混合和打乱了&lt;i&gt;a&lt;/i&gt;的所有系数，并进一步增加了小的噪音。多项式&lt;i&gt;a&lt;/i&gt;有效地掩盖了公钥中的私钥。&lt;/p&gt;&lt;p&gt;通过从公钥中找到&lt;i&gt;s&lt;/i&gt;的方式来破解加密方案，其主要涉及的计算为([−&lt;i&gt;as&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;]&lt;i&gt;q&lt;/i&gt;, &lt;i&gt;a&lt;/i&gt;)。唯一的因素是该方案中包含了噪音——如果&lt;i&gt;e&lt;/i&gt;为零，则很容易从公钥中计算出&lt;i&gt;s&lt;/i&gt;。当&lt;i&gt;e&lt;/i&gt;足够大，但又不太大时，这是一个难题。&lt;/p&gt;&lt;p&gt;本文的示例中，私钥可以通过暴力攻击恢复——−尝试每个可能的&lt;i&gt;s&lt;/i&gt;(只有3 ^ 16 = 43046721组合)&lt;i&gt;，&lt;/i&gt;然后计算&lt;i&gt;as&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;来寻找出一个接近公钥的第一项的答案。对于真正的参数，这种暴力攻击的方法是完全不可行的。3 ^ 4096是一个很大的数字，但有更聪明的方法，然后定义给定的一组参数的安全性。&lt;/p&gt;&lt;p&gt;&lt;b&gt;加密&lt;/b&gt;&lt;/p&gt;&lt;p&gt;加密过程看起来有点像公钥生成过程。&lt;/p&gt;&lt;p&gt;加密明文的过程是将一个系数模为&lt;i&gt;t&lt;/i&gt;的多项式转换为一对系数模为&lt;i&gt;q&lt;/i&gt;的多项式。本例中，我们将加密一个非常简单的多项式(称为消息) - &lt;i&gt;m&lt;/i&gt; = 3 + 4&lt;i&gt;x&lt;/i&gt;8 ≡ 3−3&lt;i&gt;x&lt;/i&gt;8 – 只有两个不为零的系数。&lt;/p&gt;&lt;p&gt;加密还需要三个小的多项式。两个噪音多项式来自于相同的离散高斯分布(即和公钥中的噪音多项式的取法一样)，另一个多项式我们称之为&lt;i&gt;u&lt;/i&gt;，它的系数为-1、0或1，就像私钥一样。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c5074ea2add8b92ed02f500a5745aaa6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;303&quot; data-rawheight=&quot;88&quot; class=&quot;content_image&quot; width=&quot;303&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c5074ea2add8b92ed02f500a5745aaa6_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;303&quot; data-rawheight=&quot;88&quot; class=&quot;content_image lazy&quot; width=&quot;303&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-c5074ea2add8b92ed02f500a5745aaa6_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;和&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-003b4d001276890353b93eecfacdaa9c_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;261&quot; data-rawheight=&quot;23&quot; class=&quot;content_image&quot; width=&quot;261&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-003b4d001276890353b93eecfacdaa9c_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;261&quot; data-rawheight=&quot;23&quot; class=&quot;content_image lazy&quot; width=&quot;261&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-003b4d001276890353b93eecfacdaa9c_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;这些多项式只在加密过程中使用，然后丢弃。&lt;/p&gt;&lt;p&gt;密文是由两个多项式组成的，通过如下计算得到&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2e078592879e32b9041743848382054a_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;225&quot; data-rawheight=&quot;17&quot; class=&quot;content_image&quot; width=&quot;225&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2e078592879e32b9041743848382054a_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;225&quot; data-rawheight=&quot;17&quot; class=&quot;content_image lazy&quot; width=&quot;225&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-2e078592879e32b9041743848382054a_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;请注意消息中的值是在mod &lt;i&gt;t&lt;/i&gt;的范围内，而在我们的示例中，它们被缩放为&lt;i&gt;q&lt;/i&gt;/&lt;i&gt;t&lt;/i&gt; (即128)，使它们覆盖mod &lt;i&gt;q&lt;/i&gt;的范围。这是消息被插入到密文时的唯一更改。这些值通过添加到第一项来掩盖，第一项的值是在mod &lt;i&gt;q&lt;/i&gt;的范围内，与随机的噪音没有区别。&lt;i&gt;u&lt;/i&gt;的随机性改变了每次加密中使用的掩码，从而确保相同的明文在每次加密时产生不同的密文。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f2505294810443752ab67368e58f3678_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;353&quot; data-rawheight=&quot;52&quot; class=&quot;content_image&quot; width=&quot;353&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-f2505294810443752ab67368e58f3678_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;353&quot; data-rawheight=&quot;52&quot; class=&quot;content_image lazy&quot; width=&quot;353&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-f2505294810443752ab67368e58f3678_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;同态加法和乘法之所以有效，是因为消息在密文中以比例来表示。其他项用于掩盖消息，而且可以证明它们是有效的，只有在您知道私钥的情况下才能删除它们。&lt;/p&gt;&lt;p&gt;使用上面给出的多项式显式地计算密文的第一个元素&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-eb195973117ccbdbcae3c51c95e04fab_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;357&quot; data-rawheight=&quot;43&quot; class=&quot;content_image&quot; width=&quot;357&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-eb195973117ccbdbcae3c51c95e04fab_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;357&quot; data-rawheight=&quot;43&quot; class=&quot;content_image lazy&quot; width=&quot;357&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-eb195973117ccbdbcae3c51c95e04fab_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;代入公钥，我们可以看到密文的第一个元素展开为&lt;b&gt;ct0&lt;/b&gt; =[&lt;i&gt;e&lt;/i&gt;1 + &lt;i&gt;eu&lt;/i&gt; – &lt;i&gt;aus&lt;/i&gt; + &lt;i&gt;qm&lt;/i&gt; / &lt;i&gt;t&lt;/i&gt;]&lt;i&gt;q&lt;/i&gt;。在这个表达式中，前两项是“小”的，与噪音成比例，后两项是“大”的。第一个大项有效地掩盖了第二个大项，即消息。&lt;/p&gt;&lt;p&gt;密文的第二个元素是这样计算的:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-71071ffdb188ab83ad8b36ce4353ef98_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;351&quot; data-rawheight=&quot;50&quot; class=&quot;content_image&quot; width=&quot;351&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-71071ffdb188ab83ad8b36ce4353ef98_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;351&quot; data-rawheight=&quot;50&quot; class=&quot;content_image lazy&quot; width=&quot;351&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-71071ffdb188ab83ad8b36ce4353ef98_b.png&quot;&gt;&lt;/figure&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0e2c08e3bcd0351e2c3925a224684bd5_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;345&quot; data-rawheight=&quot;38&quot; class=&quot;content_image&quot; width=&quot;345&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0e2c08e3bcd0351e2c3925a224684bd5_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;345&quot; data-rawheight=&quot;38&quot; class=&quot;content_image lazy&quot; width=&quot;345&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-0e2c08e3bcd0351e2c3925a224684bd5_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;代入公钥，我们看到密文的第二个元素展开为&lt;b&gt;ct1&lt;/b&gt; = [&lt;i&gt;au&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;2]&lt;i&gt;q&lt;/i&gt;。这说明了解密是如何工作的——如果我们知道&lt;i&gt;s&lt;/i&gt;，就可以计算出&lt;b&gt;ct1&lt;/b&gt;&lt;i&gt;s&lt;/i&gt; = [&lt;i&gt;aus&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;2&lt;i&gt;s&lt;/i&gt;]&lt;i&gt;q&lt;/i&gt;，它可以用来消除密文的第一个元素中的非消息大项。&lt;/p&gt;&lt;p&gt;综上所述，密文可以用公钥、私钥、掩码、噪音和消息表示为&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-85dc12f629f85c6ca75bdea132095736_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;329&quot; data-rawheight=&quot;136&quot; class=&quot;content_image&quot; width=&quot;329&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-85dc12f629f85c6ca75bdea132095736_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;329&quot; data-rawheight=&quot;136&quot; class=&quot;content_image lazy&quot; width=&quot;329&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-85dc12f629f85c6ca75bdea132095736_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;&lt;b&gt;解密&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如上所述，解密相对简单。首先，我们计算[&lt;b&gt;ct0&lt;/b&gt; + &lt;b&gt;ct1&lt;/b&gt;&lt;i&gt;s&lt;/i&gt;]&lt;i&gt;q&lt;/i&gt;，它将从消息中完全移除掩码。这给我们一个多项式，它可以展开为[&lt;i&gt;qm&lt;/i&gt; / &lt;i&gt;t&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;1 + &lt;i&gt;eu&lt;/i&gt; + &lt;i&gt;e&lt;/i&gt;2&lt;i&gt;s&lt;/i&gt;]&lt;i&gt;q&lt;/i&gt; -也就是说，缩放后的信息加上一些噪声。因此，只要噪声不太大，我们就可以恢复消息。&lt;/p&gt;&lt;p&gt;明确地，&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c924bee3f697d1c64ba842e1bd28b26e_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;364&quot; data-rawheight=&quot;37&quot; class=&quot;content_image&quot; width=&quot;364&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c924bee3f697d1c64ba842e1bd28b26e_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;364&quot; data-rawheight=&quot;37&quot; class=&quot;content_image lazy&quot; width=&quot;364&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-c924bee3f697d1c64ba842e1bd28b26e_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt; 在这里您可以看到，除了明文的两个非零系数(&lt;i&gt;x&lt;/i&gt;8和&lt;i&gt;x&lt;/i&gt;0)之外，所有的系数都小于&lt;i&gt;q&lt;/i&gt;/&lt;i&gt;t&lt;/i&gt; = 128。如果我们把这个多项式缩放回mod &lt;i&gt;t&lt;/i&gt;范围内的值，那么我们就得到&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5028de8f76b7a78f153f1516a8441ace_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;325&quot; data-rawheight=&quot;67&quot; class=&quot;content_image&quot; width=&quot;325&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5028de8f76b7a78f153f1516a8441ace_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;325&quot; data-rawheight=&quot;67&quot; class=&quot;content_image lazy&quot; width=&quot;325&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-5028de8f76b7a78f153f1516a8441ace_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;四舍五入这些系数可以恢复我们的消息&lt;i&gt;m&lt;/i&gt; = 3 − 3&lt;i&gt;x&lt;/i&gt;8。&lt;/p&gt;&lt;p&gt;我们通过将系数四舍五入，来舍入到最接近的整数后得到我们的信息:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aae00eec1d3cbf8c082d775ec79c8a9c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;278&quot; data-rawheight=&quot;202&quot; class=&quot;content_image&quot; width=&quot;278&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-aae00eec1d3cbf8c082d775ec79c8a9c_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;278&quot; data-rawheight=&quot;202&quot; class=&quot;content_image lazy&quot; width=&quot;278&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-aae00eec1d3cbf8c082d775ec79c8a9c_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt; 把它们放在一起，我们通过如下计算来解密密文&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c9ce4b1095fa013f8699debc1616c7a0_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;144&quot; data-rawheight=&quot;37&quot; class=&quot;content_image&quot; width=&quot;144&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c9ce4b1095fa013f8699debc1616c7a0_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;144&quot; data-rawheight=&quot;37&quot; class=&quot;content_image lazy&quot; width=&quot;144&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-c9ce4b1095fa013f8699debc1616c7a0_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;⌊⌉表示舍入到最接近的整数(四舍五入)。&lt;/p&gt;&lt;p&gt;如果系数中噪音太大，那么它们最终会更接近一个与正确整数不同的整数，然后解密会(悄无声息地)失败并产生错误的结果。在上面的示例中，最大的噪音为13 / 128，所以仍然有一些空间允许产生更多的噪音，并且能够正确解密。噪音的含量可以通过将&lt;i&gt;q&lt;/i&gt; / &lt;i&gt;t&lt;/i&gt;的比值变大或变小来调节。&lt;/p&gt;&lt;p&gt;&lt;b&gt;同态操作&lt;/b&gt;&lt;/p&gt;&lt;p&gt;人们对这类密码体制如此感兴趣的一个主要原因是，它们允许同态加法和乘法(来自希腊语&lt;i&gt;homo&lt;/i&gt; - same和&lt;i&gt;morphe&lt;/i&gt; - shape)。这意味着您可以在数字仍然加密的情况下进行加法和乘法运算，而不必先解密它们。这是一个令人惊叹的功能，有望在数据保护和安全方面构建一个新的黄金标准。&lt;/p&gt;&lt;p&gt;&lt;b&gt;同态加法&lt;/b&gt;&lt;/p&gt;&lt;p&gt;最简单的情况是两个加密数字的加法。假设我们已经用相同的公钥加密了两个多项式&lt;i&gt;m&lt;/i&gt;1和&lt;i&gt;m&lt;/i&gt;2：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-553b6f36a60461195c60daed1308ab11_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;236&quot; data-rawheight=&quot;45&quot; class=&quot;content_image&quot; width=&quot;236&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-553b6f36a60461195c60daed1308ab11_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;236&quot; data-rawheight=&quot;45&quot; class=&quot;content_image lazy&quot; width=&quot;236&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-553b6f36a60461195c60daed1308ab11_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;注意，我们需要使用两个不同的、小的多项式&lt;i&gt;u&lt;/i&gt;1和&lt;i&gt;u&lt;/i&gt;2，以及4个小的噪音多项式&lt;i&gt;e&lt;/i&gt;1…&lt;i&gt;e&lt;/i&gt;4。&lt;/p&gt;&lt;p&gt;如果我们仅仅是将密文中的元素相加，就会得到一个新的密文&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bacee5ea6d07d985b6adad209288adaa_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;363&quot; data-rawheight=&quot;24&quot; class=&quot;content_image&quot; width=&quot;363&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bacee5ea6d07d985b6adad209288adaa_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;363&quot; data-rawheight=&quot;24&quot; class=&quot;content_image lazy&quot; width=&quot;363&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-bacee5ea6d07d985b6adad209288adaa_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;由于消息仅存在于具有缩放的密文中，所以加法的结果与&lt;i&gt;m&lt;/i&gt;1 + &lt;i&gt;m&lt;/i&gt;2加密的形式相同，只是增加了新的噪音：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0e8f075227e64b99ff92513d9d71dd67_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;274&quot; data-rawheight=&quot;23&quot; class=&quot;content_image&quot; width=&quot;274&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0e8f075227e64b99ff92513d9d71dd67_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;274&quot; data-rawheight=&quot;23&quot; class=&quot;content_image lazy&quot; width=&quot;274&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-0e8f075227e64b99ff92513d9d71dd67_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;近似解密(舍入之前)将是&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9edf65303259260c09e65cbeaeacca21_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;171&quot; data-rawheight=&quot;19&quot; class=&quot;content_image&quot; width=&quot;171&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9edf65303259260c09e65cbeaeacca21_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;171&quot; data-rawheight=&quot;19&quot; class=&quot;content_image lazy&quot; width=&quot;171&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-9edf65303259260c09e65cbeaeacca21_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;这意味着只要新的噪音不是太大，消息&lt;i&gt;m&lt;/i&gt;1 + &lt;i&gt;m&lt;/i&gt;2将正确解密。噪音有三种类型:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-06f3c9d54c340ece4732208e903c5088_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;107&quot; data-rawheight=&quot;64&quot; class=&quot;content_image&quot; width=&quot;107&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-06f3c9d54c340ece4732208e903c5088_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;107&quot; data-rawheight=&quot;64&quot; class=&quot;content_image lazy&quot; width=&quot;107&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-06f3c9d54c340ece4732208e903c5088_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;我们担心的是，当这些项变得足够大，以至于噪音多项式中的一个系数大于&lt;i&gt;q&lt;/i&gt;/(2&lt;i&gt;t&lt;/i&gt;)时，解密就会失败，因为解密过程结束时的四舍五入操作会四舍五入到错误的数字。&lt;/p&gt;&lt;p&gt;如果我们只考虑第一项，那么我们就把来自离散高斯分布的多项式中的系数相加。这意味着，在某些情况下，我们会把一个负系数加到一个正系数上，结果会更接近于零。在其他情况下，系数会有相同的符号，所以结果会更大。我们可以做很多的同态加法，看看噪音是如何随着加法的数量增加而增加的，这是很有指导意义的。系数的分布如下图所示，其中我们添加了1、5和30个噪音多项式(随机地进行了数百次试验)。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-87917a5febad9b42d8fefd55a4b6c06f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;298&quot; data-rawheight=&quot;181&quot; class=&quot;content_image&quot; width=&quot;298&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-87917a5febad9b42d8fefd55a4b6c06f_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;298&quot; data-rawheight=&quot;181&quot; class=&quot;content_image lazy&quot; width=&quot;298&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-87917a5febad9b42d8fefd55a4b6c06f_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;当我们添加了30个噪音多项式时，某些系数有可能会大于64，即超过了&lt;i&gt;q&lt;/i&gt;/&lt;i&gt;t&lt;/i&gt;的一半，所以解密不会产生正确的结果。&lt;/p&gt;&lt;p&gt;另外两项表示不同的情况——第二项是一个噪音多项式乘以一些“小的多项式”(系数为-1、0或1)的总和。这种乘法会产生更大的噪音。一个噪音多项式和一个小的多项式的乘积的系数大约将是随机正负号的噪音多项式系数的2/3rds的总和。这意味着这个噪音与多项式的最高次的平方根√&lt;i&gt;n&lt;/i&gt;一致。&lt;/p&gt;&lt;p&gt;对这一项绘制与上面相同的分布可以看出，它比第一项大得多，而且即使对于我们示例中的参数，也存在错误解密的危险，即使只是添加了几个参数。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41ee0065dadd83e8a2b6508a1c549740_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;305&quot; data-rawheight=&quot;181&quot; class=&quot;content_image&quot; width=&quot;305&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-41ee0065dadd83e8a2b6508a1c549740_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;305&quot; data-rawheight=&quot;181&quot; class=&quot;content_image lazy&quot; width=&quot;305&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-41ee0065dadd83e8a2b6508a1c549740_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;第三项是类似的——一组噪音多项式之和，乘以一个“小的多项式”。它的噪音分布是这样的:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-633006094f47eea88a2c3f1465a4d033_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;193&quot; class=&quot;content_image&quot; width=&quot;318&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-633006094f47eea88a2c3f1465a4d033_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;318&quot; data-rawheight=&quot;193&quot; class=&quot;content_image lazy&quot; width=&quot;318&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-633006094f47eea88a2c3f1465a4d033_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt; 结合起来，我们可以画出这三项的最大系数的增长，作为已经发生的加法数量的函数。这是一个须状图，给出了这些最大值的可变性。(注意噪音的均值接近于零，这是最大系数的幅值分布。)&lt;/p&gt;&lt;p&gt;这表明，对于我们所选择的参数，由两个以上加法产生的密文，解码错误的概率很高，而且两次加法失败的概率也很高。这是因为有时最大错误大于64，当&lt;i&gt;q&lt;/i&gt;/&lt;i&gt;t&lt;/i&gt; = 128时，会导致不正确的解密，就像这里一样。为了给这样的操作提供更多的空间，我们需要使用更大的&lt;i&gt;q&lt;/i&gt;/&lt;i&gt;t&lt;/i&gt;比值，这可以应对通常由所执行的操作数量引入的噪音量。&lt;/p&gt;&lt;p&gt;不幸的是，由密文的同态乘法引入的噪音量又要大得多。&lt;/p&gt;&lt;p&gt;&lt;b&gt;同态乘法&lt;/b&gt;&lt;/p&gt;&lt;p&gt;同态乘法在程序上很简单，但是比加法复杂得多。如上所述，消息以&lt;i&gt;qm&lt;/i&gt;1/&lt;i&gt;t&lt;/i&gt;的比例出现在密文的第一个元素中。因此，将两个密文的第一个元素相乘，再乘以&lt;i&gt;t&lt;/i&gt;/&lt;i&gt;q&lt;/i&gt;，就会得到一个带有&lt;i&gt;qm&lt;/i&gt;1&lt;i&gt;m&lt;/i&gt;2/&lt;i&gt;t&lt;/i&gt;的项——如果我们仍然能够除去掩码项，这个项就可以恢复。&lt;/p&gt;&lt;p&gt;因此，要理解同态乘法的机制，关键在于了解如何从密文的乘积中去掉掩码项。要做到这一点，我们的想法是把密文看作是私钥&lt;i&gt;s&lt;/i&gt;的幂次方的一个简单多项式。这是这篇文章中使用多项式的第三种不同的方法，所以它有点令人困惑，但是它是理解同态乘法如何工作的关键。&lt;/p&gt;&lt;p&gt;我们可以写出解密过程的第一部分，使密文的每个元素都是&lt;i&gt;s&lt;/i&gt;的多项式的系数:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f636288d49bb0fd9330a8a22d814749e_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;82&quot; data-rawheight=&quot;22&quot; class=&quot;content_image&quot; width=&quot;82&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f636288d49bb0fd9330a8a22d814749e_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;82&quot; data-rawheight=&quot;22&quot; class=&quot;content_image lazy&quot; width=&quot;82&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-f636288d49bb0fd9330a8a22d814749e_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;请记住，&lt;b&gt;ct&lt;/b&gt;和&lt;i&gt;s&lt;/i&gt;本身就是多项式，所以这个方程是一个多项式乘以一个多项式(&lt;i&gt;s&lt;/i&gt;0)加上一个多项式乘以另一个多项式，然后所有这些都取多项式模&lt;i&gt;xd&lt;/i&gt; + 1和系数模&lt;i&gt;q&lt;/i&gt;。&lt;/p&gt;&lt;p&gt;现在，我们在上面看到解密产生了一个与掩码项&lt;i&gt;au&lt;/i&gt;无关的量。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bf9118635c42e1089392e2dac3e230e1_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;165&quot; data-rawheight=&quot;28&quot; class=&quot;content_image&quot; width=&quot;165&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bf9118635c42e1089392e2dac3e230e1_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;165&quot; data-rawheight=&quot;28&quot; class=&quot;content_image lazy&quot; width=&quot;165&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-bf9118635c42e1089392e2dac3e230e1_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;好了，现在考虑两个密文&lt;b&gt;a&lt;/b&gt;和&lt;b&gt;b&lt;/b&gt;，它们被定义为两个消息&lt;i&gt;m&lt;/i&gt;1和&lt;i&gt;m&lt;/i&gt;2的加密，它们可以被解密:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-595c79dfdb7db14db4b4779ef4a70fe7_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;144&quot; data-rawheight=&quot;56&quot; class=&quot;content_image&quot; width=&quot;144&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-595c79dfdb7db14db4b4779ef4a70fe7_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;144&quot; data-rawheight=&quot;56&quot; class=&quot;content_image lazy&quot; width=&quot;144&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-595c79dfdb7db14db4b4779ef4a70fe7_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;其中&lt;i&gt;n&lt;/i&gt;1和&lt;i&gt;n&lt;/i&gt;2表示密文中的噪声。&lt;/p&gt;&lt;p&gt;如果我们取它们的乘积，我们有:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6cc96ccd1abf5e4b246970c599f216ee_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;275&quot; data-rawheight=&quot;26&quot; class=&quot;content_image&quot; width=&quot;275&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-6cc96ccd1abf5e4b246970c599f216ee_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;275&quot; data-rawheight=&quot;26&quot; class=&quot;content_image lazy&quot; width=&quot;275&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-6cc96ccd1abf5e4b246970c599f216ee_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;右边的表达式与计算&lt;b&gt;a&lt;/b&gt;和&lt;b&gt;b&lt;/b&gt;所用的掩码无关，所以左边也必须与它们无关。&lt;/p&gt;&lt;p&gt;如果我们把左边展开成&lt;i&gt;s&lt;/i&gt;的形式(为了方便起见，再乘以&lt;i&gt;t&lt;/i&gt;/&lt;i&gt;q&lt;/i&gt;)就得到了&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-543332b77b0b67e63cebf02f3d4f5a9d_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;159&quot; data-rawheight=&quot;16&quot; class=&quot;content_image&quot; width=&quot;159&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-543332b77b0b67e63cebf02f3d4f5a9d_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;159&quot; data-rawheight=&quot;16&quot; class=&quot;content_image lazy&quot; width=&quot;159&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-543332b77b0b67e63cebf02f3d4f5a9d_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;其中&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b7baf2ef09232c2b2cd5a64c54e60057_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;147&quot; data-rawheight=&quot;125&quot; class=&quot;content_image&quot; width=&quot;147&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b7baf2ef09232c2b2cd5a64c54e60057_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;147&quot; data-rawheight=&quot;125&quot; class=&quot;content_image lazy&quot; width=&quot;147&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-b7baf2ef09232c2b2cd5a64c54e60057_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;这样做意味着我们可以计算出一个新的密文的组成部分，它比原来的密文多一个元素，并且可以正确地使用密钥&lt;i&gt;s&lt;/i&gt;的幂次方进行解密。&lt;/p&gt;&lt;p&gt;解密的形式展开如下:&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8e45bf41e970505ac27fe1cc80ce4ee8_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;172&quot; data-rawheight=&quot;35&quot; class=&quot;content_image&quot; width=&quot;172&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8e45bf41e970505ac27fe1cc80ce4ee8_b.png&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;172&quot; data-rawheight=&quot;35&quot; class=&quot;content_image lazy&quot; width=&quot;172&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-8e45bf41e970505ac27fe1cc80ce4ee8_b.png&quot;&gt;&lt;/figure&gt;&lt;p&gt;这只是增加了另一项即多项式乘以多项式的平方。有很多簿记要做，但它只是学校级代数(直到模数部分!)这是解密步骤的概括，它允许我们解密同态乘法的结果。&lt;/p&gt;&lt;p&gt;要了解这一切是如何显式地工作的，请考虑&lt;b&gt;a&lt;/b&gt;和&lt;b&gt;b&lt;/b&gt;在加密过程中的展开式&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-62cfe54d81e413fc5498f0006ae7ad16_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;217&quot; data-rawheight=&quot;45&quot; class=&quot;content_image&quot; width=&quot;217&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-62cfe54d81e413fc5498f0006ae7ad16_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;217&quot; data-rawheight=&quot;45&quot; class=&quot;content_image lazy&quot; width=&quot;217&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-62cfe54d81e413fc5498f0006ae7ad16_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;如果我们展开乘法的定义，同时对结果进行部分解密(即解密到除以&lt;i&gt;q&lt;/i&gt;/&lt;i&gt;t&lt;/i&gt;和整数之前)，那么得到的表达式就很复杂。但是，由于每个密文的组件都是在解密过程中被构造成能够删除掩码项(&lt;i&gt;aui&lt;/i&gt;)的，所以这个展开的结果完全不依赖于来自公钥的掩码项!!!得到的表达式如下：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1f0f133ed23cc091e8d1c1c67722a90a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;344&quot; data-rawheight=&quot;133&quot; class=&quot;content_image&quot; width=&quot;344&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1f0f133ed23cc091e8d1c1c67722a90a_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;344&quot; data-rawheight=&quot;133&quot; class=&quot;content_image lazy&quot; width=&quot;344&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-1f0f133ed23cc091e8d1c1c67722a90a_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;这里有很多项，但是现在我们已经去掉了掩码，问题是，噪音(除了第一个)与&lt;i&gt;q&lt;/i&gt;/(2&lt;i&gt;t&lt;/i&gt;)的“噪音预算”相比有多大?&lt;/p&gt;&lt;p&gt;为了感受这一点，我们模拟了大量加密的随机信息的乘法，&lt;i&gt;d&lt;/i&gt; = 16，&lt;i&gt;t&lt;/i&gt; = 7，&lt;i&gt;q&lt;/i&gt; = 7168 = 1024×&lt;i&gt;t&lt;/i&gt;。各类型噪音的系数大小分布如下图所示。请注意，总的噪音需要大于&lt;i&gt;q&lt;/i&gt;/(2&lt;i&gt;t&lt;/i&gt;) = 512才能导致解密错误。在这些项中，涉及噪音多项式的项、消息和私钥&lt;i&gt;e&lt;/i&gt;22&lt;i&gt;m&lt;/i&gt;1 + &lt;b&gt;e&lt;/b&gt;12&lt;i&gt;m&lt;/i&gt;2&lt;i&gt;s&lt;/i&gt;是最大的贡献者。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-9452f56e19a8242a6114ae55ebc7a410_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;416&quot; data-rawheight=&quot;265&quot; class=&quot;content_image&quot; width=&quot;416&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-9452f56e19a8242a6114ae55ebc7a410_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;416&quot; data-rawheight=&quot;265&quot; class=&quot;content_image lazy&quot; width=&quot;416&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-9452f56e19a8242a6114ae55ebc7a410_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;上图显示，对于这些参数，最大的贡献来自于包含噪音多项式乘以消息多项式和私钥的项。这种噪音的最大系数约为300。这里有两项，其他的项更小。把所有的噪音合并成一个，就得到了乘法结果的总噪音。这些系数的分布如下图所示：&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-5154a6311e4436d67f240a309fa8f1e1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;293&quot; data-rawheight=&quot;201&quot; class=&quot;content_image&quot; width=&quot;293&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-5154a6311e4436d67f240a309fa8f1e1_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;293&quot; data-rawheight=&quot;201&quot; class=&quot;content_image lazy&quot; width=&quot;293&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-5154a6311e4436d67f240a309fa8f1e1_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;这表明没有足够的预算来安全地进行单次乘法，然后解密这些参数的正确结果(无论如何都是不安全的!)——大约1/4000的系数将具有大于512的噪音，导致约1%的解密错误率。&lt;/p&gt;&lt;p&gt;因此，如果我们将它们视为&lt;i&gt;s&lt;/i&gt;的多项式，则可以进行密文的乘法，从而在解密时抵消它们自己的掩码项。将它们相乘，并分别跟踪&lt;i&gt;s&lt;/i&gt;的幂次方的系数和噪音量，以便我们确信它们能够正确解密。&lt;/p&gt;&lt;p&gt;&lt;b&gt;Relinearisation和其他话题&lt;/b&gt;&lt;/p&gt;&lt;p&gt;上面概述的乘法策略允许我们进行多次乘法，但代价是每次乘法都将密文的大小增加一个多项式。密文在大小上增长可能是一个问题。事实证明，有一些方法可以将密文的大小还原为两个多项式，但代价是增加噪音。这就是所谓的Relinearisation（再线性化），因为你要去掉&lt;i&gt;s&lt;/i&gt;多项式中的二次项和更高的项。&lt;/p&gt;&lt;p&gt;另一项使这种加密方案切实可行的重要技术是将多个消息打包到一个明文中，通过并行化提高吞吐量。&lt;/p&gt;&lt;p&gt;&lt;b&gt;结论&lt;/b&gt;&lt;/p&gt;&lt;p&gt;粗略地说，加密是将消息隐藏在一个环上的多项式中，并添加一些噪音。每个密文都包含足够的信息，可以在给定私钥的情况下除去自己的掩码。因为嵌入只涉及到消息的缩放，所以仍然可以对它们执行加法和乘法，并使用一些巧妙的结构来在之后移除掩码。该方案的安全性来自于在不知道私钥的情况下，在噪声存在的情况下很难去除掩码。这个问题的难度导致了一些优秀的安全性能，例如没有已知的量子算法来攻击这些系统。&lt;/p&gt;&lt;p&gt;如果您已经了解了这些，我们希望您现在能够更好地理解基于Ring Learning with Errors问题的同态加密方案(或者至少是这些方案中的FV方案)的工作原理。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54484449</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>详解比特币钱包安全性-part1</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54484362.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54484362&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于任何拥有大量比特币、以太币或其他加密资产的人来说，加密货币安全都是一个问题。大多数比特币都存放在比特币钱包或比特币银行中。你的比特币持有量被记录在公共账本上。您可以通过使用私钥进行身份验证来访问这些资产。&lt;/p&gt;&lt;p&gt;比特币钱包可以更准确地描述为比特币钥匙环，上面串着很多把钥匙。保护您的比特币钱包就是保护私钥，正如保护任何一段文本都有许多不同的方法一样，保护比特币私钥也有许多方法。&lt;/p&gt;&lt;p&gt;可以用比特币银行来比喻Coinbase等机构。Coinbase采用了比特币钱包的技术，并将其封装在与银行和大型科技公司相关联的转移层中。通过使用比特币银行，你牺牲了管理自己私钥的自主权。好的一面是，您不必管理自己的私钥，因为私钥管理非常烦人。当然，放弃私钥管理，也就放弃了一些自主权。&lt;/p&gt;&lt;p&gt;詹姆逊·洛普(Jameson Lopp，简称JL)是一名密码朋克，也是Casa的加密货币工程师。在这篇文章中，我们将与Jameson对话，探讨比特币钱包如何工作，如何保护它们，常见的威胁，诈骗和比特币的黑客企图。&lt;/p&gt;&lt;p&gt;致远：今天我想和大家谈谈加密货币安全，特别是钱包安全。让我们从钱包开始讨论。什么是比特币钱包?为什么比特币持有者需要一个钱包?&lt;/p&gt;&lt;p&gt;JL：钱包不是最好的名字。最好将这些东西中的一个称为密钥环或密钥管理服务。但基本上你所做的是你在创建一种软件，它可以帮助你管理解开密码资产的私钥，允许你使用它们，并允许你管理你实际金钱的其他方面。所以在比特币中，这基本上意味着管理未使用的交易输出，也就是真正的“比特币”。&lt;/p&gt;&lt;p&gt;致远：那些未使用的交易输出，它们是保存在钱包中还是公开访问?让我们来回顾一下比特币钱包和公共账本之间的相互作用。&lt;/p&gt;&lt;p&gt;JL：是的。所以UTXOs基本上就是当前可用的可消费比特币的数据库，这些比特币是你通过解析区块链本身以及查看区块链的整个历史而获得的。区块链就是一系列的输入和输出。每个交易都要花费一些输入，然后创建新的输出。按照在整个历史从一开始的创世区块,我们可以删除交易输出,用于创建新的交易，并且将其广播到网络上,然后进入区块链。&lt;/p&gt;&lt;p&gt;最终我们到达了现在的状态。&lt;/p&gt;&lt;p&gt;所以，如果你能把比特币网络上的交易看作是一个状态转换函数，在这个函数中，你消费一些交易输出，然后创建新的，最终我们在区块链的当前端点得到当前状态。&lt;/p&gt;&lt;p&gt;致远：当我初始化一个比特币钱包时，我需要做什么?&lt;/p&gt;&lt;p&gt;JL：你要做的就是创建这些私钥。有很多不同的方法可以做到这一点，但是对于他们所谓的分层确定性钱包，现在有一个标准，其中您实际上只是创建这个根主密钥对，然后从该主密钥对中派生出所有公共私钥。这有好几个原因，但是特别需要指出的是，它意味着您只需要备份主密钥对，并且事实上还有其他标准允许您只备份一个12或24个字符长度的种子短语，然后使用它来导出主密钥对本身。&lt;/p&gt;&lt;p&gt;因此，当您创建一个新的钱包时，除了一些公钥和私钥之外，钱包中没有任何东西。但是如果您以前从未使用过这组公钥和私钥，当然钱包中也不会有任何币，因为没有东西会被发送到那些地址。&lt;/p&gt;&lt;p&gt;致远：在这种情况下，您不需要扫描整个区块链并找到与此钱包相关的所有交易，因为您知道它是惟一的。&lt;/p&gt;&lt;p&gt;JL：是的，如果这是你第一次使用钱包。现在，如果要从以前使用的钱包中导入种子短语或一组密钥对，则需要返回并执行某种扫描，以便得到那些未使用的交易输出。&lt;/p&gt;&lt;p&gt;致远：你在这里描述的是，如果我已经是比特币用户，我有一个钱包，我想把它一直留在家里，然后也许我还有另一个钱包，我可以随身携带，偶尔使用，我希望他们是相同的帐户结构的副本。如果我把那个新钱包和第一个钱包相同的地址模式拷贝起来，那么我需要做什么呢？&lt;/p&gt;&lt;p&gt;JL：那么，在那种情况下，钱包软件将从最开始的时间点开始，或者在某些情况下，如果您知道何时开始使用钱包，那么您可以告诉它仅仅从某个日期开始。但是这个钱包将不得不进入网络，或者您当然可以让它连接到您的节点。但是它必须连接到网络上某个地方的某个完整的比特币节点，然后开始查询该节点，它基本上将遍历放入该区块链的每个块，并将向该节点发送一个查询，该查询表示：“这是一种模糊过滤器，我查找与匹配此模糊筛选器的任何地址相关的任何交易。如果有匹配的话，把它发回给我，我会在本地更仔细地检查这些交易。”&lt;/p&gt;&lt;p&gt;所以你可以很快地做到这一点，因为你可以——这实际上被称为SPV，简化的支付验证，实际上在许多年前的中本聪白皮书中有描述。通过使用位于每个区块标头中的默克尔树的根结点，您实际上可以从节点获得一个强大的加密证明，证明特定块中存在特定的交易，而不必下载曾经发生的所有交易。&lt;/p&gt;&lt;p&gt;现在，在不深入讨论细节的情况下，这里有一些隐私问题。虽然存在一些潜在的审查问题，但它在大多数情况下都运行良好。当然，也有很多改进的建议，让它更经得起审查，更私密。&lt;/p&gt;&lt;p&gt;致远：让我们将SPV与完整节点的讨论留到稍后讨论。&lt;/p&gt;&lt;p&gt;JL：当然&lt;/p&gt;&lt;p&gt;致远：现在只关注钱包，我需要的硬件规格是什么?我可以在我的MacBook或在我的手机上运行这个吗?安全比特币钱包软件的要求是什么?&lt;/p&gt;&lt;p&gt;JL：这是一个相当宽泛的问题，如果你对计算机安全有所了解，你就会知道没有什么是100%安全的。所以你真正想做的是尽量减少你使用的钱包的攻击面。当然，总会有性能和便利的权衡。所以一般来说，您的设置越安全，它就越不方便，或者性能越差。&lt;/p&gt;&lt;p&gt;所以说，当你在笔记本电脑、台式机、手机等常规硬件上运行钱包时，它们总是会有更多潜在的攻击载体，因为你在运行一个成熟的操作系统，可能有恶意软件在上面。就像有一百万不同的事情可能出错, 可能导致您将您的私钥暴露给某个攻击者，或者攻击者的欺骗地址，当您没有查看时将它们交换出去，并且您意外地将钱发送到一个攻击者的地址，而不是你想要的接收者。&lt;/p&gt;&lt;p&gt;事实上，我现在的公司正在建立这个基础。尝试将用户体验与这些硬件密钥管理设备的安全性结合起来，比如移动应用程序钱包。这些设备通常更安全，因为它们是定制的硬件，除了管理安全元素中的私钥和为各种加密货币执行交易签名操作外，基本上什么也不做。所以基本上不可能把恶意软件和其他不好的东西放到这些设备上，因为它们根本不支持其他操作。&lt;/p&gt;&lt;p&gt;致远：这就是说， 除非某种类型供应链的闯入者。 我最近看到的这种类型就是比如你有一个商店，Casa商店，因为你是一个专属的安全公司。我认为我可以做出一个论断就是如果你从你的Casa商店买一个 Trezor 钱包可能会比从ebay买更安全。因为你可能不想要从ebay买一个比特币。&lt;/p&gt;&lt;p&gt;JL：你可能不想从任意一个人那里买。现在，当人们从eBay或其他p2p市场购买硬件钱包时，我们看到的攻击类型，并不是那些人真的去篡改硬件本身，通常没有那么复杂，因为这些人买的是硬件设备。然后他们打开它，在上面放一个钱包种子短语，他们知道种子短语，然后他们把它寄给其他人，基本上是给他们指令，告诉他们，“哦，不要重置设备。继续使用种子短语。并且这是你的种子短语。“然后，他们当然会等着有人把钱存进去，然后把钱全偷走。”&lt;/p&gt;&lt;p&gt;我不是一个硬件专家，但如果你继续喜欢Trezor和Ledger网站，你应该能够找到更多的材料，在那里，他们实际上有很多防篡改机制内置到硬件本身中，使得某人打开硬件非常非常困难。这就像固件在每次设备打开时都要检查硬件的完整性。&lt;/p&gt;&lt;p&gt;当然，只要有足够的资源，任何事情都是可能的，比如，我想，如果你去一家拥有电子显微镜和各种其他设备的三家信访机构，他们可能会篡改这类东西。但总的来说，您获得了设备本身未被篡改的真正、真正高水平的安全性。&lt;/p&gt;&lt;p&gt;致远：这是比特币钱包，我们现在已经深入讨论了。还有一个常用的术语--比特币银行。我认为这可能是你可以用来形容Coinbase的。比特币银行的股票是多少？比特币银行账户与比特币钱包相比如何？&lt;/p&gt;&lt;p&gt;JL：通常我们称某家银行为银行时，指的是大型托管服务。因此，他们正在为很多人管理比特币和加密资产。因此，这基本上意味着他们必须代表其他人保护所有这些私钥的安全，这意味着他们将拥有更加复杂的多层存储解决方案。&lt;/p&gt;&lt;p&gt;例如，当你谈论Coinbase时，我最近听说过，他们可能持有至少5%的比特币。你可以去他们的项目博客看看，他们在一两年前发表了一篇文章，讨论他们使用的一些安全机制。这基本上意味着，这些私钥的绝大部分都将在高度安全的缺省情况下脱机，其中必须有多个人同时进入，才能打开金库并进入金库，它基本上就是这个巨大的法拉第笼。每当他们想从这个冷藏库里把钱放进他们的热钱包时，这是一个非常复杂的过程，它有许多、许多的检查和平衡，以确保他们不仅免受黑客和外部威胁，但即使是从内部人士那里，他们也可能会被激励去偷私钥，然后飞到某个不被引渡的国家。&lt;/p&gt;&lt;p&gt;致远：在这个描述中，您概述了冷存储和热存储之间的区别，并给出了一些示例。我知道冷存储和热存储是极端的描述，它们之间有很多粒度，什么是冷存储什么是热存储。您能描述一下将被分类为冷库或热库的帐户类型吗?&lt;/p&gt;&lt;p&gt;JL：是的。所以一般来说，当我们说冷存储和热存储的时候，我们基本上是说它连接到互联网上或者它没有连接到互联网上。&lt;/p&gt;&lt;p&gt;很明显，当你把设备从互联网上断开时，你就创建了这条空隙，这样黑客就无法访问它。对于黑客来说，最安全的办法就是拔掉插头。&lt;/p&gt;&lt;p&gt;现在当人们想到冷存储时，他们通常想到的是纸制钱包。事实上，我不建议人们使用纸质钱包，除非他们非常先进，因为有太多东西会出问题。&lt;/p&gt;&lt;p&gt;但是我一般说冷存储硬件密钥管理设备,由于设备本身,而你仍然把它插在电脑甚至手机在某些情况下,这些设备设置的方式实际上是私钥不能离开设备的情况。&lt;/p&gt;&lt;p&gt;即使有一根电缆连接设备到另一台计算机，在电缆之间传输的数据是非常有限的，而且密钥永远不会从设备上传输出去。所以事情的另一面是一个热钱包,你有这些私钥机器不断地连接到互联网或有时连接到互联网,但它只是一个软件,是一台通用计算机管理私钥。这里的问题是，即使一个好的钱包会让这些密钥在磁盘上的文件中保持加密，但在某个时间点，您将不得不访问这些私钥。你必须解密这一团数据才能和它签署交易。&lt;/p&gt;&lt;p&gt;即使只有几毫秒的时间，如果计算机上有一些恶意软件或其他东西在等待您这样做，那么它可以刷新您的私钥并窃取您的所有密码资产，这就是我们遇到热钱包的主要问题，这就是为什么交易所一直被黑客攻击，是因为它们必须运行热钱包，以便能够进行自动取款。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54484362</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>详解比特币钱包安全性-part2</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54484329.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54484329&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;致远：对于谁应该拥有什么样的钱包，你有标准吗?因为我假设有人对加密货币一窍不通，你需要推荐一种为他们设置的钱包，而不是给安全专家。你会不会为不同类型的人推荐不同的钱包组合和配置?&lt;/p&gt;&lt;p&gt;JL：是的，我写过一点。总的来说，我把它分成了三个不同的类别，可能需要不同程度的偏好。所以你的入门级类别就是花钱，上百美元，几百美元，基本上，这是一个可以保留在您的手机或任何其他设备上的常规热钱包上的金额，因为如果发生某些事情并且您丢失了它，可能也不会破坏您的生活。&lt;/p&gt;&lt;p&gt;现在，当你开始获得更多的中级存储时，下一个级别的存储更像是一个小的投资。如果我们讨论的是像一个月的工资或者更多,进入数千美元的范围。然后当它开始有意义的投资50或100美元到一个硬件设备, 这会给你最好的安全感，而不用投入大量的时间和金钱。&lt;/p&gt;&lt;p&gt;然后第三个层面是当我们开始谈论改变生活的钱,像成百上千,或数百万美元的值得你加密的资产,这时你可能要花更多的时间和资源和资金投入到更多的复杂和冗余系统。因为你要担心由于黑客和外部攻击者带来的损失,但更为常见的是,大部分的损失似乎发生在由于用户无知或疏忽。对任何类型的自然灾害没有足够的冗余性和健壮性。&lt;/p&gt;&lt;p&gt;这是真正的我今年一直在做的那种级别的钱包, 我们认为这里有一个相当大的人群，很多人开始使用第一级或第二级，然后是这些泡沫在加密货币中不断发生，他们有一天醒来，现在他们拥有一定程度的财富，以前他们从未想过要担心管理。&lt;/p&gt;&lt;p&gt;致远：我想问一些关于诈骗和盗窃之类的问题，但也许我们应该先谈谈用户的能力不足。人们会犯什么样的错误?特别地，你已经提到了纸钱包，很明显，有了纸钱包，你可能会把纸钱包弄丢或者把水泼到上面。你可以有一个电脑硬盘，里面存放着你的私钥，然后你不小心把电脑弄丢了。我们已经听过很多这样的故事。人们犯错误的常见情况是什么?&lt;/p&gt;&lt;p&gt;JL：是的。我的意思是，我认为通常是有人一开始就没有创建备份，他们只是在电脑上运行一个热钱包，然后出现了某种硬件故障。或者他们在某处有一个备份，然后发生了一些事情。就像我们听说过的，有一个很好的故事。我认为这是一个连线记者一年多前的事,他备份种子词,但它就像写在一张纸在他的桌子上,显然女仆是认为这是一张废弃的纸扔了出去。&lt;/p&gt;&lt;p&gt;所以它通常只是没有良好的实践和没有多个离线冗余备份。即使你有很好的备份实践，很多时候人们也不会真正测试它们。所以他们的备份和恢复机制可能有一些缺陷，当然，他们有备份，但是当发生了什么事情，他们试图恢复它，他们发现了这个缺陷，现在已经太晚了。&lt;/p&gt;&lt;p&gt;所以我们试着考虑所有这些不同的可能失败的情况，因为我认为大多数人只是想，“哦!我的房子可能会被烧毁，或者可能会有洪水什么的。所以我真正需要的是一个电子存储设备，我把种子连接到那里。“我认为这些都是对很多共同的威胁,但我有一个压力测试博客,我最近写道,有很多的事情可能出错,甚至可以让那些电子设备不可读,即使本身并不完全摧毁。&lt;/p&gt;&lt;p&gt;最近，我们听到了一些事情，例如，银行的保险箱被打开又被扔掉，而店主甚至不知道发生了什么。所以我认为也有很多人只是把他们的备份恢复短语放进银行的保险箱，而没有想过，“哦!实际上，这方面也存在潜在的失败案例”。&lt;/p&gt;&lt;p&gt;致远：还有诈骗，比特币盗窃场景，人们可以互相攻击的伎俩。这些年来我们看到了很多这样的例子。您所见过的最常见的诈骗和比特币盗窃案例有哪些?&lt;/p&gt;&lt;p&gt;JL：嗯，最普遍的，我不知道他们有多成功，但肯定有很多他们在twitter上各种各样的骗局。我认为这是让一些更天真的人把钱转出去，认为会得到更多的钱。&lt;/p&gt;&lt;p&gt;表面上合法的企业也有很多骗局，这就是为什么拥有悠久的历史和声誉也很重要。如果你去使用一些只存在几天或几周的其他服务，你永远不会知道，它们可能只是积聚了大量的沉积物，然后消失。&lt;/p&gt;&lt;p&gt;但总的来说，你只需要跟着你的直觉走，“如果这听起来好得令人难以置信，那很可能是真的。”“对于密码空间中的骗子来说，回报要高得多，因为这些都是无记名资产。”所以一旦你发送了它们，就没有办法再找回他们了。所以我认为这就是为什么越来越多的骗子不断涌入这个领域的原因。&lt;/p&gt;&lt;p&gt;致远：好的，让我们开始讨论如何建立一个更安全的钱包和资金管理系统。存储加密货币的主要机制是什么?是什么让你认为存在一些空白，以及你可以提供的一些补救措施会是安全方面的最佳选择?&lt;/p&gt;&lt;p&gt;JL：嗯，在过去的几年里，这些硬件钱包变得越来越流行，但是我们刚刚听到了很多恐怖的故事，即使对于设备本身而言它对各种类型的攻击都非常安全，只需要您拥有一台设备就可以创建单点故障。我们得出结论，即使这些高安全性设备也有一些可用性缺陷。因为如果您购买其中的一个，它要做的第一件事情就是向您显示这个12或24字符长度的恢复短语，然后它只是说，“把它保存在一个安全的地方。”&lt;/p&gt;&lt;p&gt;虽然这看起来很简单，但我认为，对于普通人来说，理解安全性的所有影响是一个巨大的挑战，就像良好的IT实践一样，保持12个单词安全以防各种不同的可能损失场景，当然损失并不一定意味着攻击。它只是意味着数据丢失，使事情无法恢复。&lt;/p&gt;&lt;p&gt;所以当我们开始四处询问时，我们发现，有很多人只是因为要负责存储他们的私钥而吓呆了。所以很多人只是把比特币交给了托管人, 因为他们有这样的想法，“如果我把所有的比特币都留在Coinbase或其他一些信誉良好的交易所，那么他们在那里可能更安全，因为整个团队都致力于这些公司正在管理的冷藏库的安全性。我认为这是一个非常符合逻辑的思路，对于某些故障场景，它可能更安全和更健壮。当然，这与整个系统的精神相违背，因为现在你们只是在创造更多的单点失败，而我们现在正在向这些比特币银行投入数十亿美元和十亿美元，这正在创造系统性风险。&lt;/p&gt;&lt;p&gt;因此，我们希望尝试对生态系统这一方面的这种中心化进行反击，使人们更容易成为他们自己的银行，并且仍然能够在晚上睡觉而不必花费大部分时间来实际思考和担心关于所有需要成为一家好银行的东西。&lt;/p&gt;&lt;p&gt;致远：到了中心化的地步 - 让我们谈谈中心化。这有点偏离主题，但我最近听说有一家开采世界上大部分比特币的公司，我认为如果他们愿意的话，他们至少可以控制足够的哈希计算能力进行51％的攻击。这有问题吗？这对比特币的健康有根本问题吗？&lt;/p&gt;&lt;p&gt;JL：实际测量它们的哈希计算能力很难，因为它们具有所有这些其他业务连接。现在，他们构建绝大多数具有哈希计算功能的机器，以控制特定机器。它变得有点模糊。但首先它并不好。我的意思是，这不是最佳选择。如果我们有四个，五个，六个或更多的公司实际生产这些ASIC，然后分布的更广泛，肯定会更好。&lt;/p&gt;&lt;p&gt;现在，当谈到51%的攻击时，最主要的事情是你进入了它背后的博弈论，我不担心某些公司本身会尝试做51%的攻击，因为这样的话他们将会搬起石头砸自己的脚。如果发生这种情况，他们会对比特币造成巨大的信心损失。比特币的价格会大幅下跌，而该公司拥有的比特币价值有多少亿美元，当然，他们未来可能的收入也会受到严重影响。&lt;/p&gt;&lt;p&gt;现在，更令人担忧的是，这是一家单一的公司，然后他们可以成为一个国家的目标，一些国家可能会进入并抓住他们的所有业务，然后说：“好的好吧，我们现在想尝试杀死比特币。因此，我们会把枪放在你的头上并迫使你有51％的人攻击网络。“当然，很难对这种情况实际上存在一定程度的风险，但我们不希望这样做，如果有的话，是可能的。&lt;/p&gt;&lt;p&gt;致远：如果发生这种情况，您可能会在头脑中运行这种情况几次？是否只有一个分叉，比特币会弄清楚如何处理它？&lt;/p&gt;&lt;p&gt;JL：是的，这是比特币的基本优势，就是我们拥有这个伟大的机器共识协议，它可以自动实现网络当前状态的共识，如果失败了，过去它已经失败了几次，那么在下面就有一层共识，这是人类的共识。因此，如果机器共识开始搞砸，如果网络停止运营，那么网络上的所有主要参与者以及真正关注和关心的任何人都会开始交谈并说：“这很糟糕。我们需要修理它。解决它的最佳方法是什么？&lt;/p&gt;&lt;p&gt;因此，例如，如果有51％的攻击正在进行中并且看起来没有理由相信它会停止，那么你会看到人们走到一起并说：“好的，为了阻止这种攻击，需要进行什么样的协议更改？“当然，极端的例子将是工作算法改变的证据，这将使所有这些ASIC基本上毫无价值。&lt;/p&gt;&lt;p&gt;致远：感谢您的描述。我偶尔会重新考虑一些基本原理，特别是您刚才描述的那种基本原理，这实际上是网络的一种非常强大的持久性保证，这使得它非常漂亮。 我对使用坚不可摧这个词犹豫不决，但很难想象会有破坏它的东西。 我的意思是，我还没有听说过，世界上最好的安全专家试着想办法摧毁这个东西或永远破坏它。 所以这是非常强大的耐用性保证。&lt;/p&gt;&lt;p&gt;JL：嗯，我的意思是，它可以追溯到密码朋克宣言和他们正在做的一些想法。 如果您阅读该宣言，我相信有一节说“我们相信，就像广泛分布的软件一样，不能停止。”&lt;/p&gt;&lt;p&gt;所以这个系统虽然确实具有可用于攻击的集中点，但它基本上是由对维护和改进系统足够感兴趣的所有人驱动的，而这些人是如此分布在世界各地，而这也就是为什么我在过去几年中一直在做这么多的全球旅行，因为他们的管辖范围非常多样化，并且由具有广泛多样性的个人组成。&lt;/p&gt;&lt;p&gt;所以这就是问题，就是没有足够的人或攻击者可以打倒所有帮助维护这个网络的人的大门。它太分散了。这就像试图攻击一个集群。&lt;/p&gt;&lt;p&gt;致远：我喜欢它。顺便说一下，我听到一些类似于网络的记录的片段。有没有像风扇之类的东西——或者有任何东西可能引起你终端的一些轻微的网络干扰，或者麦克风干扰？&lt;/p&gt;&lt;p&gt;JL：我已经关闭了VPN。你永远不知道VPN可能在做什么。&lt;/p&gt;&lt;p&gt;致远：回到比特币银行中心化的讨论，现在我们已经完全摆脱了全球比特币集中化的问题。 你已经描述了比特币银行模型的一些可靠性，因为它存在于像Coinbase这样的东西中。我们可以同意有一些中心化。它本质上是它自身成功的牺牲品。&lt;/p&gt;&lt;p&gt;你看到了一个机会。解决办法是什么?怎样才能建立一个像硬币库一样的实体呢?在这个实体中，您拥有某种意义上与这个大型组织的声誉相关的安全保证，但是您有没有大型组织中固有的失败场景?&lt;/p&gt;&lt;p&gt;JL：那么，这就是为什么我对去中心化交换空间的发展如此兴奋的原因之一。因此，像一些去中心化的交易所。但这些基本上是创建自己的点对点网络并创建订单簿，并允许您找到与您直接交易的其他人的软件。&lt;/p&gt;&lt;p&gt;因此，这再一次意味着您自己承担更多的风险和责任，因为您必须管理私钥并运行软件。但这意味着我们不再创造具有巨大价值的蜜罐，攻击者只需要进入一扇门就可以清理大量资金并伤害很多人。&lt;/p&gt;&lt;p&gt;因此，通过进一步分配这种价值，再次像创建攻击者必须通过的更多门，那么它正在降低系统中的系统性风险。但是当然，这个软件有点笨拙。&lt;/p&gt;&lt;p&gt;致远：所以你现在特别关注的问题是长期储存价值。&lt;/p&gt;&lt;p&gt;JL：正确。&lt;/p&gt;&lt;p&gt;致远：好吧。你能把你解决这个问题的想法和我们到目前为止讨论过的解决方案对比一下吗?&lt;/p&gt;&lt;p&gt;JL：好吧，如果你想承担责任并成为自己的银行，就像在加密领域一样，那么你需要承担很多学习才能正确地做到这一点。 我们正在提供更多的精品体验，帮助人们自己设置和维护钱包，但没有我们实际上也可以在他们的保险库中控制五个密钥中的多个密钥。&lt;/p&gt;&lt;p&gt;致远：好吧。您正在构建的长期存储软件的开发进度如何?&lt;/p&gt;&lt;p&gt;JL：在比特币方面，它已经启动并运行了，我们已经为许多客户提供了服务，当然，每次我们在使用某样东西时，我们都会学到更多。我们发现了一些小的可能需要改进的东西，我们真正关注的是如何在板上进行扩展，然后扩展到支持所有其他流行的加密资产，我们的客户要求这些资产具有相同的安全级别。&lt;/p&gt;&lt;p&gt;致远：有哪些设计决策和实现决策的例子是您在与客户交互的过程中不断调整的?&lt;/p&gt;&lt;p&gt;JL：大多数情况都将归结为用最简单的方式来描述他们需要经历的一系列行动。 因此，我们试图尽可能地推动技术复杂性，但有时客户可能遇到需要给他们警告的边缘情况，或给他们一个选择。&lt;/p&gt;&lt;p&gt;因此，与其说他们的钱包里满是灰尘，不如说“哦，你有太多的UTXO，你试图发送一个值，这是不可能计算的。”弄清楚什么样的信息更容易让人读懂，这样他们就能更容易做出决定。”给他们一些选项，比如，&quot;如果你想发送这么大的转账金额，你可能需要等这么多小时才能完成交易&quot;之类的。&lt;/p&gt;&lt;p&gt;致远：顺便说一下，当你说一个满是灰尘的钱包时，你指的是比特币的一部分，它们非常低，超出了任何在现实世界中有价值的东西的面值。&lt;/p&gt;&lt;p&gt;JL：是。因此，当您处理钱包时，您可以获得技术和经济方面的优势。实际上，我在两年前写了一篇文章，称为“未使用交易输出选择的挑战”，而这只是用户可以进入的所有这些边缘情况，因为他们不了解整个引擎盖上发生了什么，，他们基本上可以用很多UTXO来装满钱包。在某些情况下，如果收费市场达到一定程度，你实际上必须建立一些我们称之为经济上不可靠的交易输出的逻辑，然后你需要计算，如何引导用户朝着正确的方向帮助清理他们的钱包，而不必让他们暴露在钱包里面实际发生的所有复杂情况。&lt;/p&gt;&lt;p&gt;致远：因此，既然您正在构建钱包管理软件，那么您需要做出这些权衡，以便您可以轻松地为某人提供与该交易相关的交易与保持其安全性，例如,如果你通过两因素身份验证的手机供应商暴露用户一些漏洞,让他们容易受到手机攻击。这样可能比更严格的安全协议(比如谷歌authenticator)更方便。这不是一个很好的例子，因为谷歌authenticator与通过基于手机的事务提供程序一样方便，但是我认为我的观点是正确的。您已经在安全性和方便性之间做出了权衡，前面已经讨论过了。告诉我你想在哪些方面进行权衡，或者你在安全和便利性之间做了哪些具体的权衡。&lt;/p&gt;&lt;p&gt;JL：好吧，我们肯定会优先考虑安全性，因为如果你在安全方面失败了，就不会再回头了。我们拥有的一般口头禅是，用户在一段时间内失去对钱包的访问权限甚至比攻击者几毫秒才能获得访问权限更好。&lt;/p&gt;&lt;p&gt;所以肯定在一些情况下,用户可能访问安全警报,导致他们的钱包变得不可用一会儿，或者他们可能会错放一些硬件设备，然后需要辅助恢复，实际上,这一过程可能会需要几个小时或几天。&lt;/p&gt;&lt;p&gt;但是，当我们在谈论保险库类型的产品时，我们认为权衡利弊，这些产品可能是这个人的生活储蓄，通常你不需要在很短的时间内获得生活储蓄。所以这是一个可接受的不便程度。&lt;/p&gt;&lt;p&gt;致远：我想重新讨论SPV和全节点。我不确定这是否与你正在构建的产品有关。通过SPV验证或构建钱包的决定是否会影响您的客户，还是会影响您，或者您认为这只是一个完全不相关的问题?&lt;/p&gt;&lt;p&gt;JL：这一切都是相关的。因此，我认为我们的一个主要问题是帮助最大化用户主权和安全。到目前为止，我们主要讨论的是安全性，但主权方面很重要，当我们讨论运行一个完整的节点时，这一点肯定会出现，确认收到的钱实际上遵守了您所同意的网络规则。它还可以归结为尽量减少用户和我们自己的服务之间的信任。&lt;/p&gt;&lt;p&gt;所以现在，通过任何措施，本身都是相当中心化的，但我们将继续努力将尽可能多的安全性和信任推到最后，以便客户自己执行更多的验证和不依赖于服务器响应查询而提供给他们的任何数据。所以这更像是一个中长期愿景，但它绝对是相关的。&lt;/p&gt;&lt;p&gt;致远：一般来说，对于那些管理自己钱包的人来说，或者对于管理自己的货币，他们有不同于的解决方案，他们应该如何思考SPV和全节点?为什么你对使用SPV的成本有一些强烈的看法?&lt;/p&gt;&lt;p&gt;JL：因此，使用简化支付验证的权衡是你假设一个具有最大哈希计算能力的区块链是正确的区块链，并且很多人对这个假设很好，并且它在绝大多数情况下运作良好。但是，矿商可以做很多事情，例如，开始创建一个区块链，它可以做一些非常奇怪的事情，但是仍然具有最大的哈希计算能力。&lt;/p&gt;&lt;p&gt;我不喜欢这样做的一个原因是，我认为我们不应该信任矿工。他们有一项工作，基本上就是为交易加盖时间戳，作为全球共识的一部分，但我认为，我们其他人有责任提供制衡，确保我们不相信他们在做这项工作。我们应该验证他们做的所有工作。&lt;/p&gt;&lt;p&gt;还有一些主要的隐私问题我相信Matt Corallo和Jonas Nick已经证明了SPV使用的bloom过滤机制，它们最初被认为是相当隐私的。但多年来，我们发现它们实际上不是。它们在隐私方面很糟糕，对于那些在网络上运行节点的人来说，如果他们想通过检查这些bloom过滤器来确定哪些地址是属于您的，这是非常容易的。&lt;/p&gt;&lt;p&gt;再一次，归结到这样的方便。在桌面或移动设备上启动钱包非常容易，SPV在客户端消耗很少的资源，并且与网络同步非常 快，但是您正在以某种方式权衡这些隐私和安全性。因此，这就是为什么有一些改进建议，用于更好的客户端过滤，其中认为它是Olaoluwa，roasbeef，具有他建议的机制，其中客户端将基本上下载数据，但在本地过滤数据，以便没有人真正知道什么数据你对此很感兴趣，从这个角度来看，这会给你更多的隐私。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54484329</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>什么是向量空间-1</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54483959.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54483959&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在我们实际生活中，许多量可以用一个数值表达，例如温度、长度、价格等。但是在科学计算与测量中，也有许多量需要用一组数据来表达，例如个人信息包括：姓名、身份证号码、年龄、工资等等。还有三维空间中的一个点，用三个坐标值来表示。为了形象说明向量空间，我们用下面的例子来说明。&lt;/p&gt;&lt;p&gt;假设一个超市里一共有100件商品，那么这100件商品的每月库存量可以用一组数字表示（&lt;i&gt;a&lt;/i&gt;1，&lt;i&gt; a&lt;/i&gt;2，…，&lt;i&gt;a&lt;/i&gt;100）。通常我们称这样的一组数字为向量。当超市进货的时候，库存向量加上进货的向量就是当前的库存量。当超市卖出货物时，就要从当前库存向量中减去出货向量。所以向量的加法减法就是对应于向量中每个元素的加法和减法。如果经理需要库存量加一倍，则用2乘以库存向量中的每个元素即可。这说明一个实数&lt;i&gt;a&lt;/i&gt;与一个向量相乘，相当于实数&lt;i&gt;a&lt;/i&gt;与向量中的每个元素相乘，这种乘法我们称为标量乘。有了向量的加法和标量乘法足以表示所有关于库存量的计算。&lt;/p&gt;&lt;p&gt;还有实数上的三维空间例子。三维空间中的每个点表示成由三个坐标组成的向量（&lt;i&gt;a&lt;/i&gt;，&lt;i&gt;b&lt;/i&gt;，&lt;i&gt;c&lt;/i&gt;）。如果三维空间中的另外一个点向量（&lt;i&gt;x&lt;/i&gt;，&lt;i&gt;y&lt;/i&gt;，&lt;i&gt;z&lt;/i&gt;）与点向量（&lt;i&gt;a&lt;/i&gt;，&lt;i&gt;b&lt;/i&gt;，&lt;i&gt;c&lt;/i&gt;）的方向相同，则点向量（&lt;i&gt;x&lt;/i&gt;，&lt;i&gt;y&lt;/i&gt;，&lt;i&gt;z&lt;/i&gt;）可以用点向量（&lt;i&gt;a&lt;/i&gt;，&lt;i&gt;b&lt;/i&gt;，&lt;i&gt;c&lt;/i&gt;）的标量乘法表示，即存在&lt;i&gt;k&lt;/i&gt;∈，使得（&lt;i&gt;x&lt;/i&gt;，&lt;i&gt;y&lt;/i&gt;，&lt;i&gt;z&lt;/i&gt;）= &lt;i&gt;k&lt;/i&gt;（&lt;i&gt;a&lt;/i&gt;，&lt;i&gt;b&lt;/i&gt;，&lt;i&gt;c&lt;/i&gt;）。如果向量（&lt;i&gt;x&lt;/i&gt;，&lt;i&gt;y&lt;/i&gt;，&lt;i&gt;z&lt;/i&gt;）与向量（&lt;i&gt;a&lt;/i&gt;，&lt;i&gt;b&lt;/i&gt;，&lt;i&gt;c&lt;/i&gt;）不在一个方向上，则存在另外一个向量（&lt;i&gt;e&lt;/i&gt;，&lt;i&gt;f&lt;/i&gt;，&lt;i&gt;g&lt;/i&gt;），使得（&lt;i&gt;x&lt;/i&gt;，&lt;i&gt;y&lt;/i&gt;，&lt;i&gt;z&lt;/i&gt;）=（&lt;i&gt;a&lt;/i&gt;，&lt;i&gt;b&lt;/i&gt;，&lt;i&gt;c&lt;/i&gt;）+（&lt;i&gt;e&lt;/i&gt;，&lt;i&gt;f&lt;/i&gt;，&lt;i&gt;g&lt;/i&gt;）。因此实数上的三维空间中的任何一点，可以通过已知向量做加法和标量乘法计算表示出来。因此，向量空间有两个操作，加法和标量乘法。形式化定义如下。是实数集。我们考虑&lt;/p&gt;&lt;p&gt;里的向量空间，其中&lt;i&gt;m&lt;/i&gt;是一个正整数。向量空间定义如下：&lt;/p&gt;&lt;p&gt;&lt;b&gt;向量空间&lt;/b&gt;：向量空间&lt;b&gt;V&lt;/b&gt;是的子集，且对于所有&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2∈&lt;b&gt;V&lt;/b&gt;，&lt;i&gt;a&lt;/i&gt;1，&lt;i&gt;a&lt;/i&gt;2∈满足如下属性&lt;i&gt;a&lt;/i&gt;1&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1+&lt;i&gt; a&lt;/i&gt;2&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2∈&lt;b&gt;V&lt;/b&gt;。也就是说向量空间&lt;b&gt;V&lt;/b&gt;对于加法和与中元素的标量乘法是封闭的。因此，向量空间&lt;b&gt;V&lt;/b&gt;与加法就可以形成一个阿贝尔群。&lt;/p&gt;&lt;p&gt;&lt;b&gt;线性组合&lt;/b&gt;：令&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;∈&lt;b&gt;V&lt;/b&gt;，向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;的线性组合是具有如下形式的任意一个向量&lt;b&gt;w &lt;/b&gt;=&lt;i&gt; a&lt;/i&gt;1&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1+&lt;i&gt; a&lt;/i&gt;2&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2+…+&lt;i&gt; ak&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;∈&lt;b&gt;V&lt;/b&gt;，其中&lt;i&gt;a&lt;/i&gt;1，…，&lt;i&gt;a&lt;/i&gt;2∈。所有&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;k线性组合的集合{&lt;i&gt; a&lt;/i&gt;1&lt;i&gt;v&lt;/i&gt;1+&lt;i&gt; a&lt;/i&gt;2&lt;i&gt;v&lt;/i&gt;2+…+&lt;i&gt; akvk&lt;/i&gt;：&lt;i&gt;a&lt;/i&gt;1，…，&lt;i&gt;a&lt;/i&gt;2∈}称为由{&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;}&lt;b&gt;张成的&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;线性无关&lt;/b&gt;：一组向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;是线性无关的，当且仅当&lt;i&gt;a&lt;/i&gt;1=&lt;i&gt; a&lt;/i&gt;2 =，…，= &lt;i&gt;ak&lt;/i&gt; = 0时才有下式成立&lt;i&gt;a&lt;/i&gt;1&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1+&lt;i&gt; a&lt;/i&gt;2&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2+…+&lt;i&gt; ak&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt; = 0。&lt;/p&gt;&lt;p&gt;&lt;b&gt;线性相关&lt;/b&gt;：一组向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;是线性相关的，当且仅当&lt;i&gt;ai&lt;/i&gt;（&lt;i&gt;i&lt;/i&gt;=0，…，&lt;i&gt;k&lt;/i&gt;）中至少有一个不等于0时有下式成立&lt;i&gt;a&lt;/i&gt;1&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1+&lt;i&gt; a&lt;/i&gt;2&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2+…+&lt;i&gt; ak&lt;b&gt;v&lt;/b&gt;k &lt;/i&gt;= 0。&lt;/p&gt;&lt;p&gt;&lt;b&gt;基&lt;/b&gt;：如果向量空间&lt;b&gt;V&lt;/b&gt;是由一组线性无关的向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;张成的，则称&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;是&lt;b&gt;V&lt;/b&gt;的一个基。&lt;/p&gt;&lt;p&gt;这也就意味着，对于每个向量&lt;b&gt;w&lt;/b&gt;∈&lt;b&gt;V&lt;/b&gt;，存在唯一的&lt;i&gt;a&lt;/i&gt;1，…，&lt;i&gt;a&lt;/i&gt;2∈，使得&lt;b&gt;w&lt;/b&gt;可以表示成&lt;/p&gt;&lt;p&gt;&lt;b&gt;w &lt;/b&gt;=&lt;i&gt; a&lt;/i&gt;1&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1+&lt;i&gt; a&lt;/i&gt;2&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2+…+&lt;i&gt; ak&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;∈&lt;b&gt;V&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;向量空间的维数&lt;/b&gt;：令&lt;b&gt;V&lt;/b&gt;是向量空间，&lt;b&gt;V&lt;/b&gt;的基中向量的个数称为向量空间&lt;b&gt;V&lt;/b&gt;的维数。例如如果&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;1、&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;2，…，&lt;i&gt;&lt;b&gt;v&lt;/b&gt;k&lt;/i&gt;是&lt;b&gt;V&lt;/b&gt;的一个基，则&lt;b&gt;V&lt;/b&gt;的维数是&lt;i&gt;k&lt;/i&gt;。而向量&lt;i&gt;&lt;b&gt;v&lt;/b&gt;i&lt;/i&gt;（&lt;i&gt;i&lt;/i&gt;=1,…，&lt;i&gt;k&lt;/i&gt;）的维数是&lt;i&gt;m&lt;/i&gt;。注意区分向量空间的维数和向量的维数。&lt;/p&gt;&lt;p&gt;&lt;b&gt;内积&lt;/b&gt;：令&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;，&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;∈&lt;b&gt;V&lt;/b&gt;，且有&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt; = (&lt;i&gt;x&lt;/i&gt;1，…，&lt;i&gt;xm&lt;/i&gt; )，&lt;b&gt;&lt;i&gt;w &lt;/i&gt;&lt;/b&gt;= (&lt;i&gt;y&lt;/i&gt;1，…，&lt;i&gt;ym&lt;/i&gt; )。向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;和&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;的内积定义为 &lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;vw&lt;/i&gt;&lt;/b&gt;=&amp;lt;&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;&amp;gt; = &lt;i&gt;x&lt;/i&gt;1&lt;i&gt; y&lt;/i&gt;1+…+&lt;i&gt; xm ym&lt;/i&gt;。&lt;b&gt;&lt;i&gt;vw&lt;/i&gt;&lt;/b&gt;和&amp;lt;&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;&amp;gt;这两种表达方式都可以，我们两者混用。在全同态加密的部分，使用后者，因为目前全同态加密的论文都是采用的后者表示。可见向量的内积并不是一个向量，而是一个数值。如果&amp;lt;&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;&amp;gt; =0，则称&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;与&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;的是正交的（即这两个向量是垂直的）。即如果两个向量的角度是90度则它们的内积为0。那么如果相同的两个向量做内积，即&lt;b&gt;&lt;i&gt;vv&lt;/i&gt;&lt;/b&gt;，结果是什么呢？有什么意义呢？答案是其结果为向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;的长度的平方。由此引出了向量长度的概念。对于向量的长度，一般用欧几里得范数（&lt;i&gt;Euclidean norm&lt;/i&gt;）度量，也称为&lt;i&gt;l&lt;/i&gt;2范数，定义为。还可以用其它形式的范数，例如&lt;i&gt;l&lt;/i&gt;1范数，定义为。还有&lt;i&gt;l&lt;/i&gt;∞范数，定义为。范数的概念在格上全同态加密中衡量密文中噪音的大小很重要。有一种向量比较特殊，它的长度是1。我们称长度为1的向量是&lt;b&gt;单位向量&lt;/b&gt;(&lt;i&gt;unit vector&lt;/i&gt;)。即&lt;b&gt;&lt;i&gt;vv &lt;/i&gt;&lt;/b&gt;=1。对于任意一个非零向量&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;，其单位向量是， 该单位向量与&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt; 的方向一致。前面我们知道当&lt;b&gt;&lt;i&gt;vw &lt;/i&gt;&lt;/b&gt;=0时，&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;与&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;是垂直的。那么当&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;不等于0的时候，有一个有趣的现象，即&lt;b&gt;&lt;i&gt;vw&lt;/i&gt;&lt;/b&gt;的符号（正或负）将告诉我们&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;与&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;之间的角度是大于90度还是小于90度。当&lt;b&gt;&lt;i&gt;vw &lt;/i&gt;&lt;/b&gt;&amp;gt; 0时，&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;与&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;之间的角度是小于90度。当&lt;b&gt;&lt;i&gt;vw &lt;/i&gt;&lt;/b&gt;&amp;lt; 0时，&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;与&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;之间的角度是大于90度。另外，若&lt;b&gt;&lt;i&gt;a&lt;/i&gt;&lt;/b&gt;，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;是两个单位向量，则&lt;b&gt;&lt;i&gt;ab &lt;/i&gt;&lt;/b&gt;= 且|&lt;b&gt;&lt;i&gt;ab&lt;/i&gt;&lt;/b&gt; | ≤ 1。因此对于&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;，&lt;b&gt;&lt;i&gt;w&lt;/i&gt;&lt;/b&gt;两个非零向量，其对应的单位向量是 和，得到如下两个重要性质:&lt;/p&gt;&lt;p&gt;&lt;b&gt;性质1&lt;/b&gt; &lt;b&gt;&lt;i&gt;vw &lt;/i&gt;&lt;/b&gt;= &lt;/p&gt;&lt;p&gt;&lt;b&gt;性质2&lt;/b&gt;（柯西-斯瓦兹（&lt;i&gt;Cauchy–Schwarz&lt;/i&gt;）不等式）| &lt;b&gt;&lt;i&gt;vw |&lt;/i&gt;&lt;/b&gt; ≤ 。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54483959</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
<item>
<title>格密码理论基础-1</title>
<link>https://henix.github.io/feeds/zhuanlan.fhe-blockchain/2019-01-11-54483595.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/54483595&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;前面我们介绍了实数集上向量空间的概念。在向量空间&lt;b&gt;V&lt;/b&gt;中，任意两个向量可以做加法运算，任意一个向量可以与一个实数做标量乘法运算。格的概念与向量空间的概念非常相似，就是多了一个限制，即格上只允许格中的向量与整数做标量乘法运算。这一小小的限制，导致了许多有趣的问题与结果。&lt;/p&gt;&lt;p&gt;&lt;b&gt;格&lt;/b&gt;(lattices)  给出一组线性无关的向量&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n∈ &lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c0112d80a695d819f1d9c3cf512e0b48_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;42&quot; data-rawheight=&quot;30&quot; class=&quot;content_image&quot; width=&quot;42&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c0112d80a695d819f1d9c3cf512e0b48_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;42&quot; data-rawheight=&quot;30&quot; class=&quot;content_image lazy&quot; width=&quot;42&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-c0112d80a695d819f1d9c3cf512e0b48_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;，则格&lt;i&gt;L&lt;/i&gt;可以由&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;1，&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;2，…，&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;n的整系数线性组合生成，定义为：&lt;/p&gt;&lt;p&gt;&lt;i&gt;L&lt;/i&gt; = {&lt;i&gt;z&lt;/i&gt;1&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;1 + &lt;i&gt;z&lt;/i&gt;2&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;2+，…，+ &lt;i&gt;z&lt;/i&gt;n&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;n ：&lt;i&gt;z&lt;/i&gt;1，&lt;i&gt;z&lt;/i&gt;2 ，…，&lt;i&gt;z&lt;/i&gt;n∈ &lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;22&quot; data-rawheight=&quot;34&quot; class=&quot;content_image&quot; width=&quot;22&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;22&quot; data-rawheight=&quot;34&quot; class=&quot;content_image lazy&quot; width=&quot;22&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt; }。&lt;/p&gt;&lt;p&gt;称&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n是格&lt;i&gt;L&lt;/i&gt;的基。注意&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n是上的一组线性无关向量，而不是上的。&lt;/p&gt;&lt;p&gt;从格的定义可以看出，与向量空间的定义非常类似，只不过将线性组合的系数限定为整数。因此，这导致了格在几何上是由一些离散而呈周期性结构的一些点构成，这些离散之间的格点之间是有距离的，也许距离产生美，导致了许多格的有趣的几何性质。一个格的几何形状如下图2.1。图2.1是一个二维空间上的格，以及可能的两个基。&lt;/p&gt;&lt;p&gt;在上述格的定义中，称&lt;i&gt;n&lt;/i&gt;为格的秩，&lt;i&gt;m&lt;/i&gt;为格的维数。因为格是由线性无关的向量&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;1，&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;2，…，&lt;i&gt;&lt;b&gt;b&lt;/b&gt;&lt;/i&gt;n生成的，根据秩的定义格的秩为&lt;i&gt;n&lt;/i&gt;。一般情况下&lt;i&gt;n&lt;/i&gt; ≤ &lt;i&gt;m&lt;/i&gt;，当&lt;i&gt;n&lt;/i&gt; = &lt;i&gt;m&lt;/i&gt; 时，称该格是一个满秩格。 通常我们只考虑满秩格的情况，许多结果都可以推广到非满秩的情况。&lt;/p&gt;&lt;p&gt;按照习惯还可以把基表示成矩阵的形式，该矩阵用&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;表示，&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;的每一个列向量就是格的基&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n。本博士论文中，所有的向量都默认为列向量，即&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;= (&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n )∈  &lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2ca0dccf12eed7d1ff52ac13ca6bd2da_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;57&quot; data-rawheight=&quot;24&quot; class=&quot;content_image&quot; width=&quot;57&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2ca0dccf12eed7d1ff52ac13ca6bd2da_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;57&quot; data-rawheight=&quot;24&quot; class=&quot;content_image lazy&quot; width=&quot;57&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-2ca0dccf12eed7d1ff52ac13ca6bd2da_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;。格定义为&lt;/p&gt;&lt;p&gt;&lt;i&gt;                                 L&lt;/i&gt; = {&lt;b&gt;&lt;i&gt;Bz&lt;/i&gt;|&lt;/b&gt; &lt;b&gt;&lt;i&gt;z&lt;/i&gt;∈&lt;/b&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0e5120eb81f18b34fea7facc4aaaf1a5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;38&quot; data-rawheight=&quot;24&quot; class=&quot;content_image&quot; width=&quot;38&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0e5120eb81f18b34fea7facc4aaaf1a5_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;38&quot; data-rawheight=&quot;24&quot; class=&quot;content_image lazy&quot; width=&quot;38&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-0e5120eb81f18b34fea7facc4aaaf1a5_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;}。&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e642191cec72ca04e25fc5db53f138e0_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;211&quot; data-rawheight=&quot;118&quot; class=&quot;content_image&quot; width=&quot;211&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e642191cec72ca04e25fc5db53f138e0_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;211&quot; data-rawheight=&quot;118&quot; class=&quot;content_image lazy&quot; width=&quot;211&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-e642191cec72ca04e25fc5db53f138e0_b.jpg&quot;&gt;&lt;figcaption&gt;图2.1 格的几何形状&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;格基之间的关系&lt;/b&gt; 任何一个格都有许多基，也就是说一个格可以由不同的基生成。那么自然就会想到，这些生成同一个格的基之间有什么关系呢？答案是单位模矩阵(&lt;i&gt;unimodular&lt;/i&gt;)将这些不同的基联系起来。所谓单位模矩阵就是行列式值的绝对值为1的矩阵。对于格&lt;i&gt;L&lt;/i&gt;的两个基&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;2∈，存在一个单位模矩阵&lt;b&gt;&lt;i&gt;U&lt;/i&gt;&lt;/b&gt;∈&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2ca0dccf12eed7d1ff52ac13ca6bd2da_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;57&quot; data-rawheight=&quot;24&quot; class=&quot;content_image&quot; width=&quot;57&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2ca0dccf12eed7d1ff52ac13ca6bd2da_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;57&quot; data-rawheight=&quot;24&quot; class=&quot;content_image lazy&quot; width=&quot;57&quot; data-actualsrc=&quot;https://pic3.zhimg.com/v2-2ca0dccf12eed7d1ff52ac13ca6bd2da_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;，使得&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;1=&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;2&lt;b&gt;&lt;i&gt;U&lt;/i&gt;&lt;/b&gt;。这是格基之间的代数性质。&lt;/p&gt;&lt;p&gt;格基之间还有几何性质。这需要引入一个非常重要的概念“基本平行体(&lt;i&gt;Fundamental Parallelepiped&lt;/i&gt;)”。&lt;/p&gt;&lt;p&gt;给出一组线性无关的向量&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n∈&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-be9b77a2bf43409c0627e0c2b59e6728_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;36&quot; data-rawheight=&quot;26&quot; class=&quot;content_image&quot; width=&quot;36&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-be9b77a2bf43409c0627e0c2b59e6728_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;36&quot; data-rawheight=&quot;26&quot; class=&quot;content_image lazy&quot; width=&quot;36&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-be9b77a2bf43409c0627e0c2b59e6728_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;，基本平行体定义如下：&lt;/p&gt;&lt;p&gt;P(&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2，…，&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n) = {&lt;i&gt; z&lt;/i&gt;1&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;1 + &lt;i&gt;z&lt;/i&gt;2&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;2+，…，+ &lt;i&gt;z&lt;/i&gt;n&lt;b&gt;&lt;i&gt;b&lt;/i&gt;&lt;/b&gt;n ：&lt;i&gt;z&lt;/i&gt;1，&lt;i&gt;z&lt;/i&gt;2 ，…，&lt;i&gt;z&lt;/i&gt;n∈&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;22&quot; data-rawheight=&quot;34&quot; class=&quot;content_image&quot; width=&quot;22&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;22&quot; data-rawheight=&quot;34&quot; class=&quot;content_image lazy&quot; width=&quot;22&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;且0≤&lt;i&gt;zi&lt;/i&gt;&amp;lt;1}。&lt;/p&gt;&lt;p&gt;从定义可以看出，基本平行体是由格的基向量围绕成的一个半闭半开的区域，如图2.2所示灰色的区域。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-69e1df96e18604a2b6fb0b4cadaaece0_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;190&quot; data-rawheight=&quot;118&quot; class=&quot;content_image&quot; width=&quot;190&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-69e1df96e18604a2b6fb0b4cadaaece0_b.jpg&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;190&quot; data-rawheight=&quot;118&quot; class=&quot;content_image lazy&quot; width=&quot;190&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-69e1df96e18604a2b6fb0b4cadaaece0_b.jpg&quot;&gt;&lt;figcaption&gt;图2.2 格的基本平行体示例&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;最有趣的是基本平行体中除了含有0这个点外，不含有任何其他格点。因此，如果一些向量所围成的基本平行体中含有其他格点，则这些向量不是格的基。&lt;/p&gt;&lt;p&gt;由于同一格可以由不同的基生成，因此不同基生成的同一格的基本平行体的形状是不一样的。那么这些同一格的不同基本平行体之间有什么关系呢？&lt;/p&gt;&lt;p&gt;&lt;b&gt;格的行列式&lt;/b&gt; 令&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;是格&lt;i&gt;L&lt;/i&gt;的基矩阵，则格&lt;i&gt;L&lt;/i&gt;的行列式定义为det(&lt;i&gt;L&lt;/i&gt;)=|det(&lt;b&gt;&lt;i&gt;B&lt;/i&gt;&lt;/b&gt;)|。尽管格&lt;i&gt;L&lt;/i&gt;可以有不同的基，但是对应的det(&lt;i&gt;L&lt;/i&gt;)值却是相同。从几何上来说，det(&lt;i&gt;L&lt;/i&gt;)代表格&lt;i&gt;L&lt;/i&gt;的基本平行体的体积，因此格&lt;i&gt;L&lt;/i&gt;的不同的基其对应的基本平行体的体积是相等的。所以det(&lt;i&gt;L&lt;/i&gt;)是独立于所选择的基，是格&lt;i&gt;L&lt;/i&gt;的不变量。直觉上来说，det(&lt;i&gt;L&lt;/i&gt;)的值与格&lt;i&gt;L&lt;/i&gt;中点的密度成反比，即det(&lt;i&gt;L&lt;/i&gt;)的值越大，格&lt;i&gt;L&lt;/i&gt;中点越稀疏。&lt;/p&gt;&lt;p&gt;&lt;b&gt;对偶格&lt;/b&gt; 格&lt;i&gt;L&lt;/i&gt;的对偶格记为&lt;i&gt;L&lt;/i&gt;*。对于&lt;i&gt;L&lt;/i&gt;中的每一个点&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;，&lt;i&gt;L&lt;/i&gt;*由所有满足条件&amp;lt;&lt;b&gt;&lt;i&gt;v&lt;/i&gt;&lt;/b&gt;,&lt;b&gt;&lt;i&gt; x&lt;/i&gt;&lt;/b&gt; &amp;gt;∈&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;22&quot; data-rawheight=&quot;34&quot; class=&quot;content_image&quot; width=&quot;22&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;22&quot; data-rawheight=&quot;34&quot; class=&quot;content_image lazy&quot; width=&quot;22&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-8e8228b2aa1365664460c4ff4af2f091_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;的向量&lt;b&gt;&lt;i&gt;x&lt;/i&gt;&lt;/b&gt;∈&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-be9b77a2bf43409c0627e0c2b59e6728_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;36&quot; data-rawheight=&quot;26&quot; class=&quot;content_image&quot; width=&quot;36&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-be9b77a2bf43409c0627e0c2b59e6728_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;36&quot; data-rawheight=&quot;26&quot; class=&quot;content_image lazy&quot; width=&quot;36&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-be9b77a2bf43409c0627e0c2b59e6728_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;构成。对偶格的对偶格还是原来的格，即（&lt;i&gt;L&lt;/i&gt;*）*=&lt;i&gt;L。&lt;/i&gt;还有性质：det(&lt;i&gt;L&lt;/i&gt;*)=1/ det(&lt;i&gt;L&lt;/i&gt;)。对偶格与原来的格可以看成是一种互逆的关系。尽管对偶格的解释不是很直观，但是在格密码学中非常有用。&lt;/p&gt;&lt;p&gt;&lt;b&gt;格的连续最小值&lt;/b&gt; 由于格上的点是离散的，所以除了零向量外肯定存在一个非零向量，其长度是最短的。格中最短向量的长度作为格的一个基本参数，称之为格的第一连续最小值，记为&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;65&quot; data-rawheight=&quot;42&quot; class=&quot;content_image&quot; width=&quot;65&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;65&quot; data-rawheight=&quot;42&quot; class=&quot;content_image lazy&quot; width=&quot;65&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;。注意这里的长度可以用任何范数来衡量，但是通常用欧几里范数。最短向量不是唯一的，如果&lt;b&gt;&lt;i&gt;x&lt;/i&gt;&lt;/b&gt;是最短向量，则-&lt;b&gt;&lt;i&gt;x&lt;/i&gt;&lt;/b&gt;也是最短向量。格上最短向量的长度一直是人们关心的问题，它依赖于格的维数和det(&lt;i&gt;L&lt;/i&gt;)。最短向量的长度有上界也有下界，根据闵可夫斯基（Minkowski）第一理论，最短向量的长度上界为&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;65&quot; data-rawheight=&quot;42&quot; class=&quot;content_image&quot; width=&quot;65&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;65&quot; data-rawheight=&quot;42&quot; class=&quot;content_image lazy&quot; width=&quot;65&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;≤ &lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6ffd7ea54b2e08081102f2af0b1c5bf8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;161&quot; data-rawheight=&quot;44&quot; class=&quot;content_image&quot; width=&quot;161&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6ffd7ea54b2e08081102f2af0b1c5bf8_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;161&quot; data-rawheight=&quot;44&quot; class=&quot;content_image lazy&quot; width=&quot;161&quot; data-actualsrc=&quot;https://pic1.zhimg.com/v2-6ffd7ea54b2e08081102f2af0b1c5bf8_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;。最短向量的长度下界为&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;65&quot; data-rawheight=&quot;42&quot; class=&quot;content_image&quot; width=&quot;65&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;65&quot; data-rawheight=&quot;42&quot; class=&quot;content_image lazy&quot; width=&quot;65&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2f07bd48dcb1339017625ea72a077f95_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;≥ &lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-060222a7addf498281461535ccbdfde3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;104&quot; data-rawheight=&quot;50&quot; class=&quot;content_image&quot; width=&quot;104&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-060222a7addf498281461535ccbdfde3_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;104&quot; data-rawheight=&quot;50&quot; class=&quot;content_image lazy&quot; width=&quot;104&quot; data-actualsrc=&quot;https://pic4.zhimg.com/v2-060222a7addf498281461535ccbdfde3_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;，其中是Gram-Schmidt正交化生成的基。充分说明格上的点之间不是任意靠近的。&lt;/p&gt;&lt;p&gt;除了第一最小值外，还有第二最小值、第三最小值、……等。但是由于第一最小值的倍数可能是第二最小值，因此为了去除这种情形，用线性无关性对其进行限制。第&lt;i&gt;i&lt;/i&gt;个最小值的形式化定义为&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure&gt;&lt;noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2bf5ddf04b3bbf1c9b685ac1d8a3be25_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;423&quot; data-rawheight=&quot;36&quot; class=&quot;origin_image zh-lightbox-thumb&quot; width=&quot;423&quot; data-original=&quot;https://pic2.zhimg.com/v2-2bf5ddf04b3bbf1c9b685ac1d8a3be25_r.jpg&quot;&gt;&lt;/noscript&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2bf5ddf04b3bbf1c9b685ac1d8a3be25_b.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;423&quot; data-rawheight=&quot;36&quot; class=&quot;origin_image zh-lightbox-thumb lazy&quot; width=&quot;423&quot; data-original=&quot;https://pic2.zhimg.com/v2-2bf5ddf04b3bbf1c9b685ac1d8a3be25_r.jpg&quot; data-actualsrc=&quot;https://pic2.zhimg.com/v2-2bf5ddf04b3bbf1c9b685ac1d8a3be25_b.jpg&quot;&gt;&lt;/figure&gt;&lt;p&gt;：&lt;b&gt;&lt;i&gt;x&lt;/i&gt;&lt;/b&gt;1，…，&lt;b&gt;&lt;i&gt;x&lt;/i&gt;&lt;/b&gt;n是格&lt;i&gt;L&lt;/i&gt;上的非零向量且是线性无关的}。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;===============================================================&lt;br&gt;&lt;b&gt;文章首发在微信公众号：btc201800&lt;/b&gt;&lt;br&gt;&lt;b&gt;&lt;a href=&quot;http://link.zhihu.com/?target=http%3A//weixin.qq.com/r/GC8UDDjEjmXxrXxv93oK&quot; class=&quot; external&quot; target=&quot;_blank&quot; rel=&quot;nofollow noreferrer&quot;&gt;&lt;span class=&quot;invisible&quot;&gt;http://&lt;/span&gt;&lt;span class=&quot;visible&quot;&gt;weixin.qq.com/r/GC8UDDj&lt;/span&gt;&lt;span class=&quot;invisible&quot;&gt;EjmXxrXxv93oK&lt;/span&gt;&lt;span class=&quot;ellipsis&quot;&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b&gt; &lt;b&gt;(二维码自动识别)&lt;/b&gt;&lt;br&gt;&lt;b&gt;音频发布在喜马拉雅上“区块链杂谈 (第2季)“&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;宁波格密链网络科技有限公司，专注于区块链上的密码技术研发。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>致远</author>
<guid isPermaLink="false">2019-01-11-54483595</guid>
<pubDate>Fri, 11 Jan 2019 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
