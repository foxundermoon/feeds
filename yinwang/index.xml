<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>当然我在扯淡</title>
<link>https://henix.github.io/feeds/yinwang/</link>
<description></description>
<language>zh-cn</language>
<lastBuildDate>Tue, 27 Mar 2018 22:24:25 +0800</lastBuildDate>
<item>
<title>扶门的礼仪</title>
<link>https://henix.github.io/feeds/yinwang/2018-03-27-door-etiquette.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/03/27/door-etiquette&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;扶门的礼仪&lt;/h2&gt;
            &lt;p&gt;世界上的很多事情，不是你自己有好意就一定有好的效果，你还必须知道对方的感受，不然你也许会让对方感觉很累。今天我就来讲讲一个看似简单的礼仪：扶门。很多中国人到了国外，特别是美国，看到美国人进了公共场所的大门之后，为了防止门回弹关上，都会礼貌地为后面的人扶住门，等他们接住门才放手。甚至有些先把门拉开，站在门口扶住门，让后面的人都进去了，自己才进去。&lt;/p&gt;

&lt;p&gt;中国人看到美国人这么做，觉得扶门是文明的象征，所以也开始模仿。哪知道，这里面的学问其实比他们想象的要复杂一些。所以你就发现，某些人经常为“谁先进门”这个事情让来让去的，又尴尬又累，那程度胜似吃了饭抢着买单 :p 其中的一些道理，其实很多美国人都不懂。这些道理可能很难在其它地方看到，所以我把它们总结一下。&lt;/p&gt;

&lt;p&gt;显然这些主动为后面人扶门的人，比起那些完全不考虑别人，甚至使劲摔门的人来说，已经很好了。可是我今天要说的不是这个，而是更加深入细致的礼仪。美国作为一个基本文明的国家，在这方面做得已经不错了，可是相对某些欧洲国家还是稍显落后。很多美国人并不懂得完整合理的礼仪规范，只是模仿欧洲的“绅士风度”，所以有些时候做得其实不大对。所以呢，看到美国人那么做，你也不一定完全模仿他们。你应该知道这些礼仪背后的原理，而不是照抄表面现象。&lt;/p&gt;

&lt;p&gt;扶门也许不是你想象的那么简单，无条件扶着门，显示好意就好。很多人懂得应该为后面的人扶门，可是他们忽视了扶门的时机问题，还有人之间的关系问题。正确的作法应该是这样，分好几种情况。&lt;/p&gt;

&lt;p&gt;情况 1：陌生人。进了一扇会自动弹回关上的门，如果回头看到有陌生人紧跟在后面，只有两三步远的地方，就扶住门让他进来，否则就自然把门放开，自己进去就是。原因是，如果后面的人离你还很远，扶住门会迫使他加快脚步。后面的人很可能希望按照自己的节奏走路，可是看到你扶住门等他，不好意思让你久等，或者觉得你一直回头看着他挺尴尬，所以他不得不加快脚步。如果他刚吃了饭不想那么快步走，或者他是在上楼梯，就会更加不舒服。所以呢，出于对他人真正周全的考虑，你不应该扶住门时间太久，迫使后面的人加快脚步。如果你发现自己判断错误，扶住门太久了，你还是可以补救。你只需要微笑着朝后面的人挥挥手，然后放开门自己进去。他会理解你为什么放手，因为他也不会指望你扶太久。这一条原则经常被美国人忽视，遇到扶门太久太早的人，经常感觉挺累。如果你遇到为你扶门太久的人，你也可以朝他挥挥手，示意他先走。&lt;/p&gt;

&lt;p&gt;情况 2：认识的人或者朋友。当然对于认识的人或者朋友同事，第一条就不一定需要严格遵守了。因为后面那个人认识你而且关系不错，所以你可以扶住门比较长时间。他大概不会因为你在那等他而加快脚步，你甚至可以靠着门跟他说句话。当然如果实在太远了，你也同样可以挥挥手，放手进去，别人不会介意这个。&lt;/p&gt;

&lt;p&gt;情况 3：陌生女性。如果身后紧跟的是陌生女性，你可以拉开门，让她先进去，然后自己才进去。你也可以自己先进去，然后把门帮她扶一下。没有规则要你一定让女性先进去，或者扶住门太久。普通的女性完全有能力拉开一扇门，这个不需要你特别照顾。&lt;/p&gt;

&lt;p&gt;情况 4：男性。如果身后紧跟的是男性，不管你是否认识他，你最好自己先进去，然后帮他扶一下门。最好不要请他先走，否则你就会制造“让来让去”的尴尬局面！如果你拉开门让一个男性先进去，自己才进去，会造成这位男性的尴尬。凭什么我需要让另外一个男性，甚至是女性为我开门，让我先走呢？我有哪一点显示出我身体虚弱，需要你帮助呢？他会这样想。他会认为自己的男性气质受到了某种打击，或者感到尴尬，感到欠了你什么。当然，如果你是酒店的礼宾人员，为客人开门让他们先走，不论男女都是天经地义的。所以当男性遇到另一个男性或者女性（非礼宾人员）给他开门，他一般会示意对方先走，可是扶门的这个人却又坚持要他先走，最后就出现了僵持的尴尬局面，跟很多中国人吃了饭抢着买单一样讨厌。所以你开了门，就不要请身后的男性先走，就不会有这回事了。如果开门的人在多次反复之后一定要你先走，而且多次进门都那样，那么请你今后小心这个人了，他似乎很想要你感觉欠他什么 :p&lt;/p&gt;

&lt;p&gt;情况 5：两手被占用的人。两手抱着箱子，或者推着自行车的人，如果跟在你身后，他们需要特殊照顾。你应该扶住门，让他们先走，然后自己才走。这个规则不论男女老幼，不论跟你什么关系都一样适用，因为他们腾不出手来开门，也没有手可以接住你放开的门。&lt;/p&gt;

&lt;p&gt;情况 6：一个推着婴儿车的人。如果是一个人推着一个婴儿车，这个没什么好说的，一定要拉开门，让他先走，确认婴儿车已经进去了，自己才进去。还有一种情况是一家人，其中一个推着婴儿车。因为有人可以开门，这个就不需要你特别照顾了，按情况1处理。&lt;/p&gt;

&lt;p&gt;情况 7：一大群普通关系的人（或者同事）在你后面。如果你身后不是一个人，而是一大群人，而且这群人不是亲密的朋友，只是普通的同学或者同事关系，那么请你先进去，然后帮后面第一个人扶住门，等他接手门之后就放手。他会为后面的人扶一下，这样接力下去。不要站在门口，让一大群人都进去，然后自己才进去。有些人喜欢这样做，以为这样显得很“绅士”，但我觉得这样很装很做作。我见过两三个喜欢扶住门让所有人进去的人，在工作中都是很虚伪的人。他们在工作中可以暗地里捅你几刀，进门的时候却演得像个大好人。让大家进去他才走，得意洋洋的样子，好像每个人走过那道门都欠了他一笔账似的。真的，你没有必要那样做，那种感觉非常的不自然。而且你扶住门，看着后面每个人走向你，可能会让某些人尴尬。其中某些人可能不大喜欢你，不想跟你近距离对视，觉得你在借机打量他们。有些女性甚至会觉得你长时间盯着她们走进去，是一种骚扰。所以如果很多人一起，最好还是你自己先进去，不要站在门口给大家扶门。&lt;/p&gt;

&lt;p&gt;情况 8：跟女性朋友一起。如果是跟熟悉的女性朋友或者女朋友一起，你最好拉开门，让女性朋友先进去，然后自己马上跟进去。注意，跟进去的时机是“马上”。如果她身后紧跟着陌生人，请紧跟你的女性朋友身后进门，不要让陌生人夹到你们中间去。有些刚懂得扶门的男士不知道这个道理。他拉开门，让女性朋友进去了，结果看到她身后又跟着其他陌生人，所以他继续扶着门，让其他人先走。结果门外的人一个个都进去了，他还在那里扶着门。女性朋友在里面，都不知道他哪里去了 :p 这种男士应该明白的是，在这个时候你应该跟女性朋友待在一起，而不应该让陌生人隔在你们之间。没有人会因为你先走而责怪你，他们反而会觉得你让他们先走很奇怪，因为你应该首先照顾自己的朋友。这个对待女性朋友的开门原则，我是从 &lt;a href=&quot;https://en.wikipedia.org/wiki/Emily_Post&quot;&gt;Emily Post&lt;/a&gt; 经典的『Etiquette』（礼仪）一书看到的。&lt;/p&gt;

&lt;p&gt;情况 9：进门马上需要排队的地方。如果你是去邮局或者需要排队下单的咖啡店，除非后面的人真有困难，最好不要拉开门让后面的陌生人先走，即使后面是女性也一样。你应该自己先进去，然后稍微扶一下门。根据先来先服务的原则，你应该排在后面的人前面，不管后面是男是女。如果你拉门让别人先走了，他们自然就排到你前面去了。如果这个人特别懂礼仪而且考虑周到，她可能会让你到前面去排队。但如果你在一个不是每个人都那么懂的地方，她很可能意识不到你应该排在她前面。这样你显示了好意反而吃亏，这会打击你以后继续有礼貌的动机。&lt;/p&gt;

&lt;p&gt;这可能是世界上最全面的关于扶门礼仪的总结，是一个计算机科学家不经常谈论的事情 =) 这些原则看似复杂，其实不需要你死记硬背，只要你看了有印象，就会从实际经验中体会到，不断改进。可惜的是很多人都不知道这里面的道理，也没注意到。这就是我为什么把它们写出来。&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-03-27-door-etiquette</guid>
<pubDate>Tue, 27 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>解谜计算机科学（前言）</title>
<link>https://henix.github.io/feeds/yinwang/2018-03-21-csbook-preface.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/03/21/csbook-preface&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;解谜计算机科学（前言）&lt;/h2&gt;
            &lt;p&gt;计算机科学直到今天仍然是一个谜。它简单而美丽的精华，被压在沉重的历史包袱和功利诱惑之下。纷繁复杂的 IT 技术充斥着各种浮夸和忽悠，变成一本本大部头“圣经”，让人不知所措，头脑发涨，让外行尤其是女性望而却步。她们说，学计算机能赚钱，可是计算机知识淘汰速度太快，需要不断学习才能跟上，计算机工作枯燥，伤眼睛，伤皮肤，老得快！去看看各位计算机界前辈的照片，你会发现她们说的好像是对的 :)&lt;/p&gt;

&lt;p&gt;“IT 男”和“极客”的苦逼名声，来源于这个领域创造者们的自大和虚伪。他们认为自己是天才，能够理解复杂的理论，所以他们喜欢把简单的问题搞复杂，然后告诉你“只有天才才能理解这种简单”。最后这种自大蔓延到整个领域。计算机科学虽然名字叫“科学”，但它的从业人员在很大程度上是宗教化的。不同信仰的教徒们盲目轻信，跟风拍马，互相鄙视，甚至掀起圣战。进入这个领域面临的，不仅是高度近视，不修边幅的同事，而且很多还很自大，喜欢显示自己聪明，觉得自己了不起。他们所谓的“聪明”，也就是能折腾那些纷繁复杂的理论和代码。发表论文来显示自己解决了一个问题，但别人看了仍然摸不着头脑。这种不健康的心理，进入了计算机科学的基因，完全违背了科学的精神。&lt;/p&gt;

&lt;p&gt;在这种情况下产生出来的所谓“知识”，当然是淘汰速度很快的，因为他们只给了你浮于表面的东西。IT 业的很多知识就像妈妈告诉你，我把勺子放在这个抽屉里了，你记住啊！第二天她又把勺子换了一个地方，要你重新“学习”。这叫知识吗？他们把精华的东西牢牢地锁了起来，只把衍生出来的副产品给其他人。拿到这些副产品的人一知半解，又在上面加上一些乱七八糟的东西，然后转手倒卖给更下一层的学生。这样几层转手之后，你拿到的东西就只能凑合用了，不能用于产生新的想法，甚至使用中有问题还不能解决。这就是为什么很多码工折腾来折腾去，代码也只是碰巧能工作而已。没有理解原理，就成为了“知识”的奴隶。看不准方向，在错误的道路上越走越远。&lt;/p&gt;

&lt;p&gt;爱因斯坦说：“如果你不能把一个问题跟六岁小孩解释清楚，那你并不真的理解它。” 这句话打了计算机前辈们的耳光。计算机界至今没有出现一本像物理界的『费曼讲义』那样负责任的教材。没有人从日常生活解释清楚那些基本的理论和技术是怎么回事。一方面是因为很多人并不真懂，只会照本宣科，拿别人的代码来拼凑折腾。另外一方面，很多懂了的人为了自己的私利，想掩盖这些简单的精华，故意把事情搞复杂。&lt;/p&gt;

&lt;p&gt;我写这本书，就是为了弥补计算机业界这一空缺，改变行业的现状。它将吸引新鲜干净的血液进入这个行业，并且赋予他们力量。它也可以刷新内行人员的头脑，让他们重新理解和审视已有的知识。这样也许我们能冲破这个行业的重重迷雾，让它变得诚实，获得科学的精神，成为像物理一样踏实的学科。&lt;/p&gt;

&lt;p&gt;这本书不要求读者理解高等数学，而只需要幼稚园或者学前班水平的数学：掰手指头算加法，手算多位数加减法。它不要求，也不会试图教会你中学几何，高等数学或者物理学，你不需要那些来理解计算机科学。它不灌输给你死知识，而是从日常生活的经验出发，引导你去“重新发明”它们。最后你不是学会了知识，而是自己创造了它们。只有这样的知识才是属于自己的，才是可靠安心的，不受别人控制，也不会忘记。我讨厌“学习”这个词，因为它基本代表着死记硬背。我不是在教你，你也不是在学习，因为你自己发明了这一切。&lt;/p&gt;

&lt;p&gt;如果有一天，一场灾难毁灭了世界上所有的计算机和电子产品，以及它们的设计文档，我希望看过这本书的人，能够根据他们的日常经验，重新创造出这些东西。对的，这本书不仅是关于编程和软件，它还会告诉你硬件是怎么回事，并且把软件和硬件统一起来。它不只是教会你一种程序语言，而是教会你所有的程序语言，它告诉你如何发明一种语言。它不要你去“记住”计算机里面有哪些东西，而是让你自己发现“需要”它们：晶体管，寄存器，指令，堆栈…… 你会发现虚拟机（VM）到底是什么，指令系统为什么那个样子，怎么创造它们…… 所有这一切，都以掰手指头的幼稚园算术为基础。&lt;/p&gt;

&lt;p&gt;实际上，计算机科学和逻辑学是统一的，你会不知不觉理解很多看似高深的逻辑学，你会看透白胡子逻辑学家爷爷们的把戏。这种理解会为你提供更好的理解数学的工具，所以这本书不仅会帮助你理解计算机科学，而且会帮助你更好的理解数学。理解了数学你就能更好的理解物理。理解了物理，你就能更好的理解所有的科学……&lt;/p&gt;

&lt;p&gt;有人可能怀疑这么浩大的工程，要什么时候才能完成。不会很久的，因为计算机科学最精华的部分，真的没有很多，我掰着手指头都数的出来。剩下来的都是衍生出来的技术，外加自欺欺人和商业炒作。你会掌握精华，识破忽悠和炒作，你可以衍生出自己的技术。即使你决定不进入这个领域，你也会成为一个火眼金睛的投资人，管理者，或者消费者。你不再能被这些“内行”欺骗。为了达到这个目标，你不需要损害自己的视力或者健康，不需要长出鸡窝一样的胡子，不需要成为一个对异性具有排斥力的呆子 ;)&lt;/p&gt;

&lt;p&gt;这本书不是固定不变的，它会不断地完善和发展。有人看我写的东西就是我最大的动力，所以为了使我自己有动力写书，我会采用“快速迭代”的方法。我是一个很懒的人，我不会等书完全写完才发布它，那样我会打瞌睡以至于不能继续，所以我会分章节发布书的内容。每一章发布之后，还会经过成百上千次的修改。每一章的内容，我会在它“基本可读”之后就进行发布，而不会等到它完美。之后我会反复的思考和修改，接受人们的反馈。&lt;/p&gt;

&lt;p&gt;这种做法对早期的读者有益，也有一定的弊端。弊端就在于，由于这些内容随时可能变化和改进，所以早期读者有时候会遇到看不懂的地方，必须之后再次阅读，才能跟上改进的思路。不过这样做也有好处，读者不用等上一年就能读到这本书，而且能跟着我的写作思路去思考，反复琢磨。俗话说，书读百遍，其义自见。他们可以跟我讨论，给我反馈，向我提问。这些都是后期读到完善作品的人无法体验到的。在某种程度上，这些人对问题的理解会更加深刻一些，因为他们被迫去进行独立思考。另外，早早的有了读者，会让我很开心，满怀着爱去做这件事。&lt;/p&gt;

&lt;p&gt;人的短期记忆只能记住七个东西，所以我会努力让这本书简短。每个知识点都不应该长篇大论之后才能理解，而应该是正中要害。当然这篇前言也应该简短，所以前言就到此结束了。&lt;/p&gt;

&lt;p&gt;计算机的世界，就将被你一个人重新发明出来。它的内容没有很多，真的没有很多……&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-03-21-csbook-preface</guid>
<pubDate>Wed, 21 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>CIIA 苹果报告自觉付费模式</title>
<link>https://henix.github.io/feeds/yinwang/2018-03-08-ciia1.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/03/08/ciia1&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;CIIA 苹果报告自觉付费模式&lt;/h2&gt;
            &lt;p&gt;很多人之前购买了我的第一份设计报告，关于苹果 iPhone 的一些设计问题。那份报告采用了付费销售方式，而且价格不便宜。由于我不想再发表设计方面的东西，但希望它能帮助到更多的人，所以现在将这份报告放在这里，进行“自觉付费”的销售，价格也做了大幅度调整。这份报告仍然不是免费的。由于其中涉及到我多年观察得来的结果，其它地方找不到的，所以收取适当的费用是理所应当的。&lt;/p&gt;

&lt;p&gt;自觉付费的原理就像一个水果摊（这次卖的是苹果）。我懒得去守着这个摊子，我就把水果摆在那里，你们吃了之后自己付钱就行。这跟我其他博文的“&lt;strong&gt;自愿&lt;/strong&gt;付费”形式不同。“自愿付费”的意思是，你看了如果不喜欢，或者你根本没看完，那么你可以不付钱。“&lt;strong&gt;自觉&lt;/strong&gt;付费”的意思是，你如果看了内容，那么你就已经“享用了”它，你就应该付钱。如果你不付，就是有道德过错的。如果你不想付钱，就请不要看。&lt;/p&gt;

&lt;p&gt;这就像我摆个“自觉付费”水果摊，你们吃了自己付钱就好，结果你吃了没付钱，这就不好了。你是否付费，将会影响到我的水果摊是否可以继续营业。我的博客含有代码，会统计这段时间的阅读人数。我会根据阅读人数与付费的比例，来推断是否有很多人没付钱。如果我发现付费的比例太小，我会适当调整作法。&lt;/p&gt;

&lt;p&gt;在我的书第一章还没完成之前，我想先把这份报告放在这里，作为“自觉付费”模式的一种实验。效果不错的话，我的 CS 教材会采用同样的作法。&lt;/p&gt;

&lt;p&gt;虽然在&lt;a href=&quot;http://www.yinwang.org/blog-cn/2017/09/25/apple&quot;&gt;预告片&lt;/a&gt;里，我批评了很多人对于苹果公司的膜拜态度，但这份报告的语气是建设性的。它的目的是帮助广大设计人员，技术人员意识到设计是一个重要的问题，没有任何公司的设计是完美的，我们应该不断地改善产品。我仍然喜欢苹果产品的许多设计，而且会继续使用苹果的产品。如果苹果公司的设计人员需要这份文档，价格也是一样的，我不宰客 :p&lt;/p&gt;

&lt;p&gt;如果你感兴趣的话，可以在这里下载这份文档。由于其中有比较多高清晰度的图片，虽然经过最大限度的压缩，文档的大小仍然是 5M 左右，所以请耐心等待下载完毕。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/resources/ciia1.pdf&quot;&gt;&lt;img src=&quot;http://www.yinwang.org/images/ciia1-icon.jpg&quot; width=&quot;240&quot;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;报告的第一章是免费的。如果你想继续阅读后面的章节，可以扫码付费购买之后继续。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.yinwang.org/images/wechat-ciia1.jpg&quot; width=&quot;240&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.yinwang.org/images/alipay-ciia1.jpg&quot; width=&quot;240&quot;&gt;&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-03-08-ciia1</guid>
<pubDate>Thu, 08 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>关于写书</title>
<link>https://henix.github.io/feeds/yinwang/2018-03-05-book.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/03/05/book&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;关于写书&lt;/h2&gt;
            &lt;p&gt;写书计划已经进入策划阶段。这篇文章是因为之前那篇的最后部分的一些想法越改越长，开始具有独立的价值，所以截取下来放在这里。其中加入的一些想法，也许可以帮助某些人跳出他们心里的“坎”。我觉得这是很有意义的，这些内容也许会成为我的另外一本书的一部分，这本书的名字也许可以叫『怎样解放你自己』。&lt;/p&gt;

&lt;h3 id=&quot;动机&quot;&gt;动机&lt;/h3&gt;

&lt;p&gt;说了挺久要写书，一直没有动力。一方面是由于我觉得国内的出版社都不大靠谱，而且他们出的很多书水平太低，处于“培训班”级别，尽是教流水线工人的死知识，这有损我的品牌形象。另外很大一部分原因，是因为我写东西都是一针见血，容易懂，而且不会留一手。我很怕一不小心说太明白，就让关键的知识点落到道德水平低的人手里，到处装模作样吹牛逼，还反过来说我是吹牛逼。我也许顾虑太多了。其实我只需要提供我愿意提供的知识，而保留我不愿意提供的就行。另外，这些入门知识被广大群众了解，显然对善良的人有好处，而对吹牛逼的人们不是什么好事。这些知识将会帮助他们识破骗局，成为他们对抗这些虚假权威的武器。所以，我真的决定要写书了。&lt;/p&gt;

&lt;p&gt;有些人虽然支持我，可是他们误解了我写书的目的。他们说我写书是要“证明自己”或者“实现自己的价值”，我觉得这些都是有失尊重的说法。他们说那些话的原因，是因为他们自己的觉悟没到位，所以没能理解我的境界和地位。只有地位低的人才需要向别人证明自己，才需要拿“硅谷”，“Google”一类的招牌来撑起自己的自信，才需要写一些“硅谷回忆录”来让别人瞧得起自己。我不一样的。由于我的地位，世界上没有任何人有资格来接受我的“证明”，所以我不需要向任何人证明自己，当然我更不需要向那些说我闲话的人，被洗脑的蠢人证明自己。&lt;/p&gt;

&lt;p&gt;在这个世界上总是有人对你说，你如果真那么厉害，那你高考考个状元来给我们证明一下啊！等你考了状元，他们又会说状元不算什么，你要是能在 ACM 竞赛拿金牌，才是真的厉害！等你拼得头破血流达到了那些目标，他们又说，你要有影响力的开源代码，那才叫厉害。等你有了开源项目，他们拿你的代码去赚了钱，反而对你各种吹毛求疵，贬低价值，好像那代码是他们也能写出来的一样。现在他们改口说，你在开源社区写点代码算什么啊，你要能进 Google，那才是真的厉害！等你进了 Google，他们又换了标准，你要是能修好我们这堆 JS 代码里的 bug，那才叫真的厉害呢！等你成天加班以为熬出头了，出了 Google，他们又说，那么多人都是 Google 出来的，你算什么啊？你要创业，造出 IPO 的独角兽公司，那才是真的厉害……&lt;/p&gt;

&lt;p&gt;于是你就走上了不归路，你的每一次行动都是为了让别人觉得你厉害。你不得不打着“硅谷牛人”的牌子，显示着你的 Google 经历，你的 ACM 奖牌。可是你仍然没有发现，那些要求你给他们“证明”的人，他们真的有资格评价你吗？他们只是一堆虫子而已！他们通过你的虚荣心掌控了你，他们按照他们自己的利益需要，为你定义了什么是“成功”。你接受了他们的定义，并且朝“成功”的方向努力，你就被控制了。你心目中的成功，只是为别人的野心服务的，而这些人并不需要为此做出努力，他们只需要 judge 你！因为你在乎他们怎么说，你成了那些人的奴隶，虫子的奴隶。你觉得自己“厉害”了，可是你只是别人的奴隶，因为你是否厉害，是别人说了算的！你失去了对自己的主权，这就叫做奴隶。&lt;/p&gt;

&lt;p&gt;我需要向小莫奈肚子里的寄生虫证明自己很厉害吗？不需要。我研究一下寄生虫的生命周期，生理规律，给他吃点药打掉就可以了。那些嘲笑我，说我闲话的人，吹牛皮的人，觉得我应该向他们“证明”什么的人，拿我跟其他人比较的人，不就跟寄生虫一样吗？寄生虫嘲笑我，说我闲话，对我来说有伤害吗？寄生虫如何看待我，对我来说有意义吗？我有必要让寄生虫认可我吗？我有必要跟寄生虫对骂吗？那些在乎寄生虫的看法的生命体，我还有必要尊重他们吗？所以请这些人不要再告诉我寄生虫怎么看待我，因为这会有损你们的地位。请你们看看我的文章和书，那就是给你们的打虫药。&lt;/p&gt;

&lt;p&gt;当然我也不需要实现自己的“价值”，我本来就非常有价值。我每天都感受到自己的价值，欣赏着自己的价值，我知道我不会贬值，而且会不断地升值。所以，我写书的目的很简单，是为了传播知识，把我的巨大价值分一点出去，让社会变得更好。另外，我觉得写东西是一种娱乐。我看电影，我打游戏，我寻找美食，我给小莫奈铲屎，是为了证明自己吗？是为了实现自己的价值吗？哎，这些人都在想些什么啊。&lt;/p&gt;

&lt;p&gt;有些自以为厉害的程序员可能会笑我，王垠你不写高级的技术资料，在这里忽悠初学者算什么？那他们就是大大的误解了。我并不缺高级的技术资料，我也不缺代码。去看看我的博文吧，几乎每一篇里面都有全世界最深入的见解。当全世界人都误解一个&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/06/08/java-value-type&quot;&gt;问题&lt;/a&gt;的时候，全世界的学术会议和期刊都在&lt;a href=&quot;http://www.yinwang.org/blog-cn/2013/03/31/purely-functional&quot;&gt;发烧胡扯&lt;/a&gt;的时候，当人们仰慕的大牛们都&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/10/12/compiler-bug&quot;&gt;犯错误&lt;/a&gt;还认为自己是对的时候，王垠的博文仍然是保持清醒，一针见血的。很显然，我不稀罕争夺所谓“高档”的地位。实际上我不想跟人争什么，写这本书是出于一种社会责任感，我觉得大部分人应该得到基本的知识，这样对社会有好处。&lt;/p&gt;

&lt;p&gt;我写“入门书”的另外一个原因，就像爱因斯坦说的：如果你不能向一个六岁小孩解释清楚一个问题，那么你其实并不真的懂。我在大学里见过太多讲不清楚问题的教授，中国的美国的都有，后来我发现那是因为他们自己都没弄明白。没有非常深入的见解，你是不可能把深奥的东西解释清楚的。反过来，试图把一个问题向完全不懂的人讲清楚，也会大大加深你自己的理解。看了我的『&lt;a href=&quot;http://www.yinwang.org/blog-cn/2012/08/01/interpreter&quot;&gt;怎样写一个解释器&lt;/a&gt;』而学会解释器的人都会明白，我的理解程度在全世界处于什么地位。没有成千上万次写各种各样解释器的试验，失败和领悟，你是不可能理解到那种程度的。&lt;/p&gt;

&lt;p&gt;深入理解任何一门学问的关键，不是试图去回答越来越“高级”，越来越复杂的问题，而是试图去回答最基础的问题，反复地问自己最基础的问题…… 爱因斯坦之所以能发现相对论，不是因为他去思索看起来高级的难题，而是因为他去思索一个最基本的问题：时间是什么？其他人觉得这样的问题很傻，时间不就是一秒一秒过去的那个东西吗？现在是半夜两点，那就是时间！然后这些人就永远没机会发现相对论了。同样的，深入理解计算机科学的关键，不是去学习云计算，大数据或者区块链，而是去思索最最基本的问题：“计算是什么？” “程序是什么？” “函数是什么？” “变量是什么？” …… 你觉得自己当然知道这些问题的答案吗？那请你再想一想！&lt;/p&gt;

&lt;p&gt;实际上直到 20 世纪初，全世界没有一个数学家真正的理解“函数是什么？” 这个如此基础的问题。这些人却天天都在用“函数”这个词，以至于他们的定理和证明里面出现各种奇怪的错误。直到 1904 年 &lt;a href=&quot;https://en.wikipedia.org/wiki/Gottlob_Frege&quot;&gt;Frege&lt;/a&gt; 写了这篇论文“What Is A Function?” 这种情况才得到了改善。数学发展了几千年，居然没有人真的理解如此基础的，天天都在用的概念。他们以为自己明白了，所以根本没有仔细思考过它是什么。就像我们从来没思考过什么是时间，却天天都在谈论“需要多少时间”一样。&lt;/p&gt;

&lt;p&gt;为了感受一下这个问题，我请大家来读一读这篇文章的第一句话：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.yinwang.org/images/what-is-a-function.jpg&quot; width=&quot;500&quot;&gt;&lt;/p&gt;

&lt;p&gt;回答最基础，看上去谁都知道的问题，也将会是我这本书的开端。Frege 是一个不幸的人，他的作品在他有生之年都不被人重视。我比他幸运一点，我的博客还有一些读者 :)&lt;/p&gt;

&lt;p&gt;所以这本书虽然被我叫做“普及”或者“入门”读物，但它并不只是针对初学者的：它针对所有人。对我来说，很多“资深”的程序员其实根本就不算入了门。当我进入研究生阶段的时候，偶然发现了 SICP，看了这本所谓“入门书”，我惊讶地发现自己以前其实不会编程。在美国工作的时候，我发现很多高级别的程序员也是一样的情况。他们以为自己懂了，资历很深了，而其实还差很远。由于一些初级问题一开头就没理解清楚，到了关键的时候就会犯错误。这就是我所谓的“入门”的含义。所以这本书也可以作为资深程序员们的进修读物。当然我会降低门槛，努力让初学者都能看懂。&lt;/p&gt;

&lt;h3 id=&quot;与经典书籍的区别&quot;&gt;与经典书籍的区别&lt;/h3&gt;

&lt;p&gt;因为我好像很推崇 Lisp/Scheme 语言。有些人看我想写这种入门读物，可能以为我会写一本“王垠的 Little Schemer”或者“王垠的 SICP”。这是一种比较常见的误解。如果我只是模仿 The Little Schemer （TLS） 或者 &lt;a href=&quot;https://mitpress.mit.edu/sicp/&quot;&gt;SICP&lt;/a&gt;，那是完全没有意义的。你去读那些书的中文版就行了。&lt;/p&gt;

&lt;p&gt;很多年前我就是从 SICP 入门的，但是经过多年的研究，直接跟这些书的作者们学习交流，我发现这些书虽然贡献卓著，是不可磨灭的经典，我尊敬它们的作者，可是它们也有很多不足的地方甚至误导（这句话不要传到某些人耳朵里哈）。这就是为什么有好几个出版社请我翻译 TLS，我最后都拒绝了，因为我想写很不一样的东西。&lt;/p&gt;

&lt;p&gt;很多人曾经问我：“我该看这本书还是那本书？” 我都不想回答，也是类似的原因。因为我的脑子里有一本更好的书，我觉得回答这样的问题有点降低自己的身份。我不再是此类书籍的消费者，而是创造者的级别。出于尊重的原因，你不可以问一个创造者这样的“消费级问题”。这就像你不可以问法拉利的设计者：“我是买奥迪好还是奔驰好？” 出于礼貌他也许会给你一个回答，但他的内心会很受伤 :p 同理的，请我翻译别人的此类书籍，也让我感觉很悲哀。&lt;/p&gt;

&lt;p&gt;我在之前的好几篇文章已经指出了 Scheme 语言的一些设计上的弱点，完全以 Scheme 的方式写书，显然会把很多这样的弱点当成优点，对新手造成误导。从 SICP 或者 TLS 入门的学生，很多偏激的认为 Lisp （或者 Haskell，Scala）是世界上最好的语言，以为 Lisp 的 list 是世界上最好的数据结构，以至于写 Java 代码还要在里面自己造出 Lisp 的 list 结构，搞得又复杂效率还很低。我不希望给我的读者们造成这样的效果，因为很显然我知道 list 的缺点。&lt;/p&gt;

&lt;p&gt;我希望我的书是一本有机融合多种思维方式的精华，它应该本着科学的态度，而不是宗教的。这本书要教会读者的，不是某一种语言或者某一种思维方式，而是所有的语言和所有的思维方式的精华结合在一起，并且提醒你小心它们的缺点。&lt;/p&gt;

&lt;p&gt;另外，我发现 SICP 这样的书籍还有很多写作上的弱点，很多地方有没必要的细节和冗长，导致初学者读起来头痛。书中代码的实现有些时候并不简洁清晰，到了第四章就很难看懂了。TLS 的“孔夫子式”写作方式很精悍，却还是可以很伤脑子看不懂。过度的强调递归和尾递归，会导致学生倾向于在工作中过度使用尾递归代码。另外 TLS 缺少跟实际工作接轨的内容，倒是为 Y combinator 之类完全不实用的东西耗费很多篇幅，这会让读者看了书却不知道怎么改善工作要用的代码，以至于失去动力，半途而废。我曾经很推崇费曼的物理学讲义，可是实话说吧我真想再学点物理，所以看了一些费曼的讲义。感觉开头好玩，到后来还是很累很痛苦想睡觉…… 所以我需要探索更好的方式来表达这些内容。这本书不会再号称“计算机科学的费曼讲义”，它应该更好！如果它不是更好，我就继续改进它 :)&lt;/p&gt;

&lt;p&gt;为了知识的民主和社会的文明，提高普通大众的技术教育水平迫在眉睫。这些事情我不放心其它人来做，更害怕发言权落到吹牛扯淡的野心家手里。仔细看过我的技术文章的人，都应该知道它们的见识深度是很难超越的。所以很希望大家能够支持我开张写书。祝愿大家走出迷茫，获得真知！&lt;/p&gt;

&lt;h3 id=&quot;启动经费和投票支持&quot;&gt;启动经费和投票支持&lt;/h3&gt;

&lt;p&gt;我希望在书的第一章发布之前，也就是现在，收集一些“启动经费”，来开始写作的过程。这些经费用于建立工作环境，也用于“估算”有多少人会想买我的书。&lt;/p&gt;

&lt;p&gt;如果你喜欢这篇文章，而且有意要买我将要写的书，可以点击这个&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/04/13/pay-blog&quot;&gt;付费&lt;/a&gt;页面，对本文进行少量的付费（30元），留言就写“期待CS入门书”。之前已经付过类似费用的就不用了。我会根据付费的人数来估计图书将来的销量，所以你如果感兴趣的话，请一定向我发出你的支持。但是请注意，这个付费不代表你付了买书的钱。我的书显然不会这么便宜的。由于这篇文章本身的价值，你是在给这篇文章付费 :)&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-03-05-book</guid>
<pubDate>Mon, 05 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>真相</title>
<link>https://henix.github.io/feeds/yinwang/2018-03-01-truth.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/03/01/truth&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;真相&lt;/h2&gt;
            &lt;p&gt;金钱，是万恶之源。容易得来的金钱，就更加吸引愚蠢的人。这一句，解释了我在美国硅谷看到的一切怪异现象。那些现象在中国也很猖獗。&lt;/p&gt;

&lt;p&gt;每当我批评像 Google 这样的公司里面的风气，就有人把我包装成一个自高自大的人，仿佛错的人是我。作为一个善良的人，我也曾经以为我在某些方面做得不对。然而看透了这一切之后我才发现，我对于那些经历发表的一切感受，几乎全都没有错。&lt;/p&gt;

&lt;p&gt;容易得来的金钱，导致了硅谷公司的平庸化，它已经不再是当年车库里创业的那个硅谷。过度容易得来的发财梦，引来了许许多多一知半解，甚至完全外行的人。他们打着各种绚丽的招牌，来到硅谷，为的就是钱。&lt;/p&gt;

&lt;p&gt;真正爱好计算机技术的人们，遇到这些蜂拥而来的假货，可以说是措手不及。这些吹牛大王们提出这样那样新鲜的口号，却从来没有受到过正规的计算机科学教育。太容易得来的钱，还吸引了大批不合格的人员流入大学相关专业，蒙混过关，导致学术腐败，导致整个大学系统质量体系的瘫痪。&lt;/p&gt;

&lt;p&gt;这就是我在硅谷的时候所面对的。一个受过最艰深的计算机科学教育的人，给吹牛大王们打工，被各种打压。他最后忍无可忍，终于爆发出来，他说：“我就是比你强！我凭什么要被你打压！” 于是乎，他的前半句话就被吹牛大王的同伴们拿过去，断章取义，到处宣扬：“看那，王垠是多么自大的人！竟然说出这样的话来！这种爱吹牛逼的人，跟谁都合作不好！”&lt;/p&gt;

&lt;p&gt;这种说法是非常有效的。任何有良知的人，听到有人这样说自己，都不免产生疑惑和自省：难道我做的过分了一点？这种疑惑由于强大的舆论压力，越来越深，最后导致了精神混乱。他居然以为自己做错了，他以为自己是有点自大，他开始可怜起被自己骂过的人……&lt;/p&gt;

&lt;p&gt;可是他没有发现，吹牛大王们和打压过他的人，正在为他的迷惑而庆祝。他们打着“Google校友”的招牌，回到中国，招摇过市，对 Google 的牛逼和幼稚园式的企业文化各种宣扬。他们开始打起“硅谷”的招牌，进行各种”知识付费“。言之无物，却有千万的收入滚滚而来。他们数着钱，大笑着那些被他们迷惑的人。&lt;/p&gt;

&lt;p&gt;一个善良的人，他需要莫大的支持和勇气，才能冲破这样的迷雾，冲破对自己的怀疑：“我是不是那个错的人？” “我是不是伤害了其他人？” 他反复的问自己…… 可惜他的家人，他心爱的人，都不同程度的被舆论所洗脑，甚至对他进行反向灌输，否认他的价值。这经常使得他头脑胀痛……&lt;/p&gt;

&lt;p&gt;他反反复复的琢磨自己的言论，出尔反尔的删除自己的微博。因为在他的心中，装载着对其他人的关怀。对自己的怀疑，使得他的内心矛盾重重，压力山大。&lt;/p&gt;

&lt;p&gt;可是终于有一天，他看破了这一切。他所经历过的硅谷的一切，原来是一个骗局，一个在强大的金融机构支持下进行的巨大骗局，一场财富转移的浩劫。美联储（Federal Reserve）滥印了大量的美元，通过各种渠道泛滥地投放给硅谷的创业公司。不管这些公司看上去有多傻，不管他们是否可以盈利，都可以拿到很多的投资。可以说是投资人争先恐后在送钱，还生怕别人不要他们的钱了。为什么会这样呢？因为那些钱是不费吹灰之力用印钞机印出来的！&lt;/p&gt;

&lt;p&gt;当然，大部分的创业公司都因为愚蠢而倒闭，而他们其中少数人却会抓住这些投资，成为亿万富翁。极少的创业公司的盈利，其实无法弥补泛滥的投资开销。所以这没有带来社会财富的增加，而只带来社会财富的转移和消耗。这就是所谓“第二次dotcom泡沫”，它终究是会破灭的。&lt;/p&gt;

&lt;p&gt;这是一场没有刀枪的抢劫。大量的印刷美钞，导致了其它地区，其他领域人们的贫穷。很多人做着对社会有贡献的工作，他们的收入却由于通货膨胀，房价上涨而变相的降低，变得生活困窘，不得不卖掉房子，背井离乡。抢劫，让硅谷的吹牛大王们成为了亿万富翁。&lt;/p&gt;

&lt;p&gt;在这样的洗劫运动中，冲在最前面的，当然是人性最丑恶的一面。哪里有容易钱，哪里就必然有愚蠢和虚伪。拿着好几倍高工资的所谓“管理层”，号称 JS 专家，每天开着最新型号的 Tesla 上班，却连几十行 JavaScript 代码都会写的乱七八糟，漏洞百出。&lt;/p&gt;

&lt;p&gt;为什么呢？你们钱太多了，太容易混了！所以一个劣质的人，他只需要稍加伪装，就能混到那样的职位，骑在手下人的头上，各种瞎指挥，各种邀功。我看到整个的公司，建立在这种虚无的基础上，进行非常不公平的管理和分配。真正有能力的人被打压，拿着低廉的工资，加班到深夜。&lt;/p&gt;

&lt;p&gt;各个大公司也因为有太多的“容易钱”，而变得毫无道德底线。每一家都在吹嘘自己有“黑科技”，很多这些项目一开头就明显是不可能成功的，却要利用媒体的洗脑，让外行大众以为有希望成功。其实他们的目的只有一个，那就是把大家辛苦挣来的钱，转移到极少数人的手里。不要忘了，这整个运动完全就是为了“财富转移”，而不是为了制造财富。我很惊讶，这样的行为居然不构成“诈骗罪”！&lt;/p&gt;

&lt;p&gt;看清了这一点之后，人也许就知道该怎么做了，知道该如何对待各种观点。是的，我明白了，我说过的做过的一切，都是没有大错的。我应该挺直腰杆，继续直言不讳。我应该得到我应有的尊重和报酬，我应该得到我应有的生活，我应该有机会做我喜欢的事情。我作为一个世界顶级的专家，当仁不让。&lt;/p&gt;

&lt;p&gt;那些被金钱的大潮引来的浅薄的人们，我无意跟他们指名道姓地较劲，就像我不想亲自去捅一个马蜂窝一样。我的地位不允许我那样伤害自己。我需要保护好自己，保护我关心的，善良的人们，而不应该把注意力集中在打击那些垃圾人类。过度注意低级人类，其实不知不觉降低了我自己的地位。&lt;/p&gt;

&lt;p&gt;所以呢，从今天起，我决定给自己一个转折点。我要让善良的人们知道，什么叫做王者归来！为此，我决定对回国之后的一些做法做出改变。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;我不会再向邪恶的势力妥协，我不会再帮助吹牛大王们。一旦我发现对我不诚恳的人，自以为是的人，或者想利用和诱导我的人，即会终止与他的一切交流与合作。我不会与吹牛大王们掌权的公司合作。我会在与人合作中维护严格的职业道德和科学精神。&lt;/li&gt;
  &lt;li&gt;由于我的学术水平处于世界顶级的高度，我必须维护品牌的尊严，不能让它与低档货在同样的地点出现。我不会再采用“知识付费”，“付费问答”一类的 app 或者服务。现有的知识付费服务里面，存在太多的低档次信息。我自己都不用那些东西，觉得不但毫无收获，反而受到各种洗脑。我不愿意让我的名字出现在低级别的人甚至吹牛大王的名字旁边。一直都有出版社找我写书，而我一直都拒绝，也是同样的原因。因为这些出版社联系我的时候，方式让我觉得不够尊重。他们喜欢列举为他们出书的另外一些作者，而他们跟我完全不是一个档次，有些甚至是吹牛皮的。所以我一直都未能与国内出版社合作。另外，我还会严格实行通信的高水准，不回低水准或者语气不尊重的来信，不看微博的评论。&lt;/li&gt;
  &lt;li&gt;我自己的软件项目进入保密阶段，自由发展。我不会再宣扬我自己在写什么代码，我也没有必要一直做我曾经说我要做的事情。我可以告诉人们我的兴趣，但我没必要用代码来证明什么。地位低的人才需要用代码来换取别人的认可。我不吃“Talk is cheap. Show me the code!” 那套，那是错误的想法。应该是反过来，应该是其他人向我证明他们的能力才对 :)&lt;/li&gt;
  &lt;li&gt;入门书籍准备动工。对抗吹牛大王们的攻击，最有效的一个手段就是教育。只有让大多数人得到精髓的知识，才可能让他们看清楚很多东西。当我批评“AI 浮夸风”的时候，显然很多人是看不懂我在说什么的，只好任凭他们忽悠。甚至很多高级别的工程师，都在问我要不要用 AlphaGo 的方法来实现“自动编程”，这说明他们的知识其实很不到位。如果人们都理解我所掌握的计算机科学原理，就不会这样被忽悠了。为了提高人们的认知水平，我决定开始写计算机科学的入门读物。我曾经考虑过找一些“小白鼠”来测试我的读物是否容易懂，但现在我觉得那样太麻烦，没有那个必要。我会直接把正在进行中的草稿放在这里，让大家随意浏览。有问题或者不懂的人跟我联系就行了，我会考虑作出改进。&lt;/li&gt;
  &lt;li&gt;书籍的收费。我不想再采用之前的“付费+发货”方式，寄出 PDF 文件的做法非常不方便。这些书的章节，会被陆续撰写出来贴在博客上，这样大家随时都可以得到最新的版本。我打算最开头的时候进行“自觉付费”，这跟我其他博文的“自愿付费”形式不同。“自愿付费”的意思是，你看了我的文章，如果你不喜欢，或者你根本没看完，那么你可以不付钱。“自觉付费”的意思是，你如果仔细看完了书的内容，那么你就已经“享用了”它，你就“应该”付钱。如果你不付，就是有道德过错的，如果你不想付钱，就请不要看。这就像我摆个“自觉付费”水果摊，我不看着这摊子，你们吃了自己付钱就好，结果你吃了没付钱，这就不好了。你是否付费，将会影响到我的水果摊是否可以继续营业，会影响我继续写书的动力。我的博客含有代码，会统计这段时间的阅读人数。我会根据阅读人数与付费的比例，来推断是否有很多人没付钱。如果我发现付费的比例太小，我会适当调整作法。&lt;/li&gt;
  &lt;li&gt;书籍的启动经费。我希望在书的第一章发布之前，也就是现在，收集一些“启动经费”，来开始写作的过程。这些经费用于建立必须的工作环境。这些经费也用于“估算”有多少人会买我的书。如果你看到这篇文章而且有意要买这本书，可以点击这个&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/04/13/pay-blog&quot;&gt;付费&lt;/a&gt;页面进行少量的付费（30元），留言就写“期待CS入门书”。我会根据付费的人数来估计图书将来的销量，所以你如果感兴趣的话，请一定向我发出你的支持。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;说了挺久要写书，一直没有动力动笔。一方面是由于我觉得国内的出版社都不大靠谱，而且他们出的很多书水平太低，有损我的品牌形象。另外很大一部分原因，是因为我写东西都是一针见血，容易懂，而且不会“留一手”。我很怕一不小心说太明白，就让关键的知识落到道德水平低的人手里。我也许顾虑太多了。其实我只需要提供我愿意提供的知识，而保留我不愿意提供的就行。另外，这些入门知识被广大群众了解，显然对善良的人有好处，而对吹牛逼的人们不是什么好事。这些知识将会帮助他们识破骗局，成为他们对抗这些虚假权威的武器。所以，我真的决定要写书了。&lt;/p&gt;

&lt;p&gt;这本书虽然被我叫做“普及”或者“入门”读物，而其实它将会包含最精髓的计算机科学。我敢打赌，很多工作多年的资深程序员，对于其中的很多东西都不会很清楚。所以它也可以作为资深程序员们的进修读物。当然我会降低门槛，努力让初学者都能看懂。&lt;/p&gt;

&lt;p&gt;为了知识的民主和社会的文明，提高普通大众的技术教育水平迫在眉睫。这些事情我不放心其它人来做，更害怕发言权落到吹牛扯淡的野心家手里。仔细看过我的技术文章的人，都应该知道它们的见识深度，是很难超越的。所以很希望大家能够支持我开张写书。祝愿大家走出迷茫，获得真知！&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-03-01-truth</guid>
<pubDate>Thu, 01 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>对某领导离任有感</title>
<link>https://henix.github.io/feeds/yinwang/2018-02-26-fired.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/02/26/fired&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;对某领导离任有感&lt;/h2&gt;
            &lt;p&gt;最近听老同事说，之前任职的某公司的 VP Engineering，被公司“赶走”了。我吃了一惊，然后却有一股莫名的幸福感涌上心头。这是多么奇怪的感觉！&lt;/p&gt;

&lt;p&gt;离任后的主页，显示着他的“光辉业绩”，把大家的功劳全都拉到了自己身上。在我任职期间，公司增长了xx，提升了xx，培养了xx…… 只有知道内幕的人，才知道那些业绩是谁做出来的！实际上同事们对于他的离去，评价是：“众望所归”。为什么会这个样子呢？&lt;/p&gt;

&lt;p&gt;一个公司的一把手看人不准，就很可能引进这样不靠谱的人。不但没有任何贡献，给同事们制造的障碍和伤害，帮的倒忙，打压的人却不少。最恶心的是，因为这个人而慕名而来的那一大帮光说不做，瞎指挥的害虫。在 IT 领域似乎有很多这样的帮派，他们就像蝗虫一样，穿着迷惑性的外衣，从一块稻田飞到另外一块……&lt;/p&gt;

&lt;p&gt;我也是被打压的人其中之一，不但被他的下属打压，还曾经被他直接攻击。我永远都不会忘记那个危难的时刻，他的一个完全无脑的瞎政策，让我们几乎完全无法工作，大家却都忍气吞声。我又是那个第一个站出来，指出问题所在的人，那个被枪打的出头鸟。幸运的是，顶着压力持续抗争两个星期之后，我终于联合了全组人的力量，扭转了这无脑的作法，让大家的工作可以继续。&lt;/p&gt;

&lt;p&gt;（关于这件事，可以参考这篇&lt;a href=&quot;http://www.yinwang.org/blog-cn/2017/05/17/practical-idealism&quot;&gt;博文&lt;/a&gt;的“个人兴趣与企业兴趣”一节）&lt;/p&gt;

&lt;p&gt;我离开公司的时候，一位经历过此事件的同事发来 email 对我说：“谢谢你，为我们做出的一切。你会被怀念的！” 我很欣慰。我没有什么光辉业绩可以写在自己的简历上，可是我被有正义感的同事们怀念。这对于我来说就是最大的成就。&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-02-26-fired</guid>
<pubDate>Mon, 26 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>中国人如何经营自己</title>
<link>https://henix.github.io/feeds/yinwang/2018-02-24-chinese-fame.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/02/24/chinese-fame&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;中国人如何经营自己&lt;/h2&gt;
            &lt;p&gt;大家都知道，在中国人的圈子里，有很多人黑我。我懒得去看，但是有好心人告诉我，黑我的网站有知乎，MITBBS，V2EX。还有成都某码农 QQ 群，里面都是 Python 爱好者，他们可瞧不起我了，每个人都觉得自己比我牛…… 现实生活中也有听说我是谁之后，态度诡异，阴阳怪气的。我妈总是说我不会经营自己，让我向国内的一些名人学习一下技巧。可是我一直对此不屑一顾，直到今天才发现新大陆……&lt;/p&gt;

&lt;p&gt;网络上的网民，喜欢采用像黑美国总统特朗普一样的办法，拿起别人只言片语，断章取义，或者歪曲原意，或者干脆完全杜撰，力图把他塑造成一个自高自大，目空一切，很难相处的人。他们喜欢在“王垠是一个什么样的人”这样的知乎问题下面作答：我认为王垠是一个…… 说得好像认识我，见过我一样。而其实我不认识任何一个会在知乎上回答问题的人。&lt;/p&gt;

&lt;p&gt;现实生活中的某些人呢，也许还是受了网络的影响，见面的时候会这样表示他们的尊敬：“王垠，我听说你在网上很有名啊！” “王垠，我们这个地方做得不好，你可不要在博客上骂我们哈！” “王垠，我听说你有个博客，可以给我看看吗？…… 哦，谈谈这个，谈谈那个…… 哦，呵呵呵，知道了！”&lt;/p&gt;

&lt;p&gt;显然，这些人是话中有话，寓意深刻的。每次遇到这样的人，我就后悔跟他们打招呼。你可能无法理解这种遗憾，一种对人心的失望。久而久之，就不想去认识这个领域的中国人了。&lt;/p&gt;

&lt;p&gt;在与挺多中国人的接触中，我都感觉到一种很不正常的心态。开口闭口这总那总的，互相称呼大牛大师的…… 再加上如果他们听说我是“名人”，或者知道我的一些事情，那种感觉就更诡异了。当然，我也遇到少数真诚一点的中国人，然而实话说吧，这样的人非常之少。&lt;/p&gt;

&lt;p&gt;中国人，特别是 IT 领域的，似乎不明白如何尊重一个人。也许就像柏杨的『丑陋的中国人』所说，中国人的心里只有对彼此的恐惧，不是恐惧就是鄙视，就是没有爱。直接叫你个“大师”，免得你觉得没有受到足够的“尊敬”，或者就干脆戏谑和嘲笑你。不管叫你大师还是嘲笑你，你对于他们不是一个人，而是一个可以利用的东西。恐惧和虚伪在操纵着这一切，而不是真心实意的尊重。对人起码的尊重都是如此困难，这跟中国人吃完饭喜欢抢着付账，吃饭时互相敬酒的习俗，可能是同样的渊源。&lt;/p&gt;

&lt;p&gt;大概是因为中国人生活太无聊吧，很多人特别爱上网，所以经常在现实中遇到的人，感觉跟网民也没有很大差别。很多人闲得无聊就上 MITBBS，知乎，今日头条，微博…… 成天埋着头。所以呢，不知不觉说话想事情就变得跟网民一样了。我问一个老朋友：“你现在哪里工作呢？” 答曰：“哎呀，就是那个你最瞧不起的 Apple 啊！” 我不知道自己哪里说过瞧不起 Apple 了，而且我肯定没跟他说过。很显然，他没有看过我批评 iPhone 设计的文章原文，而只是在网络上听网民们转述：“王垠骂完了 Google 和微软，又开始骂 Apple 了！”&lt;/p&gt;

&lt;p&gt;这些人很喜欢说我在“喷”，而其实我只是在理性的评价。我看出来了，他们是有目的的。他们要妖魔化王垠，把他说成是一个走到哪骂到哪，跟谁也合不来的人。这些人都没有见过我，就开始歪曲我的各种言论。实际生活中呢，恐怕他们才是那种很难相处，两面三刀的人吧。合作过的同事都知道我是什么样的人，可惜他们都不怎么“上网”，只有这些网虫到处散布谣言。&lt;/p&gt;

&lt;p&gt;如果你说我也是网民，因为我在网上写博客，那你就错了。我顶多算是一个作家，或者学者。很多作家和学者都有自己的主页，他们会在上面挂上自己的散文或者学术论文。可是他们从来不去“网络社区”讨论，也不关心网络上的名人言论，业界动态等。写完自己的文章发出去，他们就开始过自己的生活。&lt;/p&gt;

&lt;p&gt;写完文章或者冒点微博，我一般不会去看网上的其他东西，也很少看微博的评论。我不会去知乎（除非搜索到了知乎页面），不去 MITBBS。我不看任何中文媒体，我甚至很少看朋友圈。我的朋友圈小红点是关闭的，只有我想起来的时候，才会主动去看看最亲密的朋友们有没有新鲜事。一大半联系人的朋友圈都是被我屏蔽的，原因往往是他们经常发布让我觉得功利或者显摆的内容。偶尔一两次还好，但如果大部分都是那样的内容，我就选择“不看他（她）的朋友圈”。&lt;/p&gt;

&lt;p&gt;所以虽然我用网络，可是我非常不像网民。我不关心网民们在说些什么，我也不关心他们怎么想。对于我来说，网民是一群心理不大健康的人，我不想让自己受到影响。我发现物理地切断这些信息来源，是唯一有效的办法。你可能以为没必要屏蔽信息，自己不要在意就行了。可是我发现，就算你不经意的看到那些标题或者图片，心理也是会受到影响的。它们操作的是你的潜意识，并不是理智觉得不在乎就真的不在乎的。&lt;/p&gt;

&lt;p&gt;如果你有一点功利，你就变得更加功利和浮躁。如果你不认同那些内容，你就会因为以为每个人都关心那些无聊事，而感到苦涩和绝望。很多人发图片是为了炫耀，那种感觉就更奇怪了。如果有人在朋友圈转载一些 AI 传教士的言论，说你的工作会在不久后消失，被机器取代，你能不产生感觉吗？总之，为了自己不产生任何感觉，最好的办法是屏蔽某些人的信息。屏蔽是如此有效的办法，有一次一个朋友发信息给我，说整个朋友圈都是某明星复婚的事情。我说我怎么没看见呢？后来我发现，那些可能会转载这种内容的人，早就因为其它内容被我给屏蔽了 :)&lt;/p&gt;

&lt;p&gt;扯远了，回到我见到的问题人类身上来吧。虽然这些人遇见我时不知道是什么样的心理，然而当他们提起中国的一些“大牛”或者名人，那可真是顶礼膜拜，非常尊重。他们喜欢转载这些名人的话，仿佛他们说的每一句话都可以写进名言录，每一句都是真理。他们买来这些名人的书，放在自己书架上显眼的位置，这样其他人就知道他心目中的英雄是谁，就以为他也传染了某种高贵的品质……&lt;/p&gt;

&lt;p&gt;这些“职场套路”，逼格模板，可能对其他人管用，然而我一眼看到就知道是怎么回事了。这些不但不会给这个人加分，而且会损害他在我心目中的形象。我从来不看这类名人写的“心得书”或者“回忆录”，我也不关心他们说了什么。我甚至从来没听说过他们的名字，不知道他们是谁。&lt;/p&gt;

&lt;p&gt;但经常看到有人崇拜他们，听说这些人和他们的“名著”，不免产生好奇。为什么我在博客上说了那么多透彻的道理，到头来得不到应有的，基本的，作为一个人的尊重。反而这些名人，打着“硅谷高管”的名号，回国随便写两本书，相当之浅，甚至误导群众，却被人崇拜到这种地步。&lt;/p&gt;

&lt;p&gt;总是听说这些人和这些书，却一直提不起兴趣来看看。当我真正拿起来看的时候，我惊呆了。我错过了那么多可以让自己在国内飞黄腾达的技巧！我以前真的太幼稚。&lt;/p&gt;

&lt;p&gt;这事的起因，是由于我最近装了一个“知识付费”的 app，你可以付费订阅很多中国名人的专栏，讲各种话题。这些人有 IT 名人，心理学家，经济学家…… 于是乎，听说过的一些中国业界名人的名字，就开始反复出现在我的眼前。他们的广告语说：“AI 时代要到了，很多人的工作就要消失了！在这个专栏里，我来教你如何提升自己相对于机器的竞争力，在未来的 AI 世界职场找到工作！”&lt;/p&gt;

&lt;p&gt;这是典型的制造“AI恐慌”的做法，它是利用人们害怕自己的工作被机器取代的恐惧心理，而去花钱拓宽自己的生存方式。在我之前的一篇&lt;a href=&quot;http://www.yinwang.org/blog-cn/2017/04/23/ai&quot;&gt;文章&lt;/a&gt;里已经指出，其实人工智能只能取代最最枯燥简单的工作。连出租车司机和淘宝客服这样的工作，机器都毫无办法胜任。&lt;/p&gt;

&lt;p&gt;我算了一下这专栏的费用，乘以订阅的人数，也超过一千万人民币了。这还不算是里面最高的。人家用“AI 恐慌”收智商税，一年都赚一千万！王垠，你在干什么啊？把那么宝贵的信息，用最容易懂的方式写出来，免费给人看。还跟要饭的似的，贴几个二维码在那里：你们高兴就打发点吧…… 😒&lt;/p&gt;

&lt;p&gt;本来只是听说过这些人，并没有负面看法。可是看到这样的广告语，他们在我心目中的那一点好奇心的位置，也消失了。当然也不会忘了介绍他的事迹，摆出他的名著。由于老是听说这些书，出于好奇，我翻开了其中一些样章。这些内容在技术方面基本是在夸大机器学习的能力，让外行误以为机器已经可以理解人类的语言。但作者同时也不忘“经营自己”，所以看了几页之后，我豁然开朗。这些章节教会了我，在中国要如何正确的吹牛逼！:)&lt;/p&gt;

&lt;p&gt;我如获至宝。我知道很多网民说我喜欢“吹牛逼”，然而你发现没有，我其实很不会吹牛逼，很没有技巧。我的所谓“吹牛逼”基本说的都是实话。一个真有能力的人，给一些半壶水的心机家打工，被各种打压。不开心了，冒几句大实话出来，却被人说成是吹牛逼。&lt;/p&gt;

&lt;p&gt;就当我是吹牛逼吧，我吹牛逼的技术怎么就这么差呢？为什么每次一吹，别人就说我在吹牛逼呢？所以我决定好好地研究一下，真正高级的吹牛逼应该怎么吹。于是乎，我拿着这些样章看了一会，发现了一些通用的技巧。太美妙了！所以我决定把这些心得分享给大家。&lt;/p&gt;

&lt;p&gt;总有人喜欢在微博上评论，说：“王垠，感谢你！自从知道你的博客，我就学会了吹牛逼。” 我觉得真不敢当啊，还是不要误人子弟了。他们应该向这些出过书的名人学习才对！&lt;/p&gt;

&lt;p&gt;注意，我这里是就事论事，说一类人的问题，得给人留面子。我把原文和重要的细节都模糊化了，我描述的现象是很多人的混合体，而不是一个人。利用 AI 恐慌来搞知识付费的有好多人，很多人都可能符合这个特征，所以请勿过度解读和瞎猜。如果你认为猜出了我说的人是谁，你肯定是错的，因为我说的不是某一个人。&lt;/p&gt;

&lt;p&gt;好了，回到正题。凡归国“牛人”写书，必然会有很多地方体现自己的身份和价值。所谓身份，一般就是自己跟外国大牛的关系。为什么一定要是外国大牛呢？因为中国人都瞧不起中国人，你跟他们攀上关系也没有用的。一定要是高鼻梁，黄头发的外国人，才会被人仰慕。&lt;/p&gt;

&lt;p&gt;提高身份和价值的一般的技巧是这样：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;微博，微信公众号，书名，标题，最好出现“硅谷”这个词。比如，“硅谷垠大大”，“垠老师在硅谷”，“硅谷论剑”，“硅谷那些事儿”，“相约在硅谷”…… 因为很多中国人都崇拜硅谷的技术，认为是牛人辈出的地方，所以这个词可以有效的显示自己的来历。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;介绍自己所钻研的学术背景和本领域的牛人。一定要把它说成是一门艰深的科学，要介绍这门学问的鼻祖是谁，如果能扯到图灵或者某位图灵奖得主身上，那最好了。要介绍这门学科先驱者都有哪些重要人物。切记，最好使用“世界级”，“诺贝尔奖”，“图灵奖”一类的标识语。你可以放心的用这些词，而不用担心别人觉得你吹牛。因为你是在赞美其他人而不是自己，所以怎么说都不会让人觉得你在吹牛逼。你先把他们捧上去，在人们心中建立起地位，然后你再往他们身边一站，就立马显示出等级来了不是吗！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;巧妙的显示出自己与这些世界级大牛有关系。注意“巧妙”二字，切不可像垠神那样，直接说我上过那人的课，得了 A+！那是会被人笑掉大牙的，立马会被认为是在吹牛逼 :p 正确的做法是含蓄一点，自然地引入你认识的，或者见过的一个牛人，我们假设他叫“牛人甲”。如果能把他跟之前的先驱者们联系起来就更好了。然后呢，采用这样的套路：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;套路1：牛人甲的学识之高深，情操之高雅，真是让人佩服。在学校的时候，他常常对我说：“……” 我从他身上学到了很多做学问，做人的道理。&lt;/p&gt;

        &lt;p&gt;省略号的部分是他说了这么，这其实不要紧。最重要的部分，是“他常常对我说”。这显示出我跟这个牛人认识，而且因为“常常”这个修饰语，暗示这不是普通的交情。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;套路2：我当年在某大学/某公司的时候，牛人甲的办公室就在我对面。我经常看到他埋头苦想……&lt;/p&gt;

        &lt;p&gt;这种套路要稍微弱一些。因为你只是见过这个大牛，没有显示出你传承了他的什么优点。但你能如此近距离的观察到这个人，足以显示出你还是受到过熏陶的。之前提到“某大学/某公司”，多半也是名校，会彰显你的身价。&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;套路3：待补充……&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;微信公众号和朋友圈的宣传。最好开通微信公众号，或者使用微信朋友圈。里面的内容最好是显示你有“事业心”的那种。千万别晒猫，别晒吃的，别谈生活上的事情，不然有损自己事业家的形象。其实这些都不用自己写，你转载也会有效果。内容可以是：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;业界最新动态。比如各种黑科技，自动驾驶车，量子计算机，AlphaGo 战胜人类，iPhone X 人脸解锁技术，SpaceX 火箭着陆…… 注意要有选择，要有逼格。不要选择便宜的东西，或者看起来没有难度的。中国人都喜欢昂贵的，困难的，自己买不起，没法做出来的东西。&lt;/li&gt;
      &lt;li&gt;职场新闻。比如某牛人跳槽了，年薪上亿美元。某竞赛金牌得主加入了某牛公司，等等。&lt;/li&gt;
      &lt;li&gt;职场技巧。比如，如何高效的管理一个大型项目团队。如何在职场发展，如何升职加薪，如何转管理岗位之类的话题。这些内容都可以去 LinkedIn 找。当然你知道，这些文章基本都是假话，告诉你除了努力工作没有其他办法一类的。但你要向有权势的人表明，你认同他们让员工加班的作法，这样他们才会提拔你啊。到时候你成了奴隶主的手下，只需要指指点点，就不用担心加班了。重要的是要站对队伍。不要跟王垠一样，总是站在工人阶级一边的样子，甚至骂自己的前雇主残酷压榨。哪个奴隶主敢请这样的人做高层领导呢？注定一辈子做奴隶！&lt;/li&gt;
      &lt;li&gt;牛人文章或者讲座。跟专业相关的牛人讲座，可以转载视频或者博客。文字部分最好显示你好像认识这个人。比如你可以说：“王老师说得好！” 或者说：“王老师还是跟以前一样思维清晰啊。当年在xx牛校的时候，他如何呕心沥血的栽培我……”&lt;/li&gt;
      &lt;li&gt;构架分析。不要像垠神一样，写什么“Java有值类型吗”，“编程的智慧” 这样的文章。人家看不懂也就看不出你的水平，看得懂的肯定都是搬砖的，帮不了你爬高。要写就写“某独角兽公司内部大数据体系构架解析”，“xx公司自建分布式支付体系构架”。构架，懂吗？要是大局的！里面一定要有一堆线框图一类的东西，箭头指来指去的。反正别人也不会仔细看，看了也不知道管不管用。各种开源软件的名字要罗列一大堆，说你们试过很多这些东西，发现各自有优缺点，之类的。这些文章可以自己写点，也可以转载或者抄来。反正到处都有这种文章，大家都是拿开源软件拼凑在一起，谁也不知道其中一部分是抄来的。这种构架分析，一方面显示出你是懂一些技术的，一方面显示出你不是做基础编程工作，写底层数据结构的码农，而至少是构架师，团队带头人级别的。&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;互相吹捧。垠神最大的错误，就是自吹自擂。自己在那里说比别人懂得多，管你是不是真懂，当然要被人黑啦。王婆卖瓜，自卖自夸！所以呢，不要自己吹自己，要让别人来吹自己。拉拢几个人，好像不认识你，只是看过你的作品的样子，到知乎一类的网站上去表扬你，在“某某是什么样的人”这样的问题下面回答，说你学识渊博，做人低调，踏踏实实…… 有时候也可以在关于王垠之类大家都黑的人的问题上回答一句：“王垠就是个吹牛逼的！上次我问他那啥，他跟我说了一通，其实他自己都没弄明白。你看人家某某，比他踏实多了，还不会这么嚣张。王垠就是个吹牛逼的，某某才是真牛逼……” 看到没，只顺带一句，你的学识和人品就显示出来了！看到这句话的人产生好奇，不免去找你的资料，然后你可能就多了一个粉丝。当然，你也不要忘了回馈帮助过你的人。在微博或者朋友圈，也要提携人家。别人写了书，别忘了发个简短的封面照，说你看了这个作者送你的书，终于理解了他的深邃思想，等等。这样大家才能处于一种互惠互利的地位，那帮屌丝转来转去，还不是只有看我们的书，听我们的话啊，对不对？&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;关心年轻人的成长，树立正面榜样。中国的名人们还有一个策略，那就是从年轻人那里开始做工作。他们会像唐僧一样地宣讲：我很关心年轻人的成长，你们应该要诚信，要善良，学会做人，我来解答你们的疑惑…… 这就跟希拉里老是向年轻女性宣传一样：年轻女孩们，不要怕，你能行的，Strong，Together！全是空话，没有实际效果，但是非常&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/05/22/positive-thinking&quot;&gt;正面&lt;/a&gt;，鼓舞人心。用这样的方式，确实很容易树立起好人的形象。然后随便你说什么他们都支持，都相信你了，即使你开始损害他们的利益，从中牟利 ;)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;继续分析中，待续……&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-02-24-chinese-fame</guid>
<pubDate>Sat, 24 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>智能合约和形式验证</title>
<link>https://henix.github.io/feeds/yinwang/2018-02-22-smart-contract.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/02/22/smart-contract&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;智能合约的形式验证&lt;/h2&gt;
            &lt;p&gt;在之前一篇&lt;a href=&quot;http://www.yinwang.org/blog-cn/2017/04/23/ai&quot;&gt;关于人工智能的文章&lt;/a&gt;里，我指出了“自动编程”的不可能性。今天我想来谈谈一个相关的话题：智能合约的形式验证。有些人声称要实现基于“深度学习”的，自动的智能合约形式验证（formal verification），用于确保合约的正确性。然而今天我要告诉你的是，跟自动编程一样，完全自动的合约验证，也是不可能实现的。&lt;/p&gt;

&lt;p&gt;随着区块链技术的愈演愈烈，很多人开始在以太坊的“智能合约语言”上做文章。其中一部分是搞 PL 的人，他们试图对 Solidity 之类语言写的智能合约进行形式验证，号称要用严密的数理逻辑方法，自动的验证智能合约的正确性。其中一种方法，是用“深度学习”，经过训练，自动生成 Hoare Logic 的“前条件”和“后条件”。&lt;/p&gt;

&lt;h3 id=&quot;hoare-logic&quot;&gt;Hoare Logic&lt;/h3&gt;

&lt;p&gt;我好像已经把你搞糊涂了…… 我们先来科普一下 Hoare Logic。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Hoare_logic&quot;&gt;Hoare Logic&lt;/a&gt; 是一种形式验证的方法，用于验证程序的正确性。它的做法是，先给代码标注一些“前条件”和“后条件”（pre-condition 和 post-condition），然后就可以进行逻辑推理，验证代码的某些基本属性，比如转账之后余额是正确的。&lt;/p&gt;

&lt;p&gt;举一个很简单的 Hoare Logic 例子：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{x=0}   x:=x+1   {x&amp;gt;0}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;它的意思是，如果开头 x 等于 0，那么 x:=x+1 执行之后，x 应该大于 0。这里的前条件（pre-condition）是 x=0，后条件（post-condition）是 x &amp;gt; 0。如果 x 开头是零，执行 &lt;code class=&quot;highlighter-rouge&quot;&gt;x:=x+1&lt;/code&gt; 之后，x 就会大于 0，所以这句代码就验证通过了。&lt;/p&gt;

&lt;p&gt;Hoare Logic 的系统把所有这些前后条件和代码串接起来，经过逻辑推导验证，就可以作出这样的保证：在前条件满足的情况下，执行代码之后，后条件一定是成立的。如果所有这些条件都满足，系统就认为这是“正确的程序”。注意这里的所谓“正确”，完全是由人来决定的，系统并不知道“正确”是什么意思。&lt;/p&gt;

&lt;p&gt;Hoare Logic 对于程序的安全性，确实可以起到一定的效果，它已经被应用到了一些实际的项目。比如微软 Windows 的驱动程序代码里面，有一种“安全标注语言”，叫做 SAL，其实就是 Hoare Logic 的一个实现。然而前条件和后条件是什么，你必须自己给代码加上标注，否则系统就不能工作。&lt;/p&gt;

&lt;p&gt;比如上面的例子，系统如何知道我想要“x&amp;gt;0”这个性质呢？只有我自己把它写出来。所以要使用 Hoare Logic，必须在代码上标注很多的 pre-condtion 和 post-condition。这些条件要如何写，必须要深入理解程序语言和形式逻辑的原理。这个工作需要经过严格训练的专家来完成，而且需要很多的时间。&lt;/p&gt;

&lt;h3 id=&quot;自动生成标注是不可能的&quot;&gt;自动生成标注是不可能的&lt;/h3&gt;

&lt;p&gt;所以即使有了 Hoare Logic，程序验证也不是轻松的事情。于是呢就有人乘火打劫，提出一个类似减肥药的想法，声称他们要用“深度学习”，通过对已有标注的代码进行学习，最后让机器自动标注这些前后条件。还在“空想”阶段呢，却已经把“自动标注”作为自己的“优势”写进了白皮书：“我们的方法是自动的，其他的项目都是手动的……”&lt;/p&gt;

&lt;p&gt;很可惜的是，“自动标注”其实跟“自动编程”是一样的空想。自动编程的难点在于机器没法知道你想要做什么。同理，自动标注的难点在于，机器没法知道你想要代码满足什么样的性质（property）。&lt;/p&gt;

&lt;p&gt;除非你告诉它，机器永远无法知道函数参数必须满足什么样的条件（前条件），它也无法知道函数出口应该满足什么样的条件（后条件）。比如上面的那个例子，机器怎么知道你想要程序执行之后 x 大于零呢？除非你告诉它，它是不可能知道的。&lt;/p&gt;

&lt;p&gt;你也许会问，深度学习难道不能帮上忙吗？想想吧…… 你可以给深度学习系统上千万行已经标注前后条件的代码。你可以把整个 Windows 系统，整个 Linux 系统，FireFox 的代码全都标注好，再加上一些战斗机，宇宙飞船的代码，输入深度学习系统进行“学习”。现在请问系统，我下面要写一个新的函数，你知道我想要做什么吗？你知道我希望它满足什么性质吗？你仍然不知道啊！只有我自己才知道：它是用来自动给我的猫铲屎的 :p&lt;/p&gt;

&lt;p&gt;所以，利用深度学习自动标注 Hoare Logic 的前后条件，跟“自动编程”一样，是在试图实现“读心术”，那显然是不可能的。作为资深的 PL 和形式验证专家，这些人应该知道这是不可能自动实现的。他们提出这样的想法，并且把它作为相对于其他智能合约项目的优势，当然只是为了忽悠外行，为了发币圈钱 ;)&lt;/p&gt;

&lt;p&gt;如果真能用深度学习生成前后条件，从而完全自动的验证程序的正确性，那么这种办法应该早就在形式验证领域炸锅了。每一个形式验证专家都希望能够完全自动的证明程序的正确性，然而他们早就知道那是不可能的。&lt;/p&gt;

&lt;p&gt;设计语言来告诉机器我们想要什么，什么叫做“正确”，这本身就是 PL 专家和形式验证专家的工作。设计出了语言，我们还得依靠优秀的程序员来写这些代码，告诉机器我们想要做什么。我们得依靠优秀的安全专家，给代码加上前后条件标注，告诉机器什么叫做“正确安全的代码”…… 这一切都必须是人工完成的，无法靠机器自动完成。&lt;/p&gt;

&lt;p&gt;说到这些，我就为这些学者感到悲哀，想不鄙视他们都不行了 :p 很早的时候我就有这种感觉，总是有些 PL 人看到什么方向有钱就往什么方向上靠，拿一堆吓人的术语来忽悠外行。管它一个外行设计的语言有多垃圾呢，我们帮它做形式验证工具，我们为它写编译器，写虚拟机，为它提出“形式化语义”（formal semantics）！给外行打下手，给母猪涂口红，完全失去作为一个专家的责任感和尊严。&lt;/p&gt;

&lt;p&gt;现在这种风气愈演愈烈，随着比特币和以太坊的热门，他们开始在 Solidity 之类的语言和智能合约上做文章。新瓶子装老酒，反反复复做同样的事情。甚至完全失去职业道德，号称要实现一些早就知道不可能的事情。现在最热门的两个投资方向就是人工智能和区块链，现在我用机器学习来验证区块链智能合约的正确性，两个热点都占全了！;)&lt;/p&gt;

&lt;p&gt;显然，我也可以轻而易举做出对智能合约进行某种“验证”或者“静态分析”的工具，然而我深刻的理解数理逻辑对于程序正确性的局限性。很多代码没法被证明为正确，但它们确实是正确的。很多代码有 bug，却没有任何工具可以发现它们。这是一个不幸的事实，就像无法实现永动机一样，没有任何人能够改变。&lt;/p&gt;

&lt;p&gt;当然，我并没有排除对智能合约手动加上 Hoare Logic 标记这种做法的可行性，它是有一定价值的。我只是想提醒大家，这些标记必须是人工来写的，不可能自动产生。另外，虽然工具可以有一定的辅助作用，但如果写代码的人自己不小心，是无法保证程序完全正确的。&lt;/p&gt;

&lt;p&gt;如何保证智能合约的正确呢？这跟保证程序的正确性是一样的问题。只有懂得如何写出干净简单的代码，进行严密的思考，才能写出正确的智能合约。关于如何写出干净，简单，严密可靠的代码，你可以参考我之前的一些文章。&lt;/p&gt;

&lt;p&gt;做智能合约验证的工作也许能圈到钱，然而却是非常枯燥而没有成就感的。为此我拒绝了好几个有关区块链的合作项目。虽然我对区块链的其它一些想法（比如去中心化的共识机制）是感兴趣的，我对智能合约的正确性验证一点都不看好。&lt;/p&gt;

&lt;h3 id=&quot;智能合约不可行&quot;&gt;智能合约不可行&lt;/h3&gt;

&lt;p&gt;实际上，我认为智能合约这整个概念就不靠谱。比特币和以太坊的系统里面，根本就不应该，而且没必要存在脚本语言。我认为智能合约系统在当前阶段并不可行。&lt;/p&gt;

&lt;p&gt;比特币的解锁脚本执行方式，一开头就有个低级错误，导致 injection 安全漏洞。用户可以写出恶意代码，导致节点的运行时系统出错。我不可想象，在 2009 年仍然有人把两段代码以文本方式贴在一起，然后执行。稍微有点经验的黑客都知道这里很可能有可攻击的点。&lt;/p&gt;

&lt;p&gt;以太坊的 Solidity 语言一开头就有低级错误，导致价值五千万美元的以太币被盗。以太坊的智能合约系统消耗大量的计算资源，还导致了严重的性能问题。可以说比特币和以太坊的作者都是 PL 外行，然而如果是内行来做这些语言，难道就会更好吗？我并不这么认为。&lt;/p&gt;

&lt;p&gt;如果换做是我设计了比特币，我不会为它设计一种语言。让用户可以编程是很危险的！不仅是因为极少的用户能够写出正确而可靠的代码，而且因为语言系统的实现极少可以不出现 bug。语言系统的设计错误，会给黑客可乘之机，写出恶意脚本来进行破坏。从来没有任何语言和他们的编译器，运行时系统是一开头就正确的，都需要很多年才能稳定下来。另外一旦你让系统来运行这些语言的代码，又会需要考虑性能的问题。这对于普通的语言问题不大，你不要用它来控制飞机就可以。然而电子货币系统的语言，几乎不允许出现这方面的问题。&lt;/p&gt;

&lt;p&gt;所以与其提心吊胆的设计这些智能合约语言，还不如干脆不要这种功能。&lt;/p&gt;

&lt;p&gt;而且我们真的需要那些脚本的功能吗？比特币虽然有脚本语言，可是常用的脚本其实只有不超过 5 个，直接 hard code 进去就可以了。以太坊的白皮书虽然做了那么多的应用展望，EVM 上出现过什么有价值的应用吗？我并不觉得我们需要这些智能合约。电子货币只要做好一件事，能被安全高效的当成钱用，就已经不错了。&lt;/p&gt;

&lt;p&gt;美元，人民币，黄金…… 它们有合约的功能吗？没有。为什么电子货币一定要捆绑这种功能呢？我觉得这是不够模块化的设计。电子货币就应该像货币一样，能够实现转账交换的简单功能就可以了。合约应该是另外单独的系统，不应该跟货币捆绑在一起。&lt;/p&gt;

&lt;p&gt;那合约怎么办呢？交给律师和会计去办 :) 你有没有想过，为什么世界上的法律系统不是程序控制自动执行的呢？为什么我们需要律师和法官，而不只是机器人？这不只是历史遗留问题。需要理解法律的本质属性才会明白，完全不通过人来进行的机械化执法是不可行的。&lt;/p&gt;

&lt;p&gt;奢望过多的功能其实是一种过度工程（over-engineering）。花费精力去折腾智能合约系统，将会大大的延缓电子货币真正被世界接受。实话说嘛，试用了多种电子货币之后，我发现它们的技术相当有趣，但其实仍然处于玩具和试验阶段，基本无法作为货币使用。绝大部分电子货币都在等着被淘汰。它们的发展方向存在着各种迷茫，很多人走向歧途，或者各种忽悠。&lt;/p&gt;

&lt;h3 id=&quot;待续&quot;&gt;待续……&lt;/h3&gt;

&lt;p&gt;这篇文章可能对于比特币，区块链方向的投资者有很大的价值。如果我拯救了你的投资，欢迎你给我&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/04/13/pay-blog&quot;&gt;付费&lt;/a&gt;支持，一个 BTC 就可以 ;)&lt;/p&gt;

&lt;p&gt;另外，我对于区块链技术还有挺多可以研究可以写的，好的不好的方面都有。甚至也许将来可以变成一本书。如果你觉得有收获，希望我继续发布这方面的内容，也可以付款鼓励一下，也欢迎联系我讨论你的看法。&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-02-22-smart-contract</guid>
<pubDate>Thu, 22 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>自动编程和自动形式验证</title>
<link>https://henix.github.io/feeds/yinwang/2018-02-22-automatic-programming.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/02/22/automatic-programming&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;自动编程和自动形式验证&lt;/h2&gt;
            &lt;p&gt;（这是之前关于人工智能的文章里面的一节。由于它关系到我最近发现的一些现象，所以把它提取出来，扩展之后单独成文。）&lt;/p&gt;

&lt;p&gt;有人听说我想创业，给我提出了一些“忽悠”的办法。他们说，既然你是程序语言专家，而现在人工智能（AI）又非常热，那你其实可以搞一个“自动编程系统”，号称可以自动生成程序，取代程序员的工作，节省许许多多的人力支出，这样就可以趁着“AI 热”拉到投资。&lt;/p&gt;

&lt;p&gt;有人甚至把名字都给我想好了，叫“深度程序员”（DeepCoder = Deep Learning + Coder）。口号是：“有了 DeepCoder，不用 Top Coder！” 还有人给我指出了这方向最新的，吹得神乎其神的研究，比如微软的 &lt;a href=&quot;http://www.jiqizhixin.com/article/2691&quot;&gt;Robust Fill&lt;/a&gt;……&lt;/p&gt;

&lt;h3 id=&quot;自动编程是不可能的&quot;&gt;自动编程是不可能的&lt;/h3&gt;

&lt;p&gt;我现在可以很简单的告诉你，自动编程是不可能实现的。微软的 &lt;a href=&quot;http://www.jiqizhixin.com/article/2691&quot;&gt;Robust Fill&lt;/a&gt; 之类，全都是在扯淡。我对微软最近乘着 AI 热，各种煽风点火的做法，表示少许鄙视。不过微软的研究员也许知道这些东西的局限，只是国内小编在夸大它的功效吧。&lt;/p&gt;

&lt;p&gt;你仔细看看他们举出的例子，就知道那是一个玩具问题。人给出少量例子，想要电脑完全正确的猜出他想做什么，那显然是不可能的。很简单的原因，例子不可能包含足够的信息，精确地表达人想要什么。最最简单的变换也许可以，然而只要多出那么一点点例外情况，你就完全没法猜出来他想干什么。就连人看到这些例子，都不知道另一个人想干什么，机器又如何知道？这根本就是想实现“读心术”。甚至人自己都可以是糊涂的，他根本不知道自己想干什么，机器又怎么猜得出来？所以这比读心术还要难！&lt;/p&gt;

&lt;p&gt;对于如此弱智的问题，都不能 100% 正确的解决，遇到稍微有点逻辑的事情，就更没有希望了。论文最后还“高瞻远瞩”一下，提到要把这作法扩展到有“控制流”的情况，完全就是瞎扯。所以 RobustFill 所能做的，也就是让这种极其弱智的玩具问题，达到“接近 92% 的准确率”而已了。另外，这个 92% 是用什么标准算出来的，也很值得怀疑。&lt;/p&gt;

&lt;p&gt;任何一个负责的程序语言专家都会告诉你，自动生成程序是根本不可能的事情。因为“读心术”是不可能实现的，所以要机器做事，人必须至少告诉机器自己“想要什么”，然而表达这个“想要什么”的难度，其实跟编程几乎是一样的。实际上程序员工作的本质，不就是在告诉电脑自己想要它干什么吗？最困难的工作（数据结构，算法，数据库系统）已经被固化到了库代码里面，然而表达“想要干什么”这个任务，是永远无法自动完成的，因为只有程序员自己才知道他想要什么，甚至他自己都要想很久，才知道自己想要什么……&lt;/p&gt;

&lt;p&gt;有句话说得好：编程不过是一门失传的艺术的别名，这门艺术的名字叫做“思考”。没有任何机器可以代替人的思考，所以程序员是一种不可被机器取代的工作。虽然好的编程工具可以让程序员工作更加舒心和高效，任何试图取代程序员工作，节省编程劳力开销，克扣程序员待遇，试图把他们变成“可替换原件”的做法（比如 Agile，TDD），最终都会倒戈，使得雇主收到适得其反的后果。同样的原理也适用于其它的创造性工作：厨师，发型师，画家，……&lt;/p&gt;

&lt;p&gt;所以别妄想自动编程了。节省程序员开销唯一的办法，是邀请优秀的程序员，尊重他们，给他们好的待遇，让他们开心安逸的生活和工作。同时，开掉那些满口“Agile”，“Scrum”，“TDD”，“&lt;a href=&quot;http://www.yinwang.org/blog-cn/2015/06/07/software-engineering&quot;&gt;软件工程&lt;/a&gt;”，光说不做的扯淡管理者，他们才是真正浪费公司资源，降低开发效率和软件质量的祸根。&lt;/p&gt;

&lt;h3 id=&quot;自动形式验证是不可能的&quot;&gt;自动形式验证是不可能的&lt;/h3&gt;

&lt;p&gt;最近由于比特币和以太坊很热门，很多人开始在以太坊的“智能合约语言”上做文章。其中一部分是搞 PL 的人，他们试图对 Solidity 之类语言写的智能合约进行形式验证（formal verification），号称要用数学的方法，自动的验证程序的正确性。&lt;/p&gt;

&lt;p&gt;其中一种办法，是给代码的函数加上“前条件”和“后条件”（pre-condition 和 post-condition），这样就可以使用 &lt;a href=&quot;https://en.wikipedia.org/wiki/Hoare_logic&quot;&gt;Hoare Logic&lt;/a&gt; 的办法来证明一些代码的基本属性，比如转账之后余额是正确的。&lt;/p&gt;

&lt;p&gt;虽然 Hoare Logic 并不能完全的保证程序的正确，它确实可以起到一定的效果。然而要使用 Hoare Logic，必须人工写上很多 pre-condtion 和 post-condition。这些条件要如何写，必须要很深入的理解程序语言和形式验证。这个工作必须有经过多年严格训练的专家来完成。&lt;/p&gt;

&lt;p&gt;世界上可以完成这种工作的专家，是非常少的，他们要求的报酬，也会非常高。所以呢，这些提出这种验证想法的 PL 人，就提出一个想法，他们要用“深度学习”的方法，通过对手写的前后条件进行机器学习，自动的生成这些前后条件。他们把这种“自动加条件”的特性，作为自己相对于其他手动验证方法的优点。&lt;/p&gt;

&lt;p&gt;很可惜的是，“自动加条件”这种做法，其实跟“自动编程”是一样的，它完全的符合我在上一节指出的特征。自动编程的难点在于机器没法知道你想要什么，而自动加条件的难度在于，机器没法知道程序应该满足什么样的“特性”（property）。除非你告诉它，机器永远没有办法知道一个进入函数的时候，参数必须满足什么样的条件。同理它也不可能知道你想要在函数的出口满足什么条件。&lt;/p&gt;

&lt;p&gt;试图用深度学习加上前后条件，这是同样的试图实现“读心术”的做法。这是根本不可能的，而且作为资深的 PL 和形式验证专家，这些人应该知道这是不可能的！他们提出这样的想法，并且把它作为相对于其他智能合约项目的优势，显而易见只是为了发币圈钱 ;)&lt;/p&gt;

&lt;p&gt;如果真能用深度学习生成前后条件，自动的验证程序的正确性，那么这种办法应该早就在形式验证领域出现了。每一个形式验证专家都希望能够自动的证明程序的正确性，然而他们早就知道那是不可能的。&lt;/p&gt;

&lt;p&gt;我为这些学者感到悲哀。很早的时候我就有这种感觉，总是有些 PL 人看到什么方向有钱就往什么方向钻，管它语言有多垃圾呢，我们帮它做验证工具，我们为它写编译器，写虚拟机！完全没有作为一个专家的尊严。现在这种风气愈演愈烈，随着比特币和以太坊的热门，他们开始在 Solidity 之类的语言和智能合约上做文章。&lt;/p&gt;

&lt;p&gt;很显然，我也可以轻而易举做出对智能合约进行某种“验证”或者“静态分析”的工具，然而我深刻的知道，数理逻辑对于程序正确性的局限。很多程序是没法证明为正确，但它们确实是正确的。做这样的工作也许能圈到钱，然而却是非常枯燥而没有成就感的。为此，我拒绝了好几个区块链圈子里的合作，因为他们想利用我这方面的才能。我对智能合约的正确性验证不感兴趣，虽然我对区块链的其它一些部分是感兴趣的 ;)&lt;/p&gt;

&lt;p&gt;如何保证智能合约的正确呢？你只有懂得如何写出正确的代码，非常小心。另外，静态分析和测试也可以有一些帮助，但要记住它们其实没法证明程序的正确。对于这个问题，你可以参考我的&lt;a href=&quot;http://www.yinwang.org/blog-cn/2015/07/02/program-correctness&quot;&gt;这篇文章&lt;/a&gt;。&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-02-22-automatic-programming</guid>
<pubDate>Thu, 22 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>体验中国社会</title>
<link>https://henix.github.io/feeds/yinwang/2018-02-20-experience-china.html</link>
<description>&lt;p&gt;&lt;a href=&quot;http://www.yinwang.org/blog-cn/2018/02/20/experience-china&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;script&gt;
            if (/mobile/i.test(navigator.userAgent) || /android/i.test(navigator.userAgent))
            {
               document.body.classList.add(&#39;mobile&#39;);
            }
        &lt;/script&gt;&lt;div class=&quot;inner&quot;&gt;
            &lt;h2&gt;体验中国社会的计划&lt;/h2&gt;
            &lt;p&gt;密切关注我的博客的人，也许看过我大年初一写的那篇批评成都人的文章。我进而对“中国人”产生了负面情绪，进一步的把自己封闭起来。虽然对于成都和四川的文化，我的认识还是比较准确的。然而，由于我没有足够的样本数据，我觉得自己还没有资格对“中国人”这么广泛的概念产生那样的结论。&lt;/p&gt;

&lt;p&gt;过度和过快的对事物提炼出”规律“（over generalize），可以说是我这个人最大的缺点。这个缺点让我损失了许许多多美好的机会。我现在决定了，要正视自己的这一缺点，改进自己。当然，我应该对我说过的话道个歉，虽然我很可能没有伤害到任何人。因为很多人都知道，我说的多半不是真的 :)&lt;/p&gt;

&lt;p&gt;我现在深刻的认识到了一个问题，那就是我还不完全了解社会和人，虽然我对他们的很多见解是很深入的。我不完全了解美国社会，更不了解中国社会。回到中国的时候，我的心理处于一种半封闭的状态。这种状态让我无法真实的去体验和理解中国社会。&lt;/p&gt;

&lt;p&gt;这种封闭的心理，来源于我在美国的很多不顺利的工作经历，我受到的各种完全不符合自己身份和地位的对待。当回到中国的时候，我对自己说：“我不想再为别人工作。我想创业，做自己的事情！” 所以回到中国之后，我孤注一掷的想创立自己的事业。然而几个月过去之后，我发现这也许并不是最好的办法。&lt;/p&gt;

&lt;p&gt;独自一人创造东西，是完全有可能的。我有网络，我还有可以联系的朋友。然而这样的社交环境，让我无法真正的接触到主流的中国社会。在很长的一段时间内，我每天遇到的人，除了我的父母，就是商店饭店的服务员，路人，还有零星的几个朋友，分布在中国的好几个城市。&lt;/p&gt;

&lt;p&gt;我接触到的人，由于他们各自的局限性，远远不足以让我体验中国的社会和生活。依据这些数据所得出的推论，显然是很偏激而荒谬的。我的回国体验，可以说是不大顺利的。我在中国并没有一个理解和支持我的家庭。我确实在考虑回到美国，而且我知道过一段时间我一定会回去。然而我不想现在就放弃，因为我还没有开始体验中国。我希望快乐和充实的度过自己在国内的这段时光，反正将来我在世界各地也是来去自由的，我将来一定会再回到我有过良好体验的地方 :)&lt;/p&gt;

&lt;p&gt;为了融入和体会真实的中国社会，似乎最好的办法，还是跟其他人一起在公司工作。根据之前在美国公司的经验，朋友都是需要经过长期的面对面的接触，不知不觉体会各自的节奏，才会产生的。人们的心之间总是有各种各样的误解和不理解。公司这样一种环境，使得人们之间形成一种自然的互相了解关系。时间久了，就知道谁是合得来的，谁是应该敬而远之的。&lt;/p&gt;

&lt;p&gt;这种感情可以如此深厚。我在美国的很多同事现在都很想念我，盼望我早日回到美国。这包括在 Shape Security 的很多同事，也包括在微软的同事。虽然微软的领导对待人的方式很不尊重，然而我其实很喜欢我微软的同事。在微软的每一天，我都跟一群印度人，两个美国人，还有一个哈萨克斯坦同事一起吃饭，一起散步。他们是一群很可爱的人，饭桌上我们分享的都是自己如何享受周末，各种有趣的事情，很少说一些功利世俗的东西。我知道他们很怀念我，我也很怀念他们。&lt;/p&gt;

&lt;p&gt;所以呢，出于融入社会的需求，我决定在研究自己创业项目的同时，加入某些公司的团队，跟他们一起工作。刚回国的时候，我觉得回国再给别人打工，是一种耻辱，所以一直避免表达这种想法。然而人工作的目的可以有很多种，有人为了生存而工作，有人为了家庭而工作，有人为了钱而工作，有人为了虚荣而工作，有人为了乐趣而工作。不管是为了什么目的，工作都是值得尊敬的事情，也是每个人的合法权利。&lt;/p&gt;

&lt;p&gt;休息了几个月之后，我不缺钱，可是我真的想工作了。我工作的目的，是为了有更多的朋友和合作伙伴，为了真正的融入和理解中国社会，也是为了让更多的人了解我，跟我互相学习。&lt;/p&gt;

&lt;p&gt;我很理解，自己在美国公司的多次不愉快经历，以及不顾后果的曝光，可能使人会有所顾虑，担心要是我不高兴了，又要公开很多事情。再加上很多对我存在嫉妒或者其它不健康心理的人曲解和误传我的言论，有些人没直接看过我写的东西，就以为王垠是一个自大，目中无人的人。&lt;/p&gt;

&lt;p&gt;对于第一点，我确实得承认有些时候我确实过度公开了一些事情。虽然某些公司的极端恶劣的作法确实应该进行谴责和披露，但普通的不愉快经历，确实属于个人隐私，不应该在博客上披露。对于有些人的顾虑，我当然很可能无法改变。但我确实已经意识到这个问题，并且决定以后只对关系亲密的朋友私下交流，而不再在博客上公开这种事情。&lt;/p&gt;

&lt;p&gt;对于第二点呢，我确实应该让更多的人了解，现实世界的王垠是什么样的人 :) 没见过我的人听了别人的传言，可能确实会以为我是一个恃才傲物，固执己见，难以合作的人。然而真正跟我相处过的合作伙伴，我以前的同事，公司的前台，HR，打扫清洁的大妈，食堂和小卖部的服务员…… 都会告诉你，王垠对待他们是如何尊重而有礼貌，没有一点点的架子，完全看不出来他是做什么的 :)&lt;/p&gt;

&lt;p&gt;实际上，我是如此的尊重身边的人，几乎完全不显示锋芒。以至于不理解这一点的人，心里存在自傲的人，反而会觉得我好欺负，以至于出现一些不尊重的现象。有个朋友告诉我，很多人有这样一种“屌丝心理”，他们只尊重那些鄙视他们的人，他们喜欢被鄙视。你对他们友好谦虚一些，他们反而觉得自己高你一等，于是对你开始采取居高临下的姿态……&lt;/p&gt;

&lt;p&gt;我歧视理解这种心理。我明白，在合适的时候，我应该采取“权威”的，甚至强硬的语气。可是呢，我这个人就是太有礼貌太随和了，真的没法对人采取这种语气。&lt;/p&gt;

&lt;p&gt;给你讲个故事吧，我之前的一个工作，开头是一个很“仰慕”我的人邀请我加入的。但这个人之前从来没见过我，也没有跟我有网络的交流，只是听说我的名气，知道我是研究 PL 的。我觉得这个公司不错，就加入了他的团队。&lt;/p&gt;

&lt;p&gt;当然，开始工作之后，我采取自己一贯的友好而尊重他人的风格。我不会也不可能采取权威式的口气。然而过了一段时间之后，我发现自己的谦虚和随和，“导致”了一个严重的问题。那就是邀请我加入公司的那位队友，开始向我显示出他自己的 ego。显然，他开始觉得自己对于 PL 懂得比我还多。对于很多专业的问题，编程的技巧，他开始对我显露出一种“教育新手”一样的姿态，甚至采用很不尊重的运气说话，像在对一个小学生说话……&lt;/p&gt;

&lt;p&gt;当然，作为一个受过很多年专业教育的 PL 专家，具有精华的编程技术的专业人士，我对于这样的态度并不是可以容忍的。我虽然从来不对水平低于我的人采用居高临下的态度，可是我不可能接受水平低于我的人，反而对我采取居高临下的态度。实话说吧，这个人的各种言论当中，都暴露出他只是一个 PL 的民科，对于很多概念只知道名字，却完全不理解其中的内涵。出于尊重，我从来也没有当面指出这一点。然而到后来，他却开始自高自大起来，处处显示自己聪明，甚至开始“教我”一些他自己都没搞清楚的东西，让我非常的无语 :p&lt;/p&gt;

&lt;p&gt;明白了吗？这就是你们心目中的那个“自大”的王垠。不是我鄙视别人，而是别人喜欢鄙视我，毫无理由的鄙视，只是为了满足他们自己的虚荣和 ego。我知道改变人的心，几乎是不可能的。只有当他们真正理解到自己的缺点，才会懂得如何尊重一个人，如何尊重一个专家。&lt;/p&gt;

&lt;p&gt;解释了这么多，我只是希望避免误会，我不希望由于别人的误传而失去潜在的朋友。现在我来讲一下我对这份工作的要求：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;我的初步目的地，基本锁定在上海或者台湾。在几个月之前的考察中，我发现上海恐怕是中国大陆唯一可以满足我对于生活质量，社会秩序，城市建设，文化娱乐和人文素质的地方。由于长期在美国生活，我对于居住的环境有很高的标准。虽然我不贪图奢华和虚荣，然而我难以再生活在脏，乱，吵的环境下。我对房屋的装修，市政设施的清洁和坚固程度，设计的合理性，对于城市人口的基本素质，礼貌修养，对私人界限的尊重，有相当高的要求。在这种标准下，我发现上海似乎是中国大陆唯一可以满足这种需求的城市，一个真正符合国际标准的大都市。&lt;/p&gt;

    &lt;p&gt;另外如果有可能的话，我希望可以在台湾工作和生活一段时间。我对台湾人有非常好的印象，我认为台湾是一个传承了中华文明，又融合了西方文化优点的宝地。希望能够亲眼见到台湾，体验台湾的生活，认识更多的台湾朋友。&lt;/p&gt;

    &lt;p&gt;当然我也可能之后辗转到其它一些城市。但我希望上海或者台湾是这次“深入考察”的第一站。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;我的兴趣。目前我对分布式系统，分布式数据库，数字货币（区块链）之类的内容比较感兴趣。在国内的这几个月当中，我自己研究了不少这方面的内容，包括分布式系统的同步问题（paxos 一类的算法），数据库的设计，比特币，区块链的共识机制以及各种设计。其实，以太坊初期的好几个设计错误，包括导致被盗取价值五千万美元以太币的 Solidity 语言设计错误，我是一眼就看出来的，而且相关的设计原则，早就已经记录在我的一些文章里了。以太币的初期如果有我做顾问，而且有足够的发言权的话，那一切都是不可能发生的 :p 当然，我也发现现在的数字货币的发展方向有一些误区，很多忽悠和无用功都是我一眼就看得出来的。我可以帮助防止人们走弯路。&lt;/p&gt;

    &lt;p&gt;当然，我也不想把自己局限于自己在行的领域了。知识就像一个圆圈。知道的越多，就越是明白自己的无知。我对自己的圆圈外面的世界充满了好奇。所以呢，如果碰巧有人想请我去尝试一些很不一样的事情，我还是可能会感兴趣的。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;职责。我当然很清楚自己在这个领域的学术地位。所以呢，除非是一个管理很平坦的公司，否则我不会去做最基层的编程工作。我的职责应该是作为一个高级的构架师，设计者，研究员，一个导师，指导者和组织者。当然，这不是说我不会亲自写代码。显然，关键性的，创新的代码构造，应该是直接出自我之手。我指导下的团队成员的代码，应该由我亲自过目和推敲。我当然不愿意亲自去清理前人遗留下来的混乱的，无关紧要的代码，然而我的专业素养允许我去研究和分析已有代码的构造，发现它们的问题，并且利用自己的经验，指导其他人来清理，或者包装隔离这些东西。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;报酬。由于我工作的动机是为了融入和了解中国社会，我对报酬方面的需求不会高得离谱。我不希望由于薪酬的高标准，而阻碍我遇到说话投机的未来合作伙伴，也不希望给工作单位造成经济压力。但是注意了，出于个人尊严的需求和我本身的地位，我当然也是不接受低于国内普通收入水平的报酬的。曾经有认识我的人想请我去工作，一开口给我开出一个还不到国内程序员平均水平的工资。我视这种做法为不尊重，所以不考虑这样的合作。另外，我不是很在乎创业公司开出的期权。很多创业公司喜欢画饼，给比较多的期权，然后把现金工资压低。我必须声明一下，我不相信未来的股权，我只看眼前的现金收入。尊重我，理解我的人，不应该跟我玩这些数字游戏。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;工作强度。当然我早就听说国内的互联网公司的所谓“996”。显然，我是不可能担任有过多加班，没有个人生活的工作的，否则我就违背了自己工作的初衷。显然，我担任这样的创造性脑力工作，必须要有充裕的时间来享受自己的生活。我必须和同事朋友们有充裕的时间进行休闲娱乐活动。我不反对为了完成项目，偶尔超出工作时间，但那种长期进行“996”制度，加班风气过于严重，完全没有生活的公司，就不用考虑让我加入了。自己有时间玩，还找不到同事一起玩，那是多么悲惨的世界 :)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;同事的智商和技术水平。我对同事的智商和技术水平要求其实不高。我并不是在寻找一群天才一起工作，我是在寻找一群人类一起工作。相反，我很怕进入那种每个人都以为自己是天才的环境。不懂一些事情不要紧，只要我们怀有一颗互相学习的心。我跟水平不如我的人一起工作，从来没有合作的问题。我更看重的是人的心理成熟程度，他们的人格，而不是他们的智商。同理的，我一贯的产品设计宗旨，应该是让普通智商的人都会用，而不只是让聪明人会用。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;氛围。我不喜欢那种过度 geeky，喜欢互相吹捧，攀比或者羡慕，大家都自以为聪明了不起的环境。我希望遇到一群热爱生活，有幽默感，休息时聊些生活趣事，发掘有趣的事情的人。当然，我们必须互相欣赏和尊重。有些创业公司联系我，说很佩服我，但马上又说：“还有某某某天才，也加入了我们，干活非常快……” 这种套路也许对年轻不懂事的人管用，但对于我来说是一种不尊重的做法，所以我只好等他们先去学会如何尊重一个人。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;个人和公司隐私。我不会在博客上宣布我加入了某个公司或者离开了某个公司。我也不希望有人在网络上传言我加入了某个公司。我希望对我感兴趣的公司，是出于对我才华和实力的欣赏和尊重，而不是想利用我的名气来忽悠投资者。所以我要求，我的名字不可以出现在公司对外的主页上，以及其它的公开网络。也就是说，我在某个公司工作，除了公司相关人员和家人朋友，不应该有更多的人知道。我不喜欢国内总是有“某大牛加入了某公司，做某牛X项目”之类的新闻出现。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;好了，可能就说这么多。我不想留下 email 在这里，非诚勿扰 :) 如果你有诚意要想联系工作事宜的话，可以利用我的其中一个&lt;a href=&quot;http://www.yinwang.org/blog-cn/2016/04/13/pay-blog&quot;&gt;付款方式&lt;/a&gt;（支付宝或者微信），付款后进行留言，留下你的工作单位名称和 email 地址。我会跟你联系。&lt;/p&gt;

&lt;p&gt;注意请不要直接留下微信号，因为我的微信联系方式只用于已经有一定了解，有实时通讯需求的人。直接使用微信联系，是一种很容易产生误会的作法，所以恕我不加微信。另外，因为工作关系而加入的微信联系人，出于专业素养，我都会屏蔽不让看朋友圈，这是因为我的朋友圈信息完全属于个人生活和娱乐范畴，不对工作关系开放，请不用介意。谢谢！&lt;/p&gt;


        &lt;/div&gt;</description>
<author>yinwang0</author>
<guid isPermaLink="false">2018-02-20-experience-china</guid>
<pubDate>Tue, 20 Feb 2018 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
