<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>机器之心</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/</link>
<description>专业的人工智能媒体和产业服务平台</description>
<language>zh-cn</language>
<lastBuildDate>Wed, 02 May 2018 23:44:16 +0800</lastBuildDate>
<item>
<title>业界 | 微软提出基于程序图简化程序分析，直接从源代码中学习</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-02-1000000679_503258054.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ48eo2P-Y8ke7-4VxqmgnusXq0MNY-mThIo2eOpXS39qZcTQqpcAo*Y9i1p0Yy-FrY-5Qd2*El*vIac6PArTJM30=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    业界 | 微软提出基于程序图简化程序分析，直接从源代码中学习                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-02&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;&quot;&gt;微软研究博客&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Weiyang Liu等&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：路、刘晓坤&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;程序分析通常有两种方法，分别基于数理逻辑和自然语言理解。通过将程序表示成图结构，来自微软研究院和西门菲莎大学的研究者展示了一种结合二者的新方法，可以直接从源代码中学习，且更准确地查找已发布软件中的 bug。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;过去五年，基于深度学习的方法给大量应用带来了变革，如需要理解图像、话语和自然语言的应用。对于计算机科学家而言，一个自然出现的问题是：计算机是否能够学会理解源代码。乍一看这个问题似乎很简单，因为编程语言的设计初衷就是被计算机理解。但是，很多软件 bug 的出现是因为我想让软件这么做，但是写出来却是另外一回事。也就是说，小的拼写错误可能导致严重后果。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;看一下以下这个简单示例：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;color: rgb(136, 136, 136);&quot;&gt;float getHeight { return this.width; }.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;该示例中，人类或者理解「height」和「width」意思的系统可以很快发现问题所在。源代码具备两种功能。首先，它与计算机进行准确交流，以执行硬件指令。其次，它与其他程序员（或源代码作者）针对程序的运行情况进行交流。后者通过选择代号、代码布局和代码注释来实现。在发现两种交流渠道似乎可以分离后，一个自动发现软件 bug 的系统出现了。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;之前的程序分析主要关注程序的正式、机器可理解语义或将程序看作（有点奇怪的）自然语言。前者的方法来自于数理逻辑，要求对每个需要处理的新案例进行大量的工程工作。而自然语言方法需要在纯句法任务上性能优越但尚无法学习程序语义的自然语言处理工具。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在 ICLR 2018 的一篇论文《Learning to Represent Programs with Graphs》中，来自微软研究院和西门菲莎大学的研究者展示了一种结合二者的新方法，并展示了如何查找已发布软件中的 bug。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;程序图&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;为了学习源代码中的大量结构，研究者首先把源代码转换成程序图（ program graph）。图中的节点包括程序的 token（即变量、运算子、方法名等）及其抽象句法树的节点（定义语言句法的语法元素，如 IfStatement）。程序图包含两种不同类型的边：句法边，表示代码解析方式，如 while loop 和 if block；语义边，即简单程序分析的结果。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.48148148148148145&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUZ2cKX9o9fXdKGvPNaIoG2II61eJEtMDbQLBzWA8Q4TQk8hT3dxgdrA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;891&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 1：句法边&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;句法边包括简单的「NextToken」边、用于表示抽象句法树的「Child」边，以及连接一个 token 和源代码中它最后一次出现的「LastLexicalUse」边。图 1 展示了此类边用于 statement Assert.NotNull(clazz) 的部分示例，其中对应 token 的节点是灰色框，对应程序语法的非终端的节点是蓝色椭圆形框。Child 边是蓝色的实线边，而 NextToken 边是黑色的双线边。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;语义边包括连接一个变量和它在程序执行中最后一次使用的「LastUse」边（如果是循环案例，则变量在程序执行中最后一次使用的情况出现得更晚一些）、连接一个变量和它最后一次写入的「LastWrite」边，以及连接一个变量和它据此计算的值的「ComputedFrom」边。也可能有更多语义边，利用程序分析工具箱的其他工具，如 aliasing、points-to 分析，以及程序条件。图 2 是在一个小代码段（黑色）上形成的一些语义边。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3693304535637149&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUdyRvnXwCFLaQMNZIHL1cTdN1CiaAYWyicib2xFWwaN1ZqjquFHVYVknKg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;926&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 2：语义边&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;LastUse 关系用绿色边表示，y 与循环前 y 最后一次使用的情况连接。类似地，LastWrite 关系用红色边表示，while 条件中的 x 的使用与循环前 x 的分配和循环中 x 的分配连接起来。最后，ComputedFrom 关系用蓝色边表示，变量与其据此计算的变量连接起来。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;句法边大概对应程序员在阅读源代码时所看到的。语义边对应程序如何执行。通过在一个图中结合二者，该系统可以比单一方法学习到更多的信息。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;从图中学习&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;由于图通常作为表征数据和数据关系的标准方式，从图结构数据中学习的方法近期受到了一定程度的关注。一个组织可以用图的形式展现出来，正如药物分子可以看成是原子构成的图。近期成功的应用深度学习的图方法是图卷积网络（卷积神经网络的一种扩展）和门控图神经网络（循环神经网络的一种扩展）。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;这两种方法都是首先独立地处理每个节点，以获取节点本身的内部表征（即低维空间中的一个向量），然后将互相连接的节点的表征进行重复连接（两种方法的组合方式不同）。因此，经过一个步骤之后，每个节点拥有自身的信息和它的直接近邻节点的信息；经过两个步骤之后，每个节点将获得距离两个节点的信息，以此类推。由于所有的步骤都使用（小型）神经网络，因此这些方法可以被训练用于从数据中提取整个任务相关的信息。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;搜索 bug&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在程序图上学习可以用于搜索 bug，例如本文开头描述的那个例子。给定一个程序、程序中的某个位置以及在该位置上可以使用的一系列变量。然后模型被询问应该使用哪些变量。为了执行这项任务，程序被变换为程序图，某个特定节点对应所考虑的位置。通过考虑该特定节点的计算表征，以及对应可用变量的节点表征，网络可以计算每个变量的可能性。这样的模型可以很容易地通过几百万行已有代码来训练，并且不需要专门标注的数据集。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;当模型在新代码上运行，并以很高的概率预测出 var1，然而程序员选择的是 var2，这可能就是一个 bug。通过标记这些问题让人类专家审核，可以发现真正的 bug。例如，以下来自 Roslyn（微软 C# 编译器）的例子：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.5983112183353438&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUG08tQGvSugOafOaBSzmu2lTDCUVVC2Bm8MUwKmf7dtSzoicRkSUooEw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;829&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;注意参数 filepath 和字段_filePath 的使用，二者很容易被混淆。然而，_filePath 只是一个打字错误，开发者在研究员报告这个问题和类似问题之后将其修改了。相似的 bug 在很多其它 C# 项目中也被找到、报告和修改。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在一个更大规模的定量评估中，新方法远远超越了传统的机器学习技术。作为基线方法，双向循环神经网络（BiRNN）直接在源代码上执行，BiRNN 的简单扩展可以访问数据流的某些信息。为了评估不同的模型，微软分析了包含 290 万行源代码的开源 C# 项目。在测试时，源代码的某个变量被遮盖，然后让模型找出原始使用的变量（假定源代码是准确并经过良好测试的）。在第一个实验中，模型在项目的留出文件上进行测试（其他文件用于训练）。在第二个实验中，模型在全新项目的数据上测试。结果如下表所示，在新的程序图上学习的模型得到了明显更好的结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;未来应用&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;程序图对于在程序上应用深度学习方法是很通用的工具，微软将继续朝这个方向探索。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;font-size: 14px;text-align: justify;white-space: normal;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;原文地址：https://www.microsoft.com/en-us/research/blog/learning-source-code/&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;strong style=&quot;color: rgb(62, 62, 62);max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1176884254&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-02-1000000679_503258054</guid>
<pubDate>Wed, 02 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>CVPR 2018 | Spotlight论文：解耦神经网络DCNet，性能优于标准CNN</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-02-1000000679_503258045.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ48eo2P-Y8ke7-4VxqmgnusU55*3RESFz-vOM9TWViLWEtepESoRNFkRV-6I3jD1DMnmxwJ72KDESYQej2QQYtzw=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    CVPR 2018 | Spotlight论文：解耦神经网络DCNet，性能优于标准CNN                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-02&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;arXiv&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Weiyang Liu等&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Tianci LIU、路&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;本论文提出一个通用的解耦学习框架，并构建了解耦神经网络 DCNet，实验表明解耦操作可大大提高模型性能，加速收敛，提升稳健性。这篇论文已被 CVPR 2018 接收，是大会的 Spotlight 论文。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;卷积神经网络（CNN）大大拓展了视觉任务的边界，如目标识别 [24, 25, 5]、目标检测 [2, 23, 22]、语义分割 [16] 等。最近，CNN 领域一个重要研究方向是：通过引入捷径连接（shortcut connection）[5, 8] 、多分支卷积（multi-branch convulsion）[25, 30] 等改进架构，来增加网络的深度和表征能力。但另一方面，尽管 CNN 有了诸多改进和提升，对于卷积本身为何能够实现判别表征和优秀的泛化能力，这依然是一个有趣的、值得探索的问题。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;如今，CNN 中通常利用内积来编码表示 patch x 和卷积核 w 之间的相似性。但内积公式 &lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.2057877813504823&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUXGGzaN3F7wg9G1S1L7mCZk73P7IQ5VYerTL5aDUXLW7Dl2uRzlibxMQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;311&quot; style=&quot;width: 68px;height: 14px;&quot;&gt; &lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;将语义差异（即类间差异）和类内差异耦合到同一个度量中。因此，当两个样本间的内积很大时，我们很难确定是由于两个样本间存在很大的语义/标签差异，还是由于存在很大的类内差异。为了更好地研究 CNN 表征的性质，进而改善现有的 CNN 框架，本文作者提出明确地解耦（decouple）语义差异和类内差异。具体而言，研究者使用范数和角度（angle）将内积重新参数化为：&lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.13&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUOAtWmHawv3jDg420DgkHPgSwa0HVAF8gYbt1embwGXibrPzyeyloUvg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;600&quot; style=&quot;width: 139px;height: 18px;&quot;&gt; &lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;。该直觉来自图 1 中的观察，其中角度表示语义/标签差异，而特征范数（feature norm）则表示类内差异。特征范数越大，则预测越可信。这种直观的解耦方法启发研究者提出了解耦卷积算子（decoupled convolution operator）。研究者希望，通过将内积解耦为范数和角度，能够更好地对深度网络中的类内差异和语义差异进行建模。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;基于将内积解耦为范数和角度这一思路，研究者通过将传统的基于内积的卷积算子（||w|| ||x|| cos(θ_(w,x))）扩展至解耦算子，提出了一个全新的解耦神经网络 DCNet。为此，研究者将此类解耦算子定义为：某个范数函数 h(||w||, ||x||) 与某个角度函数 g(θ_(w,x)) 的乘积形式。解耦算子为更好地建模类内差异和语义差异提供了一个通用框架，原始的 CNN 等价于将 h(||w||, ||x||) 设置为 ||w|| ||x||，将 g(θ_(w,x)) 设置为 cos(θ_(w,x))。（在解耦算子中），幅度函数（magnitude function）h(||w||, ||x||) 建模类内差异，而角度函数（angular function）g(θ_(w,x)) 则建模语义差异。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;从解耦的角度看，原始 CNN 包含了一个很强大的假设：类内差异可通过范数乘积的形式进行线性建模，而语义差异可利用角度余弦值刻画。但这个建模方法并非在所有任务中都是最优的，而通过解耦学习框架，我们可以根据任务本身设计解耦算子，或者直接从数据中「学习」出来。DCNet 共有以下四个优点：一，DCNet 不仅允许我们使用一些替代函数更好地建模类内差异和语义差异，还允许我们直接学习这些函数，而不是修复它们。二，通过使用有界幅度函数，DCNet 可以改善 [14] 中分析的问题，进而实现更快的收敛，同时取得和原始 CNN 相当甚至更好的准确率。三，DCNet 的一些实例展现出了面对对抗攻击时更强的稳健性：通过一个有界函数 h(·) 压缩各类别的特征空间，可以获得一定的稳健性。四，解耦算子具有很强的灵活性，且是架构不敏感的（architecture-agnostic），因此我们可以很轻松地将其引入各种网络架构，如 VGG [24]、GooleNet [25] 以及 ResNet [5]。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;具体而言，研究者提出了两种不同的解耦卷积算子：有界算子和无界算子，并利用两种算子完成多个实例。结果显示，有界算子具有更快的收敛速度，且在对抗攻击中具有更好的稳健性；而无界算子则具有更好的表征能力。解耦算子可以是平滑或非平滑的，平滑与否会影响其表现。另外，研究者针对解耦算子提出了一个全新的概念：算子半径（operator radius）。算子半径刻画了幅度函数 h(·) 对输入 ||x|| 的导数的重大变化。通过利用反向传播算法联合学习算子半径，研究者还提出了可学习的解耦算子。最后，研究者展示了多种通过改进标准反向传播算法优化解耦算子的替代方式。本论文的主要贡献如下：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;CNN 学得的特征是天然解耦的，受此启发，研究者提出了一个明确解耦的框架来研究神经网络。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;研究者展示了 CNN 中包含了一个很强大的假设，以完成对类内差异和类间差异的建模，而此假设可能不是最优的。通过对内积解耦，研究者能够针对不同任务设计出更有效的幅度函数和角度函数，而非使用原始的卷积。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;和标准 CNN 相比，DCNet 能够更容易地收敛，且具有更好的准确率和稳健性。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6920415224913494&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUZlvgbgmmP1rpZxBN0fibuS1NnXyMWC7qXdaIl4U6Jm5TuR2XvJW9nMg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;867&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;图 1：CNN 学得的特征天然是解耦的。图中的 2D 特征是通过将 CNN 特征维度设置为 2 直接得到的输出。&lt;/span&gt;&lt;/em&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6011695906432749&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUtxvy1a2BRC2icS1LpOFfA3GdFSvvhicg9tfEwOFjFqcm5Eglt9onwllw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;855&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;图 2：解耦卷积算子的几何解释。绿线表示原始向量，红线表示投影向量。&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.33967391304347827&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUhQpYqBuE0anRrSFrhS32ts5uQNf4hLcPiaqRIyL995pHjS1U97yTZqQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1104&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;表 1：加权算子（TanhConv）在 CIFAR-100 上的评估结果。&lt;/span&gt;&lt;/em&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3118756936736959&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUApx0RnqOEU3E5iacG0KLr5SCjsKDj6LXNeFMamhzjVIGia64znPKp1hg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;901&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;表 2：未使用反向传播的原始 CNN-9 在 CIFAR-100 上的测试误差（%）。「N/C」表示模型未收敛，「-」表示没有结果。不同列中的结果来自于不同的角度激活函数（angular activation）。&lt;/span&gt;&lt;/em&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3725888324873096&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUibanlFrxiakd2ycF8ic8vNiaEL1t9Y4t3Q6S4e46m0iazUnytRwO1ic99KFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;985&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;表 6：标准 ResNet-18 和修正 ResNet-18 在 ImageNet-2012 上的 Center-crop Top-5 误差（%）。「*」表示使用了原始 CNN 在 ImageNet-2012 上的预训练模型作为初始模型（见 4.3）。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.40091743119266054&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUOOp1k881SXXNDDQSgoGLm24d6TXDEjkBjXSb8lRfqPbkiao46RKcv7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1090&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;表 7：CIFAR-10 上的白盒（White-box）攻击，性能用准确率（%）度量。前三行是标准训练模型的结果，后三行是对抗训练模型的结果。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.39780018331805683&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUs1DgoEASjjbwibDXeIIRXkZun6AtEMX8RpxtBaleHoYzKwyaJUPR19g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1091&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;表 8：CIFAR-10 上的黑盒（Black-box）攻击，性能用准确率（%）度量。前三行是标准训练模型的结果，后三行是对抗训练模型的结果。&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;论文：Decoupled Networks&lt;/span&gt;&lt;/strong&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(123, 12, 0);font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.18812589413447783&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUHkq3HbsJJribc93kMtnlokQJzNMuaoV4mcibWvX8NBDdFScjYtmIfQsg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1398&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(123, 12, 0);font-size: 14px;text-align: justify;&quot;&gt;论文链接：https://arxiv.org/abs/1804.08071&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;摘要：长期以来，基于内积的卷积都是卷积神经网络（CNN）中的核心成分，也是学习视觉表征的关键所在。而 CNN 学得的特征天然能够解耦为特征范数（对应类内差异）和角度（对应语义差异），受此启发，我们提出了一个通用的解耦学习框架，对类内差异和语义差异分别进行建模。具体而言，我们首先将内积重新参数化为解耦形式，然后将其扩展至解耦卷积算子，并作为解耦神经网络的重要组成成分。我们展示了解耦卷积算子的多个有效实例，其中每个解耦算子都有很好的根据以及直观的几何解释。基于这些解耦算子，我们进一步提出直接从数据中学习算子。大量实验表明，这种解耦重新参数化操作极大地提升了模型性能，加快了模型的收敛速度，显著提升了模型的稳健性。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;font-size: 14px;text-align: justify;white-space: normal;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;strong style=&quot;color: rgb(62, 62, 62);max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1026913103&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-02-1000000679_503258045</guid>
<pubDate>Wed, 02 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>教程 | 用摄像头和Tensorflow.js在浏览器上实现目标检测</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-02-1000000679_503258034.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ48eo2P-Y8ke7-4VxqmgnusW2r4OGXwbmOwX4G6e4WVXo2VGdz1*ybRG1dIwPlkxaHPF-qjaMdmk26cMWVtTwDls=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    教程 | 用摄像头和Tensorflow.js在浏览器上实现目标检测                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-02&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Medium&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Mike Shi&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Pedro、刘晓坤&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;Tensorflow.js 是一个能在你的浏览器里运行的全新深度学习库。本文将会介绍从原生 Tiny YOLO Darknet 模型到 Keras 的转换，再到 Tensorflow.js 的转换，如何利用其作一些预测，在编写 Tensorflow.js 遇到的一些问题，以及介绍使用联网摄像头/图像轻松地进行预测检测。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;项目地址：https://github.com/ModelDepot/tfjs-yolo-tiny&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;text-align: justify;&quot;&gt;YOLO9000：更好，更快，更强&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5306818181818181&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUw2pfK7WhOhOFicb6pmNb4pM2wfOaAo3AjhOHmQoXoEvQBkMNwibjx4Cw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;880&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;严格意义上来讲这才是原文的标题。我们将会使用 Tiny YOLO，一个快速的、能在 200 FPS 下运行的目标检测模型。我们将会使用 Tiny YOLO 而非完整的 YOLOv2。为什么？首先，YOLOv2 只在功能强大的桌面级设备上以 40 帧每秒的速度运行，而这个条件大多数用户都达不到。同时，YOLOv2 的模型文件是 Tiny YOLO 的五倍大，这将会导致网络卡死。最后，YOLOv2 有一个暂时不被原生 Tensorflow.js 支持的重组层（reorg layer）。下一步，我们将重点放在 Tiny YOLO 的网络配置（神经网络结构）以及权重上。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;YAD2K：又一个 DARKNET 2 KERAS（转换器）&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;你可能已经注意到 YOLO 是用 Darknet 编写的，而 Darknet 听起来和 Tensorflow 没什么关系。所以我们的第一步就是将 YOLO 模型转换为更加 Tensorflow 式的东西，在我们的例子中，这个东西是 Keras。Keras 是一个更高级的深度学习框架。我们推荐使用此种方式（https://js.tensorflow.org/tutorials/import-keras.html）将你的权重转换为 Tensorflow.js 的格式。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们将会使用 YAD2K 来将 Darknet 模型转换为 Keras 模型。请按照此处的教程来安装 YAD2K（https://github.com/allanzelener/YAD2K#installation）。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;当然了，你也可以假装你已经安装好了然后使用我已经给出的最终权重文件（https://modeldepot.io/mikeshi/tiny-yolo-in-javascript），但是这样的话你会失去不少乐趣！&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在，我们将要修复 YAD2K 里的一个 Bug 来正确加载 Tiny YOLO。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;用你最喜欢的文本编辑器打开 yad2k.py，在第 83 行，将 buffer=weights_file.read(16) 改为 buffer=weights_file.read(20)。为什么？现在毫无头绪。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在在你的电脑终端运行下列指令。这些指令会下载 Tiny YOLO 权重以及配置文件同时会将转换后的模型文件输出到 model_data/yolov2-tiny.h5。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;wget &lt;span class=&quot;hljs-symbol&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;hljs-regexp&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;/pjreddie.com/media&lt;/span&gt;&lt;span class=&quot;hljs-regexp&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;/files/yolov&lt;/span&gt;2-tiny.weights&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;wget &lt;span class=&quot;hljs-symbol&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;https:&lt;/span&gt;/&lt;span class=&quot;hljs-regexp&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;/raw.githubusercontent.com/pjreddie&lt;/span&gt;&lt;span class=&quot;hljs-regexp&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;/darknet/master&lt;/span&gt;&lt;span class=&quot;hljs-regexp&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;/cfg/yolov&lt;/span&gt;2-tiny.cfg&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;./yad2k.py yolov2-tiny.cfg yolov2-tiny.weights model_data/yolov2-tiny.h5&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;之后，我们要保证新模型能运转起来。一个有趣的事实是：之前我忘了做这一步然后我花了一整天纠结为什么 Tensorflow.js 不工作。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;./test_yolo.py model_data/yolov2-tiny.h5&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这个模型会输出一些预测。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2325&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUHPZMLJBHXBxn7VJJIRCZNYEEZlLX5uVUYjBXvTP73ib70T9vHAwRAibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;TENSORFLOW.JS 转换器：我们最后的权重转换方式&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;这一步更加简单，我保证！查看此处的官方指导（https://js.tensorflow.org/tutorials/import-keras.html）。我已经把所有的难题解决了，所以如果你还觉得这些看起来太多了的话，你可以直接跳过这一步。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们将要安装官方转换工具。在终端运行 pip install tensorflowjs 指令来安装转换器。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在要转换我们的模型，再次使用终端！&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-attribute&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;tensorflowjs_converter&lt;/span&gt; --input_format keras \&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    model_data/yolov2-tiny.h5 \&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    tfjs_model_data&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在我们终于将模型文件转移到 tfjs_model_data 中去了！注意，那个文件夹还包含了 model.json 以及一些其他的碎片文件。model.json 告诉 Tensorflow.js 神经网络的结构是怎样的以及哪些碎片文件与哪些权重相对应。这些碎片文件包含了模型的权重。要保证这些碎片文件和 model.json 在同一个目录下，不然你的模型将会无法正确加载。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;text-align: justify;font-size: 16px;&quot;&gt;Tensorflow.js &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在，我们到了有趣的部分。我们将同时处理 ML 和 JS 代码！&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;首先，我们导入 Tensorflow 然后加载模型。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; * &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; tf &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; ‘@tensorflow/tfjs’;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const model = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;await&lt;/span&gt; tf.loadModel(url);&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;等等，什么是&#39;url&#39;？你可以使用此处的托管模型文件（https://raw.githubusercontent.com/MikeShi42/yolo-tiny-tfjs/master/model2.json）或者把路径加到你转换后的文件中去。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;完美，现在我们做些真正的深度学习了：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;yolo&lt;/span&gt; &lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(input)&lt;/span&gt;&lt;/span&gt; {&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;   &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; model.predict(&lt;span class=&quot;hljs-built_in&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;input&lt;/span&gt;);&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;啊哈。这看起来好像也没什么特别的，等等。我们忘了将输出转换成边框、分类标签以及概率！&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4161137440758294&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUN70tpcPyoUclu13MzzPib7WicxZMp79uo1U06UtxtQXTsqHYRyClNJ5Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1055&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;将数字转换为边框以及数字&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我不准备深入探讨这个话题，因为对 YOLO 的后处理可以拿来单独写几篇博客了。相反，我会专注于我在将 Python 版本转换到 Javascript 时遇到的难题。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;1. 一部分张量操作不可行。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;Tensorflow.js 还很年轻，因此有一些功能暂时不可用，例如 boolean mask 以及 NMS。你可能也会遇到这样的问题，不过幸运的是你可以绕过它，通过下列方式：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre&gt;&lt;code class=&quot;hljs cs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; expected_shape = tensor.shape;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; data = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;await&lt;/span&gt; tensor.data(); &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;// Async transfer from GPU to CPU&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;// Note: data is a flattened TypedArray of the original tensor&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;//... data manipulation in JS on CPU&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;tf.tensor1d(data).reshape(expected_shape); &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;// Shape it back into where we were before&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;2. 你不能像 Python 那样使用 -1 索引&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在 python 中，你可以使用 -1 作为「最后一个元素」。不幸的是，在 Tensorflow.js 中，如果你在 tf.slice 上尝试这样操作，它只会默默地失败。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;3. 你不能使用 5d 张量&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;注意，Tensorflow,js 的 WebGL 后端不支持 5d 张量。既然无法想象五维的样子，为什么还要使用它们？在 YOLO 中我们将输出重塑为 [batch_size，xy，wh，box_confidence，box_class_pred]。这个很显然是五维的。幸运的是，为了避免这些麻烦，我删除了 batch_size。另一种做法是不将输出重塑为 5d 张量。但是有些细节还需要谨慎处理。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;除此之外，我的使用体验是连贯的。我只需要重新实现两个通常情况下 Tensorflow 不使用的 CPU 算法（&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;传统 JS）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;NPM 安装&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在把我们的深度学习应用到程序中去吧！&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;幸运的是，有人已经写好了代码，所以只需在终端安装 NPM 即可：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-built_in&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;npm&lt;/span&gt; i tfjs-yolo-tiny&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;然后我们再稍微利用一下 Javascript：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; yolo, { downloadModel } &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; ‘tfjs-yolo-tiny’;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; model = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;await&lt;/span&gt; downloadModel();&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; inputImage = webcam.capture();&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; boxes = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;await&lt;/span&gt; yolo(inputImage, model);&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;哇，你说的这个 webcam.capture() 是什么？&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9523809523809523&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUxokj2zujjZ6kcqRIib5mvFeAaV6euusOEgIA25MMkMzgVGic6dAFEMRA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;777&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;除了 NPM 的安装之外...&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;你可能已经注意到我们还没有关注过输入到我们的 YOLO 中的到底是什么。这也是 Tensorflow.js 最棒的部分之一。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们可以从文件（DOM）中取出视频或者图像然后将其转换为一个张量！&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们可以用 Javascript 写下这些：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; yolo, { downloadModel } &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; ‘tfjs-yolo-tiny’;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; model = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;await&lt;/span&gt; downloadModel();&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; inputImage = webcam.capture();&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;const&lt;/span&gt; boxes = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;await&lt;/span&gt; yolo(inputImage, model);&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;棒！现在可以将图像作为张量输入！之后，从图像切换到网络摄像头，你只需将其指向正确的元素即可。这对我来说很神奇。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在这之后，我们要做一些预处理。在这种情况下，将其裁剪为正方形，调整大小为 416x416，然后除以 255 得到大小范围从 0 到 1 的像素值。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;最后的一些想法&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们已经介绍了如何将模型转换为 Tensorflow.js 格式，加载模型并用它进行预测。然后，我们探讨了在 Tensorflow.js 中编写后处理代码的一些难题，但我们解决了这些问题。现在我们知道如何通过静态图像或网络摄像头抓取数据，可以将大多数 ML 模型从 Python 转换为 Tensorflow.js 并在浏览器中运行它们。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);font-size: 14px;text-align: justify;white-space: normal;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);&quot;&gt;原文地址：https://towardsdatascience.com/deep-learning-in-your-browser-a-brisk-guide-ca06c2198846&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p&gt;&lt;strong style=&quot;color: rgb(62, 62, 62);max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;205228645&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-02-1000000679_503258034</guid>
<pubDate>Wed, 02 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>你的论文能否中顶会？这篇分析同行评审结果的论文可帮助你</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-02-1000000679.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ48eo2P-Y8ke7-4VxqmgnusVE8dfROYN0p2ab9zYs58ztAnbQvsPaePxIRv29ltplnrahCoDT5w5N9YUh7U5HCbM=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    你的论文能否中顶会？这篇分析同行评审结果的论文可帮助你                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-02&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;arXiv&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Dongyeop Kang等&lt;br&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Nurhachu Null、李亚洲、李泽南&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;在人工智能领域，会议论文是证明研究人员学术水平的重要一环。是否存在一些「技巧」可以提高论文被大会接收的几率？人工智能是否可以帮助我们？近日，来自卡耐基梅隆大学（CMU）研究者们收集了上万篇 AI 顶级会议的接收/被拒论文，并使用机器学习工具进行分析，获得了一些有趣的结果。最后，当然……这一研究的论文已经被即将在 6 月 1 日于美国举行的自然语言处理顶会 NAACL 2018 接收。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;项目地址：https://github.com/allenai/PeerRead&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;strong&gt;简介&lt;/strong&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;权威的科学会议利用同行评审来决定要将哪些论文列入其期刊或会议记录。虽然这一过程似乎对科学出版物至关重要，但其往往也饱受争议。意识到同行评审的重要影响，一些研究人员研究了这一过程中的各个方面，包括一致性、偏差、作者回应和一般评审质量 (Greaves 等，2006；Greaves 等，2011；De Silva and Vance, 2017)。例如，NIPS 2014 会议的组织者将 10% 的会议提交论文分配给两组不同的审查人员，以衡量同行评审过程的一致性，并观察到两个委员会对超过四分之一的论文接受/拒绝决定意见不一样 (Langford and Guzdial, 2015)。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;尽管已经有了这些努力，但是关于同行评审的定量研究还是有限的，很大程度上是由于只有很少的人能够接触到一个学术活动的同行评审（例如期刊编辑和程序主席）。本文的目的是通过首次引入一个用于研究目的的同行评审公共数据集: PeerRead，来降低科学界研究同行评审的障碍。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在此论文中，我们使用三种策略来构建数据集: ( i ) 与会议主席、会议管理系统协作，允许作者和评审人分别选择其论文草稿和同行评审。( ii ) 抓取公开的同行评审，并用数字评分对文本评审进行标注，如「清晰度」和「影响」。(iii) 对与重要会议提交日期一致的 arXiv 提交论文进行编目，并在以后的会议记录中检查是否出现类似论文。总的来说，该数据集由 14700 篇论文草稿和相应的「接受/拒稿」决定组成，其中 3000 篇论文包含专家撰写的 10700 条文本评论。此外，我们将定期发布 PeerRead，为每年新的学术活动增加更多的内容。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;PeerRead 数据集可以以多种方式使用。对同行评审的定量分析可以提供见解，帮助更好地理解 (且可能改进) 评审过程的各种细微差别。例如，在该论文的第三部分中，我们分析了总体推荐分数与单个方面分数 (例如清晰度、影响和原创性) 之间的相关性，并量化了口头演示推荐评论与海报推荐评论有何不同。其他的样本可能包括匹配评论分数与作者，以揭示性别或国籍偏差。从教学角度来看，PeerRead 数据集还为经验不足的作者和首次审稿人提供了不同的同行评审实例。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4175824175824176&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUIiacuSwJSjJzCN4fhA4h7ReWkE9W4ksaGTLlQVjKEVjOXDgibeXgEZzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;910&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;表 1： PeerRead 数据集。Asp. 代表评审是否具有特定方面的得分（例如清晰度）。注意，ICLR 包括由标注者给出的不同方面的得分（详见 2.4 部分）。Acc/Rej 一列表示接受/拒绝的论文比例。需要注意，NIPS 仅仅提供了被接受的论文的评审意见。&lt;/span&gt;&lt;/em&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;作为一个自然语言处理资源，同行评审是个有趣的挑战，无论是从语义情感分析领域还是文本生成领域，前者前者预测被评审论文的不同属性，例如清晰度和原创性，后者则是在给定一篇论文的情况下，自动地生成它的评审意见。在被以足够高的质量解决时，这种类型的 NLP 任务也许会在评审过程中帮助审稿人、区域主席以及程序主席，例如，通过为某些论文投稿减少所需的审稿人数量。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在第四部分中，我们基于这个数据集引入了两个新的 NLP 任务：(i) 预测一篇论文是否会被某个学术会议接受，（ii）预测论文在某些方面的数字得分。我们的结果显示：在 PeerRead 的四个不同部分中，与大多数全部拒绝（reject-all) 基线相比，我们能够以误差减小 6--21%de 的结果预测「接受/拒稿」决策结果。由于我们使用的基线模型相当简单，因此有足够的空间来开发更强的模型以做出更好的预测。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;论文接受分类&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;论文接受分类是一个二分类任务：给定一篇论文草稿，预测在一组预定的学术会议中它将会被接受还是拒稿。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模型： 我们训练一个二值分类器来为一篇论文预测「接受/拒稿」的概率，也就是：P(accept=True | paper)。我们用不同类型的分类器做了实验：logistic 回归、使用线性核或者 RBF 核的 SVM、随机森林、最近邻、决策树、多层感知机、AdaBoost 以及朴素贝叶斯。我们使用了人工设计的特征，而不是神经网络模型，因为人工特征易于解释。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.45415472779369626&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuU4libGJvPOIFsnuSaXkKsKBAGhmr5ic0q7pnZ6GKt7lNnduPC4N2vDY9Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;698&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;表 5： 接受分类的测试准确率。在所有的案例中，我们的最佳模型超越了大多数分类器。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;我们使用了 22 个粗略的特征，例如标题长度，专门的术语（例如「深度」和「神经」）是否出现在摘要中，以及稀疏和密集的词汇特征。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;实验设置：我们使用 PeerRead 数据集中的 ICLR 2017 和 arXiv 部分来做实验。我们为每一个 arXiv 类别训练了独立的模型：例如 cs.cl，cs.lg，以及 cs.ai。我们的所有模型都使用 python 的 sklearn 实现 (Pedregosa et al., 2011)。我们考虑了支持向量机和 logistic 回归的不同正则化参数（所有超参数的详细描述参见附录 A.1）。我们使用了标准的测试拆分，并且在训练集上使用了 5 重交叉验证。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;结果： 表 5 展示了我们在论文接受准确率上的测试准确率。在所有的例子中，我们的最佳模型都以大于 22% 的误差率优势超过大部分分类器。不过，由于我们的模型在评价给定论文所做工作的质量方面缺乏成熟性，所以这可能意味着我们定义的一些特征与某些强有力的论文，或者有偏差的审稿人的判断相关。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们对数据集中的 ICLR 和 arXiv 部分进行了控制变量研究。为了简化分析，我们为 arXiv 中的三种类别训练了一个模型。表 6 展示了当我们移除了其中的一个特征的时候，最佳模型的测试中准确率的绝对下降。该表显示，一些特征对分类决策有着很大的贡献：例如增加一个附录，大量的定理或公式，引文前的文本的平均长度，本文提交前五年内发表的论文数量，ICLR 的论文摘要中是否包含「最先进的技术（state of the art）」，或者 arXiv 的摘要中是否包含术语「神经（neural）」，以及标题的长度。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4580152671755725&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUKtVr6GVzWgnqLMh4T2qC3xqU6uGQzPU6QmRicds12lGwibNJkibNvgahg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;655&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;表 6： 当我们从完整的模型中仅仅移除一个特征的时候，论文接收预测任务的绝对准确率的差别。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;图中具有较大负差别的特征更加显著，研究人员仅仅显示了每个部分最显著的 6 个特征。分别是：num_X：即 X 的数量（例如定理或者公式），avg_len_ref:引用前的文本平均长度，附录：文章是否包含附录，abstractX：摘要是否包含术语 X，num_uniq_words：唯一单词的数量，num_refmentions：提及的参考文献的数量，以及 #recent_refs：近五年内发表的参考文献的数量。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.24583333333333332&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUJHFJCgg7RTybg9AVWxuE9yj3Z2y3SWZ73dWcicBhD4cvsHicVydTkfbw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1440&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;图 1：PeerRead 测试集上预测任务的均方差（RMSE, 越小越好）：左侧-- ACL 2017，右侧：ICLR 2017。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;结论&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们的实验表明，论文的某些属性与较高的接收率正相关，例如包含附录。我们希望其他研究人员能够发现新的我们还没有在这个数据集中的同行评审中探索到的机会。一个具体的例子就是，研究接受/拒绝的决定是否反映了对作者的人口偏见 (例如国籍) 将是有意义的。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;strong style=&quot;text-align: justify;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;论文：一个同行评审数据集（PeerRead）：集合、洞见以及自然语言处理应用&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.34084231145935356&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUlq9bdS7JHVW0icuDYpD8zx9X3SBaRR18DnhFnjuXcajTWccSGB8tibSw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1021&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 20px;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;论文链接：https://arxiv.org/abs/1804.09635&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;同行评审是科学文献出版过程中的重要组成部分。在本研究中，我们提出了第一个可用于研究目的的科学文献同行评审公共数据集 ( PeerRead v1 )，该数据集为研究这一重要的现象提供了机会。该数据集由 1 万 4 千 700 份论文草稿，以及包括 ACL、NIPS 和 ICLR 在内的顶级学术活动对应的接受/拒稿决定组成。数据集还包括专家为论文子集撰写的 1 万零 700 份文本同行评审。我们描述了数据收集过程，并提供了在同行评审中观察到的有趣现象。我们在此基础上提出了两个新颖的 NLP 任务，并给出了简单的基线模型。在第一个任务中，我们展示了简单的模型可以预测一篇论文是否被接受，与大多数基线模型相比，误差减少了 21 %。在第二个任务中，我们预测了评审方面的数值分数，结果表明，对于诸如「原创性」和「影响」的高方差方面，简单模型可以优于平均基线。&lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;font-size: 14px;text-align: justify;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;strong style=&quot;color: rgb(62, 62, 62);max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1809157329&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-02-1000000679</guid>
<pubDate>Wed, 02 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>专栏 | 监督&amp;强化学习模型在金融市场的应用</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-01-1000000678_503258025.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ43fgpp8X3EJAWsm*eFzt0Jn9mn5XxNQSZztU1k3WbvqX*FK6xkJa63snJKY9sxJh7Zc7sDSNIbMON-zJaoUT1Yc=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    专栏 | 监督&amp;amp;强化学习模型在金融市场的应用                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-01&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心专栏&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：Cerulean&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;本文介绍了多个监督学习和强化学习模型在金融市场的应用，作者主要描述了多个论文的核心思想与实现，并且&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;全面概括了其在 &lt;/span&gt;Github 上维护的项目。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;项目地址：https://github.com/Ceruleanacg/Personae&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(26, 26, 26);&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;目前，在本项目中：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;实现了 4 个强&lt;/span&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;化学习模型。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;实现了 3 个监督学习模型。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;实现了 1 个简单的交易所，提供基本的买入、持有、卖出操作（卖空仍在开发中），标的物可以是股票组合或者期货合约组合。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对于监督学习模型的数据集：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们采用 2008 年 1 月 1 日到 2018 年 1 月 1 日这个区间内，&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;招商银行（600036）&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;交通银行（601328）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;中信银行（601998）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;工商银行（601389）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这四只银行股在第 T 天的，&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;开盘价（Open）&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;收盘价（Close）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;最高价（High）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;最低价（Low）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;交易量（Volume）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;作为输入数据，第 T+1 天的&lt;/span&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;收盘价（Close）&lt;/span&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;作为输出数据，进行训练，其中，这个区间前 70% 的数据作为训练数据，后 30% 作为测试数据，目前没有设置验证集数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;下图是目前的实验结果，就目前的实验结果来看，监督学习的表现要好于强化学习。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqIvIlkWt6ltxxGc5CKdRk2Qyk8XFwmhGQrIyJX3K1YMEj7tyGoqpIgA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;图例 ：蓝色的折线是测试数据集，其他颜色的折线是三种不同的监督学习模型在测试集上的预测。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;接下来，我们将会依次对这 3 个监督学习模型与 4 个强化学习模型做一个简短的介绍。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;1. Naive-LSTM (LSTM) &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该模型是基于 LSTM 和 Dense（全连接）的基本模型，输入是序列长度为 5，即第 T 到第 T+4 天的 OCHLV 数据，输出是一个实数，代表了第 T+5 的预测收盘价格。&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;color: rgb(136, 136, 136);&quot;&gt;arXiv:1506.02078: Visualizing and Understanding Recurrent Network &lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模型计算图：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0263888888888888&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqyExYEibvP95zeXWZicN74PiacicMq8kN3soy67sFXcicN4W4Q28wy9m4GUA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_nn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn = self.add_rnn(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, self.hidden_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn_output, _ = tf.nn.dynamic_rnn(self.rnn, self.x, dtype=tf.float32)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn_output = self.rnn_output[:, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn_output_dense = self.add_fc(self.rnn_output, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;16&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.y = self.add_fc(self.rnn_output_dense, self.y_space)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可以看出，第一行代码调用了项目中封装的用于构建 LSTM 层的 API，第二行代码用于计算该层输出和状态序列，第四行和第五行构造了一个全连接层并计算最终的输出。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;2. TreNet (HNN) &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;IJCAI 2017. Hybrid Neural Networks for Learning the Trend in Time Series&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;上述引用的论文提出了一种混合神经网络的结构，同时用 RNN 与 CNN 提取序列特征，然后将输出拼接作为全连接层的输入，最后输出最终的预测结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;模型计算图：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6208333333333333&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqDib4SibviaVJNDYUOd2na0RJWr8E3MmnJIic4CkgbiaUtz13BOlJXoZ2HlQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_nn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn = self.add_rnn(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, self.hidden_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn_output, _ = tf.nn.dynamic_rnn(self.rnn, self.rnn_x, dtype=tf.float32)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.rnn_output = self.rnn_output[:, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# self.cnn_x_input is a [-1, 5, 20, 1] tensor, after cnn, the shape will be [-1, 5, 20, 5].&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.cnn = self.add_cnn(self.cnn_x, filters=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, kernel_size=[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;], pooling_size=[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.cnn_output = tf.reshape(self.cnn, [&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;, self.seq_length * self.x_space * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.y_concat = tf.concat([self.rnn_output, self.cnn_output], axis=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.y_dense = self.add_fc(self.y_concat, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;16&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.y = self.add_fc(self.y_dense, self.y_space)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;可以看出，第一到第三行构造了 LSTM 层并计算结果，第四到第五行用项目封装的构造 CNN 的 API 构造了 CNN 层并计算了结果。最后拼接了 RNN 和 CNN 的结果，作为全连接层的输入，然后得到最终的计算结果。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;3. DA-RNN (DualAttnRNN) &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;arXiv:1704.02971: A Dual-Stage Attention-Based Recurrent Neural Network for Time Series Prediction &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;上述引用的论文提出了一种基于注意力机制（Attention Based Model）的与 Seq-to-Seq 模型的网络结构，其创新点在于该模型连续两次使用注意力机制，在对原始序列使用注意力机制求权重后再次使用注意力机制对编码后的序列求权重，然后经解码与全连接层后输出结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;模型计算图：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9819444444444444&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqgicro60iaOBU4hMDvETc9ibFnsl3G5Zq2mvr82NWibEr4ibrEYWT3auIMicw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_nn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# First Attn&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;1st_encoder&quot;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_encoder_rnn = self.add_rnn(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, self.hidden_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_encoder_outputs, _ = tf.nn.dynamic_rnn(self.f_encoder_rnn, self.x, dtype=tf.float32)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_attn_inputs = self.add_fc(self.f_encoder_outputs, self.hidden_size, tf.tanh)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_attn_outputs = tf.nn.softmax(self.f_attn_inputs)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;1st_decoder&quot;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_decoder_input = tf.multiply(self.f_encoder_outputs, self.f_attn_outputs)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_decoder_rnn = self.add_rnn(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, self.hidden_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_decoder_outputs, _ = tf.nn.dynamic_rnn(self.f_decoder_rnn, self.f_decoder_input, dtype=tf.float32)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Second Attn&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;2nd_encoder&quot;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.s_attn_input = self.add_fc(self.f_decoder_outputs, self.hidden_size, tf.tanh)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.s_attn_outputs = tf.nn.softmax(self.s_attn_input)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;2nd_decoder&quot;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.s_decoder_input = tf.multiply(self.f_decoder_outputs, self.s_attn_outputs)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.s_decoder_rnn = self.add_rnn(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, self.hidden_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_decoder_outputs, _ = tf.nn.dynamic_rnn(self.s_decoder_rnn, self.s_decoder_input, dtype=tf.float32)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.f_decoder_outputs_dense = self.add_fc(self.f_decoder_outputs[:, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;], &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;16&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.y = self.add_fc(self.f_decoder_outputs_dense, self.y_space)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可以看出，分别对应于四个变量命名空间，具有 2 组 4 个编解码层，在每一个编解码层都运用了一次注意力机制，求出当前序列的权重，然后与序列相乘后进行下一步的编解码工作，这是一种 Seq-to-Seq 的机制，更广泛地用于自然语言处理。最终解码的输出结果作为全连接层的输入，然后计算最终的结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;以上是关于项目中监督学习模型的简短介绍，其中，所有模型的具体实现可以在项目链接中看到。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;接下来是关于 3 个强化学习模型的介绍，但是在介绍强化学习模型前，我们首先对强化学习的数据和环境一个简短的概述。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;Financial Market&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这个文件实现了三个核心类，分别是：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Market&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Trader&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Position&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;他们分别代表了市场、交易员、持仓信息，最终 Market 类作为 Agent（强化学习模型）的 Environment（环境），接受 Agent 的 Action（动作），同时给出 Next State（下一状态）和 Reward（奖励），并进行迭代。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;对于强化学习使用的数据，&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们使用这四只银行股在第 T 天的，&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;开盘价（Open）&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;收盘价（Close）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;最高价（High）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;最低价（Low）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;交易量（Volume）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;和交易员在第 T 天的，&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现金（Cash）&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;持仓价值（Holding Value）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;各持仓量（Holding Amount）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;作为 State（状态），使用交易指令，&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;买入（Buy）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;卖出（Sell）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;持有（Hold）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;作为 Agent（智能体）的 Action（动作），其中，Reward Func（奖励函数）有 2 个版本，的计算代码如下：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_update_reward&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, action_code, action_status, position)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_code == ActionCode.Buy:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_status == ActionStatus.Success:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; position.pro_value &amp;gt; position.cur_value:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.reward += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;70&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.reward -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.reward -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;100&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;elif&lt;/span&gt; action_code == ActionCode.Sell:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_statu    @staticmethod&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_calculate_reward_v1&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(action_code, action_status, position)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_status == ActionStatus.Failed:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            reward = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-100&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; position.pro_value &amp;gt;= position.cur_value:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_code == ActionCode.Hold:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    reward = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    reward = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;100&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                reward = - &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; reward&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    @staticmethod&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_calculate_reward_v2&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(_, action_status, position)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_status == ActionStatus.Success:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            reward = position.pro_value - position.cur_value&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            reward = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-200&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; reward&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;s == ActionStatus.Success:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; position.pro_value &amp;gt; position.cur_value:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.reward -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;70&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.reward += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.reward -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;100&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; action_status == ActionStatus.Success:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; position.pro_value &amp;gt; position.cur_value:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.reward += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;70&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.reward -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.reward -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;100&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;接下来是关于实验结果与强化学习模型的介绍：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqQjI4nJlLb90YLDPEgoWQMtk7wLVdQlzyRFWziclGXotMvW3AXLxHkjw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;图例 - 横坐标是时间，纵坐标是利润，其中蓝色折线是基准线，其他颜色的折线是强化学习模型表现&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可以看出，除了 Policy Gradient 可以跑赢基准收益外，其他强化学习模型的收益甚至不如基准，这里非常值得讨论，目前笔者也在尝试从参数、输入特征、输出特征、奖励函数等多个角度考虑解决该问题。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;接下来是关于强化学习模型的介绍：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;1. Policy Gradient &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;NIPS. Vol. 99. 1999: Policy gradient methods for reinforcement learning with function approximation&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模型计算图：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6930555555555555&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqjsdyWWFnm9wiaHe1hCqGYYzylUicX1IkK5GzIF4ChsUibTByZTXTljdXg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Basic Policy Gradient 的思想很朴素，重复及可能多的采样，对于一次采样的所有动作中，根据奖励函数值的正负决定梯度下降的方向，从而提高或者降低这些动作出现的概率。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqbR9Wv0jJY8gaC7Q4Rj1gATqx6bkZiaNFxoNn0JjdlQcwhUldtxuBsEA/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_nn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize predict actor and critic.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    w_init, b_init = tf.random_normal_initializer(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;.0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;.3&lt;/span&gt;), tf.constant_initializer(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;nn&#39;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        first_dense = tf.layers.dense(self.s,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      tf.nn.relu,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        second_dense = tf.layers.dense(first_dense,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                       &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;50&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                       tf.nn.relu,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                       kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                       bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        action_prob = tf.layers.dense(second_dense,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      self.a_space,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      tf.nn.tanh,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                      bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.a_prob = action_prob&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.a_s_prob = tf.nn.softmax(action_prob)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_op&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;loss&#39;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# a_one_hot = tf.one_hot(self.a, self.a_space)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# negative_cross_entropy = -tf.reduce_sum(tf.log(self.a_prob) * a_one_hot)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        negative_cross_entropy = tf.nn.sparse_softmax_cross_entropy_with_logits(logits=self.a_prob, labels=self.a)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.loss_fn = tf.reduce_mean(negative_cross_entropy * self.r)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;train&#39;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.train_op = tf.train.RMSPropOptimizer(self.learning_rate * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;).minimize(self.loss_fn)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.session.run(tf.global_variables_initializer())&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;本实现简单地采用两次全连接后输出 Softmax 后各个动作的概率，最后期望最小化采样动作的概率与真实概率乘以奖励函数的值的交叉熵。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;2. Double DQN &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;arXiv:1509.06461: Deep Reinforcement Learning with Double Q-learning&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模型计算图：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5861111111111111&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGq8ERglRhmxNbaXG5tH3xhJe2g8hw8HQ6BzDnjyMN23qfk2YdSzLOhbQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Double-DQN 采用评估网络与目标网络相互制约，期望避免传统 DQN 中容易出现的过度估计问题。首先使用评估网络预测下一个状态的状态-动作函数值，然后选取取得最大值的动作，计做 a_{max}，接着用目标网络预测下一状态与采用 a_{max} 的状态值计算标签，然后期望最小化标签与评估网络对当前状态的状态-动作函数和当前动作的 Q 的均方差。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5166666666666667&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGq69plx81fUe1iaICwXdJgLt0NO8WdjiczTiavNJHR0JicGJHcXWavv7HwBg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_op&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.loss = tf.reduce_mean(tf.squared_difference(self.q_next, self.q_eval))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.train_op = tf.train.RMSPropOptimizer(self.learning_rate).minimize(self.loss)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.e_params = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;q_eval&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.t_params = tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;q_target&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.update_q_target_op = [tf.assign(t, e) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; t, e &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; zip(self.t_params, self.e_params)]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.session.run(tf.global_variables_initializer())&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 1. If buffer length is less than buffer size, return.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.buffer_length &amp;lt; self.buffer_size:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 2. Update Q-Target if need.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.total_step % self.update_q_target_step == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.session.run(self.update_q_target_op)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 3. Get transition batch.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    s, a, r, s_next = self.get_transition_batch()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 4. Calculate q_eval_next.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    q_eval_next = self.session.run(self.q_eval, {self.s: s_next})&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 5. Get action indices and make batch indices.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    a_indices = np.argmax(q_eval_next, axis=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    b_indices = np.arange(self.batch_size, dtype=np.int)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 6. Calculate q_target_next selected by actions.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    q_target_next = self.session.run(self.q_target, {self.s_next: s_next})&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    q_target_next_with_a = q_target_next[b_indices, a_indices]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 7. Calculate labels.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    q_eval = self.session.run(self.q_eval, {self.s: s})&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    q_next = q_eval.copy()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    q_next[b_indices, a.astype(np.int)] = r + self.gamma * q_target_next_with_a&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 8. Calculate loss.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    _, self.critic_loss = self.session.run([self.train_op, self.loss], {self.s: s, self.q_next: q_next})&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 9. Increase total step.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.total_step += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Double-DQN 的实现代码中，注释已经非常详尽，在这里就不再过多赘述。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;3. Deep Deterministic Policy Gradient (DDPG) &lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;arXiv:1509.02971: Continuous control with deep reinforcement learning&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模型计算图：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6277777777777778&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqA8tr6ZMVUnicrPurJpNCHVzUuKYCxjdgobBncA8mP9EUibTSr67gGSHQ/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;DDPG 用于连续动作空间，在本问题中，对于四只股票的买卖持有的动作被映射到区间 [0, 11]，其中，DDPG 使用 Actor-Critic Model，引入评估 Actor，目标 Actor 模型与评估 Critic，目标 Critic 模型两组四个网络，其中 Actor 模型用于预测动作，Critic 模型用于评估当前状态与动作的分数（状态-动作值函数），该方法期望最小化：评估 Critic 与评估 Actor 对当前状态-动作函数值与目标 Critic 和目标 Actor 对下一状态-动作函数值的均方差（如算法图所示），依次迭代改进目标 Critic 和目标 Actor。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7319444444444444&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqsEBmia32qK6uyzXTRdkl9nl6M72efJlD5lzCUyNUBU5oSMwfZVJN14Q/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_nn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize predict actor and critic.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.a_predict = self.__build_actor_nn(self.s, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;predict/actor&quot;&lt;/span&gt;, trainable=&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.q_predict = self.__build_critic(self.s, self.a_predict, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;predict/critic&quot;&lt;/span&gt;, trainable=&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize target actor and critic.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.a_next = self.__build_actor_nn(self.s_next, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;target/actor&quot;&lt;/span&gt;, trainable=&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.q_next = self.__build_critic(self.s_next, self.a_next, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;target/critic&quot;&lt;/span&gt;, trainable=&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Save scopes&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.scopes = [&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;predict/actor&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;target/actor&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;predict/critic&quot;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;target/critic&quot;&lt;/span&gt;]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_init_op&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Get actor and critic parameters.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    params = [tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; scope &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.scopes]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    zipped_a_params, zipped_c_params = zip(params[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;], params[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;]), zip(params[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;], params[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3&lt;/span&gt;])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize update actor and critic op.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.update_a = [tf.assign(t_a, (&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt; - self.tau) * t_a + self.tau * p_a) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; p_a, t_a &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; zipped_a_params]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.update_c = [tf.assign(t_c, (&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt; - self.tau) * t_c + self.tau * p_c) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; p_c, t_c &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; zipped_c_params]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize actor loss and train op.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.a_loss = -tf.reduce_mean(self.q_predict)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.a_train_op = tf.train.RMSPropOptimizer(self.learning_rate).minimize(self.a_loss, var_list=params[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize critic loss and train op.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.q_target = self.r + self.gamma * self.q_next&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.c_loss = tf.losses.mean_squared_error(self.q_target, self.q_predict)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.c_train_op = tf.train.RMSPropOptimizer(self.learning_rate * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;).minimize(self.c_loss, var_list=params[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Initialize variables.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self.session.run(tf.global_variables_initializer())&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;代码首先初始化两组四个网络，分别是评估 Actor、目标 Actor，评估 Critic，目标 Critic，然后根据 DDPG 的算法最小化评估 Critic 与评估 Actor 对当前状态-动作函数值与目标 Critic 和目标 Actor 对下一状态-动作函数值的均方差，依次迭代更新 Actor 与 Critic 直至收敛。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;4. Dueling-DQN &lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;arXiv:1511.06581: Dueling Network Architectures for Deep Reinforcement Learning &lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模型计算图：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6972222222222222&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGq9rWuHVB2WibMib1FVe4PGyOVOvcOnMvxIDfmgB6QqQwoyUMJddtN2ib2A/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;720&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;算法：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7725118483412322&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqYuaRYHq9mWSm7QGVrJSA56dLLanPgkqEmiby5kF2dZOHaxzxc3TL5tg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;422&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;相对于 DQN 直接输出状态-动作函数值，Dueling-DQN 的状态-动作函数值由上式决定，从网络结构上可以看出，在输出状态-动作函数值前，Dueling-DQN 的结构拆分了原 DQN 网络结构的最后一层，这样的思想很像 Actor-Critic 模型中的 Baseline，因为并不是每个状态都是十分重要的，有些时候对于这些状态，采取那个动作都不会有很大的影响。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以下是构建模型的核心代码：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__build_critic_nn&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, s, scope)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    w_init, b_init = tf.random_normal_initializer(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;.0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;.3&lt;/span&gt;), tf.constant_initializer(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;.1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; tf.variable_scope(scope):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        s_first_dense = tf.layers.dense(s,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                        &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;16&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                        activation=tf.nn.relu,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                        kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                        bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        s_second_dense = tf.layers.dense(s_first_dense,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                         &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;16&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                         tf.nn.relu,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                         kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                         bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        value = tf.layers.dense(s_second_dense,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        advantage = tf.layers.dense(s_second_dense,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                    self.a_space,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                    kernel_initializer=w_init,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                                    bias_initializer=b_init)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        q = value + (advantage - tf.reduce_mean(advantage, axis=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, keep_dims=&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; q&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;即最终对于某个状态-动作函数值而言，Advantage 的在不同动作维度上的值一定意义上描述了这个动作对于这个状态的重要性，最后加上 Q 值，避免了过度估计。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;以上是最近关于强化学习和监督学习在金融市场中的一些应用和相关论文方法的实现。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;目前仍有以下问题亟待探讨与解决：&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;强化学习模型奖励函数的设计&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;强化学习中基于值迭代的算法难以收敛&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;监督学习的特征维度如何扩展&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;同时，项目中可能有 Bug，欢迎各种 Issue 提出以及欢迎贡献各种代码 : )&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1798598106&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-01-1000000678_503258025</guid>
<pubDate>Tue, 01 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>深度 | 生物神经网络基础：从尖峰放电神经元谈起</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-01-1000000678_503258005.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ43fgpp8X3EJAWsm*eFzt0Jk9yJiZIquepebA6pmILVgcVhu*AOMojEQwPkuxlYUVV2oNAm6AH8JENrMqaVSLw1M=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    深度 | 生物神经网络基础：从尖峰放电神经元谈起                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-01&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;white-space: normal;max-width: 100%;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;color: rgb(62, 62, 62);font-size: 16px;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;font-size: 14px;&quot;&gt;Jack Terwilliger&#39;s Blog&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;color: rgb(62, 62, 62);font-size: 16px;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;font-family: inherit;text-decoration: inherit;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Jack Terwilliger&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;color: rgb(62, 62, 62);font-size: 16px;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;font-family: inherit;text-decoration: inherit;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;strong&gt;参与：Panda&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;blockquote style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;人工神经网络在很多领域都取得了突破性进展，这项技术的最初灵感源自生物神经网络。作为我们人类智能的来源，生物神经系统或许还能给我们的人工智能创造之路带来新的启迪。MIT 自动驾驶汽车和人工智能方向的副研究员 Jack Terwilliger 近日在自己的博客上发布了其系列文章《生物神经网络》的第一篇，对生物神经元的基本信息以及常见的模型进行了介绍。机器之心对本文进行了编译。原文中还包含一些比较直观的交互式图表，这里不便呈现，感兴趣的读者可通过文末链接访问原文查看。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5183349851337958&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdXSfecIicWu1CZ08oJDbsvujAJeCaZdDRe4bgHQibvoJuSdHCKUzUiaxDg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1009&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经元是细胞——基本上由水、离子、氨基酸和蛋白质构成的小体具有引人注目的电化学特性。它们是大脑的主要功能单元。我们的心智体验（感知、记忆和想法）源自神经元双层脂膜上的盐分水平的涨落和神经元之间的突触传递。理解神经元和神经计算的方式有助于阐释我们丰富的心智体验的构建和表法方式、我们的行为和决策的基本原理，并能为处理信息和实现人工智能的新方法提供生物学启发。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在这篇文章中，我将以交互式的方式概述建模神经元的方法。这篇文章不可能全面覆盖所有内容，也不会给出新的见解。但是，我希望这篇文章能为好奇的读者提供有关建模神经元的直观知识。文中的图表可以让你尝试不同的模型和参数。暂时先不要疑虑动态系统、分岔（bifurcation）、动作电位（action potential）是什么，后文会给出简要的解释。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.8522072936660269&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdTZz09h95eoDqKI4JkS283tk2fiaZIZ9LXoLw5LeNGsRYUGwfnfdO54g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;521&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;起步：神经元的生物学基础&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在我们深入数学模型之前，我们首先应该简要了解一下神经元的生物学基础，这是所有一切的基础（如果你已经学过神经科学课程，你当然可以跳过这部分）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经元的解剖结构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;我们首先要了解的是神经元的特殊形态，即它们的形状和结构。这种形态让神经元可以从其它数千个细胞接收信息并快速进行长距离通信——从脊髓到脚可长达 1 米！&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.392757660167131&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsd2vAu8UrFhrjI9icSSYrquaZFibY2RtzJo9IQiaZeIib8Aj2fHW3t4hCiajQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;359&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;卡哈尔（Cajal）手绘的浦肯野细胞。注意其中树突分支的复杂性和数量&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经元通过位于（但不排除其它位置）其树突树（dendritic tree）上的突触接收来自其它神经元的信号。树突树是一种复杂的、有分支的、扩散式的结构。如果你想知道树突复杂度最高的是什么细胞，那就是浦肯野细胞（Purkinje cell），它能够接收多达 100000 个其它连接。树突上有树突棘（dendritic spine），这是树突上微小的凸起，是其它神经元与该树突接触的位置。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;来自树突的信号会传播和汇聚到神经元胞体（soma）——神经元细胞的主体，是细胞核和其它典型细胞器所在的位置。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7447916666666666&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdhGIAg4yoQOIXkaNMibwn4LHROibyImZIwPvdStqrSmYmuc2S2UIKM1eg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;神经元的解剖结构。图片来自 OpenStax College 生物学《Neurons and glial cells》，CC BY-NC-SA 3.0 License&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;胞体会延伸出轴丘（axon hillock），并进一步延展成轴突（axon）。轴突与其它神经元的树突相连。这让神经元可以快速长距离通信，同时不损失信号完整性。为了让信号快速传播，轴突是有髓鞘的——其覆盖有分散的绝缘体，让神经元的信号可以在绝缘的区域之间跳跃。为了维持信号完整性，轴突中的神经元信号是「要么全有要么全无的」——这是有点像比特（bit）的脉冲信号，我们后面会讨论。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经元的生理机能&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;关于神经元，要了解的第二件事是它们特殊的生理机能——神经元的细胞功能。神经细胞功能最显著的特征是动作电位（action potential）。这种机制让神经元可以可靠地长距离传递信息，而不会出现传输衰减。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;有一个需要记住的重点：神经元沉浸在主要由水、盐和蛋白质构成的细胞外液中。由盐进出细胞以及这些盐的浓度差异所产生的力是神经元这种显著行为的物理基础。神经元中有将钠排出细胞和将钾引入细胞的钠钾泵（sodium-potassium pump），这会使得细胞外的钠浓度高于细胞内，细胞外的钾浓度又低于细胞内。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;动作电位是离散事件，其中膜电位会快速上升（去极化）然后回落（极化）。这种离散事件是「要么全有要么全无的」，也就是说如果神经元膜上一个部分出现了一个动作电位，那么其邻近的部分也会出现，如此继续扩散直到到达轴突末端。动作电位一般不会反向传播，因为一旦膜上一个区域发出了一个动作电位，电化学作用力就会将膜的这个区域超极化（hyper-polarize），导致之前开放的通道关闭，并使该区域在一段时间内不活跃。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;动作电位源自细胞膜上不同种类的离子经由通道的运动以及这些通道在不同时间尺度上的激活和失活。典型的动作电位会按以下方式发生：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ol class=&quot; list-paddingleft-2&quot; style=&quot;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;平衡（Equilibrium）：神经元的平衡膜电位大约为 -70 mV，接近能斯特平衡（Nernst Equilibrium）的 EK+≈−75。在平衡时，净电流为 0——即向内和向外的电流是平衡的。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;去极化（Depolarization）：输入的激励信号去除膜的极化。快速响应门控 Na+ 通道激活，Na+ 涌入，使膜的电位更高。响应速度更慢的 K+ 通道开启，K+ 涌入，使膜的电位更低。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;放大（Amplification）：如果神经元受到的刺激变多或受到了快速刺激，那么激活的 Na+ 通道就会远多于 K+ 通道。这会导致形成一种反馈回路：Na+ 的流入会导致更多 Na+ 通道激活。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;重新极化（Repolarization）：最后，膜电位会接近 Na+ 的能斯特平衡，因为钠通道已经开到了最大。更慢的 K+ 通道会赶上 Na+ 通道，使得膜电位重新极化。与此同时，Na+ 通道处于失活状态。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;超极化（Hyper-polarization）：K+ 通道开启而 Na+ 通道失活，会导致膜电位降至典型平衡点之下，接近 K+ 能斯特平衡。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;不应期（Refractory Period）：Na+ 通道需要一段时间才能脱离失活状态，这意味着在一个动作电位之后，它们在一段时间内将一直无法再次开启。这期间，大多数 Na+ 通道失活时被称为绝对不应期（absolute refractory period，不管刺激强度如何，神经元都不会放电），而很多 Na+ 通道失活时则被称为相对不应期（relative refractory period，当刺激足够强时神经元可以放电）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;正如我们下面会看到的那样，某些模型（尤其是 Hodgkin-Huxley 模型）能很好地描述动作电位的本质。借助这些理论模型，你可以探索动作电位的计算性质或其它有趣的神经现象。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;尖峰队列（spike train）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.4341317365269461&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdwePMXkc80fHTJ6gKKQNJlicJDuoQMWRZPX59y2S35ibQjIH5pia8lqYyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1002&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;尖峰队列是神经元的语言。人们往往会将尖峰看作是点事件，将尖峰队列看作是点过程。我们使用神经响应函数来描述：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.40555555555555556&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdjuFicGK00GHf2RvGJEoj2ys7Tfr7tEDnE2IqFia4G4OLcsWdtiaib0chGQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;180&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中一次脉冲定义为：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3701923076923077&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdpawejbX9utrv6aSXAoGAibqiaj3ibLHiboJWUwibHPz39SLt9jfTIk4CmAg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;208&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;一般而言，假设尖峰队列是由随机过程生成的，这会有助于分析。假设尖峰之间相互独立，我们可以将这个点过程建模为一个泊松过程（Poisson process），所以我们知道在区间 ΔT 中出现 n 个尖峰的概率为：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.1724137931034483&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdrtLkr8bAtbtfQfaPyBjkL10xAGibD8KwzBu3kgIrEUws4zd76UyhD8Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;377&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;为了根据泊松点过程产生尖峰，要在一个足够小的时间区间内生成一个随机数 r，这样应该就只会出现 1 个尖峰，并且检查 r&amp;lt;firingRateΔt 是否成立。但是，还要确保 firingRateΔt&amp;lt;1。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;起步：动态系统&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;分岔与动态系统&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;很多神经元模型都是动态系统——它们将神经元的状态描述成某个向量，并且会根据某些方程随时间变化。该模型的空间中每一个点都有一个对应的梯度，即其变化的方向。关于模型的很多情况都可以通过查看其相图（phase portrait）推断得到。下面给出了两个相图的案例。这些相图看起来很密集——这一节会尝试解释如何理解它们。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.773497688751926&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdlZBVRzK32njqYjOE1IP23LI3sdQGOQ9T0GibWWv381dfm6V94XqS0Jw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;649&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;Fitzhugh-Nagumo 神经元的相图。相图看起来可能很嘈杂，但如果你知道如何解读，其中包含了大量信息：（1）向量场（黑色箭头）表示状态空间中的轨迹，（2）nullcline（黑色实线）表示偏导数为 0 的点，（3）固定点（黑点）在这里是所有点都朝向的点，（4）轨迹（红色）表示穿过状态空间的轨迹。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.736998514115899&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdJEdicTxrd6QlPibppE61ic85w9pCMXJDYkbF8tQNBW6uZaHJzM1aMAkNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;673&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;Simple Model 神经元的相图。这里还给出了一个吸引盆（basin of attraction，蓝色区域），其中所有点都往往指向一个稳定节点（黑点）。分界线（蓝色实线）直接连接到鞍点（白点），并且也定义了吸引盆的边界。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;平衡&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;当动态系统不再随时间改变时，就达到了平衡。形式上讲，如果 f(x)=0，则 x 是系统 x′=f(x) 的一个平衡点。在动态系统中，我们只会考虑 5 类固定点。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;稳定节点（stable node）吸引邻近区域内的所有点。当所有特征值都为负且为实数时，就会出现稳定节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;不稳定节点（unstable node）排斥邻近区域内的所有点。当所有特征值都为正且为实数时，就会出现不稳定节点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;稳定焦点（stable foci）通过向内盘旋吸引邻近区域内的所有点。当特征值为复数且与负实数部分共轭时，就会出现稳定焦点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;不稳定焦点（unstable foci）通过向外盘旋排斥邻近区域内的所有点。当特征值为复数且与正实数部分共轭时，就会出现不稳定焦点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;鞍点（saddle）沿两个方向吸引且沿两个方向排斥。当特征值为实数且符号相反时，就会出现鞍点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5169270833333334&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdTsZC0r5r3wtNaGjQuv09Faz80J8J36esBtTwcFp7dx3pdibonesbfiaw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;768&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;根据雅可比矩阵（Jaccobian matrix）的轨迹 τ 和行列式 δ 得到的固定点的分类。图片来自 Eugene Izhikevich，根据 CC BY-NC-SA 3.0 License 发布。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;nullcline&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如上述模型那样的二维神经元模型有两条 nullcline——这两条线上的偏导数为 0。当越过一条 nullcline 时，一个变量的演化会改变方向。只需查看动态系统的 nullcline，就能明白有关该动态系统的很多情况，包括固定点的位置。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;分岔&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;分岔是动态系统中的质变——平衡点或极限环（limit cycle）的出现或消失这种质变。这些变化会在一个参数变化时发生——这就是所谓的分岔参数（bifurcation parameter）。在神经元模型中，分岔参数往往是输入电流 I。我们只会考虑 4 种分岔：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;鞍点节点分岔：在鞍点节点分岔处，稳定节点和不稳定节点消除彼此，融合成一个鞍点节点。在神经元模型中，鞍点节点分岔之前会有稳定平衡的消失。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在极限环上的鞍点节点分岔：与鞍点节点分岔类似，但分岔点出现在极限环上。这个细节很重要，因为在平衡点处，极限环具有无限的周期长度，让周期性可以随分岔参数连续变化。当鞍点节点没出现在极限环上时，周期性是不连续的。这对神经元的计算特性有影响。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;超临界 Andronov-Hopf 分岔：在超临界 Andronov-Hopf 分岔处，随着极限环的出现和增长，稳定平衡会向不稳定平衡转变。接近超临界 Andronov-Hopf 分岔时，如果其输入是周期性的，那神经元就会尖峰放电。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;亚临界 Andronov-Hopf 分岔：在亚临界 Andronov-Hopf 分岔处，随着极限环的收缩然后消失，不稳定平衡会向稳定平衡转变。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3111979166666667&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdeujY5xGcuacsog2Mmdia5GicACEMyiczibfADXEEqNjWEltk66eIrMXxdg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;768&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;鞍点节点分岔示例。注意这里的稳定固定点和不稳定固定点在融合成鞍点节点后彼此消除的方式。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3776041666666667&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdmaA7XgjR04FoXsmDNlA8V4UjXkWicia2SKQeibgedD51X0yiaFpnIhiaQgw/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;768&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;发生在极限环上的鞍点节点分岔示例。注意这里的稳定固定点和不稳定固定点彼此消除的方式。图片来自 Eugene Izhikevich，根据 CC BY-NC-SA 3.0 License 发布。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3919270833333333&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsd2zIe3FibkcafEDJ8GSIcCeECibiayvUrU42X1XhE70Ilr7TlB0jBicNQicQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;768&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;超临界 Andronov-Hopf 分岔示例。注意这里稳定极限环的出现和增长。图片来自 Yuri A. Kuznetsov，根据 CC BY-NC-SA 3.0 License 发布。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.4440104166666667&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdXicUbEYu2wbzDRyp3nNVhTeVpN3KCc0apPVYl85J3HIT0f6MSXpZT2g/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;768&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;亚临界 Andronov-Hopf 分岔示例。注意这里不稳定极限环的出现。图片来自 Yuri A. Kuznetsov，根据 CC BY-NC-SA 3.0 License 发布。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;现在让我们继续深入！&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;模型&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Hodgkin-Huxley 模型神经元&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5419415645617343&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdRZk3l5mwSehib5JSU0LhC3AR8ZvXvf6ANL6J7UUAibm8gnL0A7euRNyw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1061&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Hodgkin-Huxley 模型神经元是生理学建模领域内一项非常了不起的成就，这让 Alan Hodgkin 和 Andrew Huxley 获得了 1963 年的诺贝尔生理学或医学奖。这是计算神经科学领域内的一种重要模型。有趣的是，这个模型是通过研究鱿鱼巨轴突（squid giant axon）构建的，这控制了鱿鱼的喷水推进反射——其直径很大，易于实验。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;你会看到其中有很多数学内容，但本质上讲，Hodgkin-Huxley 模型是将神经元的动态描述成了一个电路，其中电流的激活和失活有不同的时间尺度和不同的电压。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该模型包含 3 种电流 INa、IK 和 Ileak，都会影响膜电位。Ileak 不是门控的，而是 Cl- 离子缓慢渗透穿过膜。IK 是由 n 门控的，n 是一个无单位的变量 [0,1]，表示 K+ 电压门控通道的激活状态（增加钾的流量）。INa 电流是由 m 和 h 门控的，其中 m 是一个无单位的变量 [0,1]（增加钠的流量），表示 Na+ 电压门控通道的激活状态，h 也是一个无单位的变量 [0,1]，表示 Na+ 通道的失活状态（停止钠流动）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3989983305509182&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsd4tA8gGD6vvVNSaELEIfQxYwblxK47EKutqwLOHacCg73ibic6DTQAmHw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3003875968992248&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdTMjYdCG5tib3hvIViaJF20prciawK515OsTs3OrLeaO11SKMQwMcwC3pA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;516&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3191126279863481&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdK0EQPB6cWPQ8sxd8rWpbkSiap4qvlWQ7wUV9n4ypibLbKpYytNRRMTZg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;586&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;αx 是指门 x 转换为打开的速率，而 βx 是指门 x 转换为关闭的速率。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Hodgkin-Huxley 模型是接受范围最广的模型。这也是我们在本文中会谈到的最复杂的模型。后面的模型会更加抽象，并且缺乏 Hodgkin-Huxley 模型的一些特征，但它们分析和模拟起来更容易。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;人工神经元&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在人工神经网络中所使用的人工神经元是对生物神经元的绝妙约简。它们是对神经行为的抽象，即将神经行为约简成几个关键特征：（a）它们整合所有输入突触上的信号（求总和），（b）它们根据一个非线性函数对整合后的信号进行变换处理。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;我们可以用数学方式描述（a）：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.17342342342342343&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdTDesfo8Ue6LQVpPoPePianY1F7L8c2Cy8slPjfIQ6k8zniavFCIDGoGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;444&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中神经元 j 是突触前神经元，i 是突触后神经元，vj 是从 j 到 i 的信号，wij 是该突触的强度。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;用数学方式描述（b）：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3937007874015748&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsd1E8WM9nLGqAPPUaibXaaw4nc0us5giaz00Diakuxo0xXEiaMnQviaKQJ3gw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;127&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中 f(Ii) 通常是 sigmoid 函数或线性整流函数。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;相当简单，但有点投机取巧。这些最好是称为单元，而不是神经元，因为它们并不进行尖峰放电。尽管如此，这些单元的输出可以被解读成是放电率。尽管很简单，但这些单元在探索神经计算的性质上很有用。不仅如此，它们也被用在了当前最佳的人工智能算法中。事实证明，只有一个隐藏层的人工神经网络就能近似任意函数。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这一类神经元的强度源自可微分性——即使在网络内堆叠时也是如此。这个性质可以最小化或最大化某些目标来学习任意函数。但是，因为比较简单（比如缺乏尖峰放电机制和持久状态），它们并不是生物神经元的实际情况的模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;整合放电模型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5622568093385214&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdez5PZd5NWdhPjJwDcK4qRyM7scPTeS5VH9IicAziak4mibacqbR7yepcQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1028&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;整合放电模型（integrate and fire model）是一种应用广泛的模型，常被用于探索网络的行为。这种简单模型抓住了神经行为的几个特征：（a）神经元尖峰放电和复位重置所遵循的膜阈值，（b）神经元无法放电的不应期，（c）状态——这是一种动态系统，膜电位（状态）会随时间演变。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.42292490118577075&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdbN4UEacqsqXNm7X8u3ougDFDr188IUjibWXOUswD1uQNT4mrOxuDnTg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;253&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;但是，这个模型缺乏用于尖峰生成的真实机制。实际上在神经元尖峰放电时，我们也就只画一条竖线。此外，其膜阈值和不应期是绝对的，而在真实神经元中，它们会根据神经元的状态而变化。这些神经元也不能共振（resonate）。不是说这个模型无用——整合放电神经元有尖峰放电神经元的最基本特征，并且很容易推理。很多对网络行为的有趣探索都使用了这个模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;基于电导的模型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5652173913043478&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdnia4ePcRuyEQyKFS2IeMcZUIJQPQ6zibNVROHJyCiacV83Fxthd23v72g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1012&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;基于电导的模型是一组类似 Hodgkin-Huxley 模型的方程——它们使用这些参数表示神经元：（1）各种离子通道的电导率，（2）细胞膜的电容。基于电导的模型很简单，但种类很多。和整合放电模型不同，基于电导的模型可以生成尖峰。有些还能进行共振、振荡、反弹尖峰、双稳态尖峰等。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdE8xHibdcq3Mo1jBR6XI1RAW4XjvVN2gofpvgXVnfqicGQ30ibvxHvPwqw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;720&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;展示 Na、K 和漏电电流的 RC 电路。离子通道用可变电阻器表示（带有箭头的电阻符号）。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些模型这样描述流过神经元膜的电流：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.14487632508833923&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdJYUS5Pl095clTIGoHWUMOm3q62QKSolAB3zDTibenbkWlhHAPrkSgQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;283&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;使用了基尔霍夫电流定律（Kirchhoff&#39;s law）。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些模型的动态的基本形式可以描述为：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3514376996805112&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdaiblcGiar2DqAibbTIB3c0F2Bfk0DGTwA8yOiaFtt9Ug9eaegBic6ClHq4Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;313&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;正如去罗马有很多不同路径一样，实现模型尖峰放电的方式也很多。我们前面已经看了 Hodgkin-Huxley 模型，但因为那是一个 4 维系统，所以分析起来不容易。下面我们来看看一个 1 维系统和一个 2 维系统，其分别基于钠通道的动态和钠&amp;amp;钾通道的动态。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;INa,p&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;持续钠模型（INa,p）只有一个钠通道，且这个钠通道能立即响应当前的膜电位；由于钠通道动态的速度相对较快，所以这种模型还算不错。这让我们有了一个非常简单的 1 维模型。现在，如果我们回想一下动作电位的生理过程，那么缺乏钾通道就意味着这个模型的动态本身应该无法实现复位重置。实际上我们需要添加一个条件来在尖峰放电后人工重置神经元。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2531194295900178&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsd2icoNrViaXzL15ibSaR5tZVOqfJWXphWKfwHgnHZlic19S84xIk23Dq5wQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;561&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;看看状态空间，下面是一个特定的输入电流，有两个固定点——一个对应于平衡的膜电位，另一个对应于该尖峰放电的峰值膜电位。当然，有一个源点（source point）分开这两者。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在模型经历了一次分岔之后就会出现尖峰放电：平衡固定点和源点彼此消除，会导致神经元倾向于尖峰放电，不管其初始状态如何。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;INa,p+IK&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;持续钠+钾模型（INa,p+IK）是在 INa,p 的基础上加上钾通道。不同于钠通道，钾通道不会即时激活，其激活速度比钠通道慢。不同于 INa,p，这个模型是 2 维的。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.30927835051546393&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdRicJoWM0sic54PwdkUrPDXlzBt1elz3WQicDKAzaicia7AaRkGLNVtwAXSQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;582&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;建模基于电导的模型的常见方法是将一整个神经元当作单个隔离单元——也就是忽略树突的所有结构复杂度。源自树突分支的信号的传播和合并方式很复杂，其建模的计算成本通常非常高。尽管基于电导的模型比我们前面看到的其它模型更接近实际，但你也应该清楚这个短板。为了解释这些特征，可能会用到电缆方程（cable equation）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;简单的动态模型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5906374501992032&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdQWkDBHdxnhFtnVmB3Psg93DKuL7S0Hgz8NaCDTvApXlrs3zRSwXDuw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1004&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如果你不想受限在思考离子通道上——也就是说，如果你暂时想略过湿件（生物硬件）——那么你能在获取与神经计算相关的细胞行为情况的同时维持可追踪的分析和模拟所需的简洁性吗？Eugene Izhikevich 的简单模型背后的直观思想是好模型需要 1）一个描述膜电位快速变量，2）一个描述恢复动态过程的慢速变量。恢复变量无需明确代表特定的离子电流，而是可以描述所有恢复电流的总和。这种简单模型的构造取决于正确调整其参数，它可能接近鞍点节点分岔或 Andronof-Hopf 分岔。这在模拟神经元网络时有很大的优势。这种方法不仅能通过将动态过程简化为相对简单的方程描述的 2 个变量来降低计算成本，而且还可以使用一个模型表示多种神经性质。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3752620545073375&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdgMyD347ibUSnCU0FAG4G6QibhJGMOic60wJahkqiccVmjBkZNEDOt2g4ibQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;477&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;神经元的计算性质&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经元可以解码来自其它神经元的信息，转换这些信息，然后将这些信息编码成尖峰的形式发送给其它神经元。神经元的计算性质让它们可以执行这种操作。下面给出了一些计算性质的示例（这个列表当然并不全面）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;1、2 和 3 类神经元&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;了解神经元的计算能力的一种方式是查看它们的 F-I 函数——即增益函数。Hodgkin 基于这一指标提出了 3 类神经元，如下面的图片所示：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7701863354037267&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdfmzvibxnPvrKqyefOXsIYNibeEerzia3P1Oa4icic4OvR6ic9SdutFwBqcgA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;644&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;1 类神经元的 F-I 曲线示例。注意这个曲线是平滑的。这些神经元可以生成任意低频率的尖峰队列。在模型中，当鞍点节点分岔发生在极限环上时，这就可能发生。在分岔之后，极限环的周期是无限的。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7767722473604827&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsddSVhczRbwTz7YAunSAgIVvSVASOKCXXia6yUP022vuybIJUicaxricTew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;663&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;2 类神经元的示例。其放电率有不连续的跳变。2 类神经元不能生成任意低频率的尖峰队列。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2786144578313253&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsddttLILrYMDGNzA0LAT9qMsGviadHKdnhEQvOz4HuziaK3IG8DJbjpLsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;664&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;3 类神经元没有有趣的 F-I 曲线，因为它们仅在输入开始时放电。也就是说，它们在给定一个恒定输入时只会生成单个尖峰。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;但是，这些类别可以使用动态系统进行更丰富的描述。1 类神经元的行为是在极限环上的鞍点节点分岔的结果，而 2 类神经元的行为是其它三种分岔的结果。3 类神经元的行为会在固定点突然移动（比膜电位变化的速度快）时出现，使得神经元尖峰放电，然后返回变化后的平衡状态。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;应该说还有很多其它「类型」的神经元。也就是说，神经元的区分不仅是在增益函数方面。实际上艾伦研究所（Allen Institute）目前就有一个研究神经元分类的项目。他们有一个非常棒的开源大脑细胞数据库：http://celltypes.brain-map.org。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;积分器和共振器&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;我们也可以看神经元是积分器还是共振器，从动态系统的角度看，即神经元是经历鞍点节点分岔还是 Andronof-Hopf 分岔。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;积分器会累积信号，直到它们的膜电位达到定义好的阈值（定义吸引盆的分界线）。时间相近的信号加到一起可以产生比相隔较远时更大的效果。积分器是并发检测器（coincidence detector）。某些积分器是 1 类神经元。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.46200607902735563&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdhiaq6N7mR3PsyA7ADcAShiawib7r5dt594DDq8bciadsvNMINsY6aSTBuQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;658&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;积分器示例。这个神经元会随时间累积持续的输入。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7609682299546142&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdesuYLNrdH6wNBiaoIGNKS6drvs2kfWXBI84HnAEASX50ehzgOEuaTXw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;661&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;上面是一个接近鞍点节点分岔的模型。注意沿吸引盆的定义良好的阈值（蓝色线）。正输入的到来会驱使电流状态远离吸引盆，直到其最终避免引发动作电位。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;共振器会对输入信号产生共振（振荡）。共振器不一定要有明确定义的阈值。在接近超临界 Andronof-Hopf 分岔的模型情况下，某些螺旋轨迹指向吸引盆之外，但其它轨迹不会。其阈值很模糊。不同于积分器，共振器对某个频率窄带最敏感。共振器也是并发检测器，但它们还是频率检测器。所有的共振器都是 2 类神经元。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.4752623688155922&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdAVExnnnhlskFkujxTPu3pR6ZGWdEtfA0icvoymQdAXA1U1cJwdqciciaQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;667&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;积分器示例。我们可以使用三个幅度非常小的脉冲构建一个共振器神经元。因为这些脉冲在合适的共振频率上，所以会将膜电位越推越高。这类似于在秋千上按适当的节奏摆动你的腿。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2932330827067669&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsdiaW6RjRMpmQZzo1q4oqI041J1l10vBqUP96oMw32YSDeyGQ4icCkyFnw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;665&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;FitzHugh-Nagumo 模型是一种共振器。在一次尖峰放电后，膜电位类似于衰减的振荡器。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.783359497645212&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9zgrU2v6kd3F1yZV5TxOsduFXx1RJRysLyfWzIuCjGLAag9tt5Eob07Jnwric5vNqpwek3vnrzOmg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;637&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;这是一个接近超临界 Andronof-Hopf 分岔的共振器&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;&lt;br&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经元处理信息的方式非常迷人和复杂，其中还有很多我们仍不清楚的地方（任何充满激情的科学家都会觉得振奋）。本文中所讨论模型还远不够完美。这些模型还没有考虑到神经元的一些重要方面，比如树突树的复杂结构或局部场电位（但确实存在这样的模型）。但是，要记住未来一段时间内，我们很可能都将无法获悉大脑中与认知相关的所有相关情况，模拟是一种研究神经计算的非常实用和有趣的方法。我希望这个系列文章能激励能人巧匠、黑客和程序开发者研究这些模型并找到可能的新发现。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;参考文献&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Eugene M. Izhikevich (2007) Equilibrium. Scholarpedia, 2(10):2014.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Yuri A. Kuznetsov (2006) Andronov-Hopf bifurcation. Scholarpedia, 1(10):1858.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Yuri A. Kuznetsov (2006) Saddle-node bifurcation. Scholarpedia, 1(10):1859.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Izhikevich, Eugene M. Dynamical systems in neuroscience. MIT press, 2007.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Dayan, Peter, and Laurence F. Abbott. Theoretical neuroscience. Vol. 806. Cambridge, MA: MIT Press, 2001.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;text-align: justify;font-style: italic;&quot;&gt;原文链接：http://jackterwilliger.com/biological-neural-networks-part-i-spiking-neurons/&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 14px;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1378743497&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-01-1000000678_503258005</guid>
<pubDate>Tue, 01 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>学界 | DeepMind论文：CNN的变形稳定性和池化无关，滤波器平滑度才是关键</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-01-1000000678_503258000.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ43fgpp8X3EJAWsm*eFzt0JmWVNd30bW0TF8jZYR-IUCYZF-A88Y*zVk6QvaVo1zVy4FaLaO*hkDIMr4onWnBy*4=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    学界 | DeepMind论文：CNN的变形稳定性和池化无关，滤波器平滑度才是关键                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-01&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自arxiv&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：Avraham Ruderman等&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：白悦、刘晓坤&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote style=&quot;white-space: normal;&quot;&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;传统观点认为，CNN 中的池化层导致了对微小平移和变形的稳定性。在本文中，DeepMind 的研究者提出了一个反直觉的结果：CNN 的变形稳定性仅在初始化时和池化相关，在训练完成后则无关；并指出，滤波器的平滑度才是决定变形稳定性的关键因素。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;1. 引言&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;近年来，卷积神经网络（CNN）在计算机视觉的物体识别方面取得了巨大的成功（Krizhevsky et al., 2012; Simonyan &amp;amp; Zisserman, 2014; He et al., 2016; Russakovsky et al., 2015），然而目前尚不清楚这些模型如此成功的原因。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;直到最近，人们才对 CNN 成功的原因有了一个普遍的解释，解释说是因为交错地引入池化层（interleaved pooling layer）才使这些模型对小的平移和变形（translation and deformation）不敏感。视觉域中的许多变化来自视图、物体位置、旋转、尺寸和非刚体变形的微小变化。因此，「对这些变化不太敏感」这一描述有用，但只是看起来合理。此外，长久以来人们都假设引入交错池化层将这种偏差构建到的模型中是有益的 (LeCun et al., 1990; Krizhevsky et al., 2012; Simonyan &amp;amp; Zisserman, 2014; LeCun et al., 2015; Giusti et al., 2013）。然而，这个假设的解释还没有被彻底地验证。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.010600706713781&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vHN3Uic4HcDHI1RJJia962EmSfjibpKVZ6N0zc9gS2O2CH8TD4LODDhVFw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;283&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 1. 变形的 ImageNet 图像示例。左：原始图像，右：变形图像。虽然图像变化了很多，比如，在 L2 度量下，他们可能会被人类赋予相同的标签。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;事实上，最近证明，由交错池化层提供的归纳偏差（inductive bia）并不是良好性能的必要条件，因为最近的一些架构已经减少了交错池化层，而且仍然实现了强大的性能（Springenberg et al., 2014; He et al., 2016）。这引出了本文中的以下问题：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt; 1. 池化是否对学习的变形稳定性是否有影响？&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;2. 在没有池化的情况下是否能实现变形稳定性？&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;3. 如果可以，是如何实现的?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;关于池化作用的传统推理是假设混淆变量（nuisance variables）的不变性在总体上有帮助。这里，本文对其有效性做出了一个猜想，并进一步定义了本文将讨论的特定类别的混淆变形（nuisance deformations）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;本文的主要贡献是：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;学习稳定性：本文展示了没有池化的网络在初始化时对变形敏感，但经过训练学习表征的过程之后对变形是稳定的。作者还表明，即使在有池化的网络中，训练过程中变形稳定性模式也会发生显著变化。此外，在训练过程中，变形稳定性有时会下降，这表明这种稳定性不是单方面的有用（3.2 节）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;收敛稳定性：本文表明池化和非池化训练网络的层间变形稳定性模式最终会收敛到相似的结构（3.3 小节）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;稳定性的实现：本文表明无论池化还是非池化网络，都可通过滤波器的平滑性实现和调节变形稳定性（第 4 节）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;此外，从理解神经网络的权重和层如何影响整个网络行为的角度来看，此工作提供了一个有潜在价值的重要例子，解释各层中权重的简单性质如何影响网络的整体计算。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;从设计神经网络模型的角度来看，这项工作提供了对「指导设计神经网络 20 多年的重要归纳偏差」的洞察。长期以来人们认为池化对实现变形稳定性很重要，认为池化是 CNN 成功的主要因素。这项工作表明，无论看起来多么合理，并通过经验和理论验证来加强，我们对神经网络工作原理的直觉往往是不准确的。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.26288659793814434&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vVEhcuhgSaYV0VldV7VwU0JehduBflaK7icaBpfDybndKCib7cBmVBWRw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;970&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 2：生成变形图像：为了使图像随机变形，我们：（a）从固定均匀间隔的控制点网格开始（这里是 4x4 个控制点），然后在点邻域内为每个控制点选择一个随机源；(b) 然后使用薄板插值平滑得到的矢量场；(c) 矢量场叠加在原始图像上：使用原始图像中箭头尾部附近的值的双线性插值计算箭头顶端的最终结果中的值；(d) 最终结果。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;3. 在池化和非池化的网络中学习变形稳定性是相似的&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.29035532994923857&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vnYhlZUj5rRHEdH510ozicltwzicxhqw4hEzLicd1P1JLR0WS3zSIG4Hibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;985&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 3：池化在初始化时赋予变形稳定性，但在训练过程中稳定性发生显着变化，而且无论是否池化，都会收敛到类似的稳定性。(a) 在初始化时，最大池化的网络对变形较不敏感。(b) 训练后，池化和非池化的网络对层的变形有非常相似的敏感模式。CIFAR10 有类似的模式： (c) 初始化时，池化对变形的敏感性有显着影响，但 (d) 训练后，下采样层的选择对所有层的变形稳定性几乎没有影响。图层 0 对应于输入图像；这些层包括下采样层；最后一层对应于最后的下采样层。因此对于 CIFAR10，我们一共有 13 层，包括 1 个输入层、8 个卷积层和 4 个池化层。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;4. 滤波器的平滑度有助于提高变形稳定性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5668662674650699&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vAx7HVf8jN3iabLib41GTFsqLnADq0XsmKA2Uf7d3XHUIdHYva0ibTRYtA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;501&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 4：使用更平滑的随机滤波器进行初始化会使变形稳定性更好。使用标准偏差σ的高斯滤波器对滤波器进行平滑处理，然后测量对变形的敏感度。当增加σ来增加滤波器的平滑度时，表征对变形的敏感度下降。较深的线条代表更平滑的随机滤波器。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.34959349593495936&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vQqfYMnY3cpUkxklBfqiaDufxjVtFc7qA15RCqblUWqqx9mcCZIEAaaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;984&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 5：需要更高变形稳定性的任务要用更平滑的滤波器。(a) 生成一个合成任务，每个类基于单个 MNIST 图像，每类的示例通过应用该类图像的强度 C 的随机变形生成。左边的图像使用强度 3 的变形生成，右列图像分别使用强度为 1、2、3、4 的变形生成。(b) 训练后，在强变形训练任务上得到的网络滤波器更平滑。黑色虚线表示初始化的平均值。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;5：滤波平滑性取决于监督任务类型&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3201219512195122&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vpU30HABlhMzZ9wlrUNnfrYClkaKMJxN0mwX6qvnR5V9V7CyfC2sB7Q/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;984&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 6：训练得到更平滑的滤波器。(a) 和 (b) 在训练之后，滤波器明显更加平滑，不同的架构收敛到类似的滤波平滑度。（c）对随机标签进行训练时，滤波器的平滑性很大程度取决于选择的下采样层。有趣的是，（a）训练 ImageNet 时滤波器的平滑度逐层递增，（b）CIFAR10 则是逐层递减。黑色虚线表示初始化的平均值。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6279527559055118&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7vBeUibkKFp9L9XYiab6Jb8zr6LpAFAuBMglNhtaTIxKiaX61VJ12m4abew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;508&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 7：训练随机标签时，变形稳定性依赖于架构类型。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;论文：Learned Deformation Stability in Convolutional Neural Networks（卷积神经网络的学习变形稳定性）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.21442495126705652&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW92DQfG3m5xcgEVp8mAmf7v5Y61OdKJsxyYZd4DkImeJY8OTaNcfneqzXxBUbxa5nicOsuV7BOvTCg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1026&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;论文地址：https://arxiv.org/pdf/1804.04438.pdf&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;传统观点认为，卷积神经网络中的池化层导致了对微小平移和变形的稳定性。此项工作中，我们根据经验探索了这一观点。我们发现，虽然池化层在初始化时赋予网络变形稳定形，但在训练的过程中每层的变形稳定性变化显著，一些层甚至有所减小，这表明变形稳定性不是单方面有帮助的。令人惊讶的是，训练完成之后，层间的变形稳定性模式很大程度上与是否引入池化无关。然后我们在本文展示了决定变形稳定性的一个重要因素是滤波器的平滑度。此外，滤波器的平滑度和变形稳定性不仅是输入图像分布的结果，而且关键地取决于图像和标签的联合分布。本项工作展示了学习变形稳定性等偏差的一种方法，并提供了「理解学习网络权重的简单性质如何有助于对整体网络的计算」的一个例子。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;59551629&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-01-1000000678_503258000</guid>
<pubDate>Tue, 01 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>如何写一手漂亮的模型：面向对象编程的设计原则综述</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-01-1000000678.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ43fgpp8X3EJAWsm*eFzt0JlM90W70NYqNKEAfwUmA8v70lyuYbsqvU68eABB1czY48QKoo2TsoNBuEYN3RDiJlo=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    如何写一手漂亮的模型：面向对象编程的设计原则综述                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-01&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;white-space: normal;max-width: 100%;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;color: rgb(62, 62, 62);font-size: 16px;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;font-size: 14px;&quot;&gt;Medium&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;color: rgb(62, 62, 62);font-size: 16px;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;font-family: inherit;text-decoration: inherit;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;面向对象的编程在实现想法乃至系统的过程中都非常重要，我们不论是使用 TensorFlow 还是 PyTorch 来构建模型都或多或少需要使用类和方法。而采用类的方法来构建模型会令代码非常具有可读性和条理性，本文介绍了算法实现中使用类和方法来构建模型所需要注意的设计原则，它们可以让我们的机器学习代码更加美丽迷人。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;大多数现代编程语言都支持并且鼓励面向对象编程（OOP）。即使我们最近似乎看到了一些偏离，因为人们开始使用不太受 OOP 影响的编程语言（例如 Go, Rust, Elixir, Elm, Scala），但是大多数还是具有面向对象的属性。我们在这里概括出的设计原则也适用于非 OOP 编程语言。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;为了成功地写出清晰的、高质量的、可维护并且可扩展的代码，我们需要以 Python 为例了解在过去数十年里被证明是有效的设计原则。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;对象类型&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;因为我们要围绕对象来建立代码，所以区分它们的不同责任和变化是有用的。一般来说，面向对象的编程有&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;三种类型的对象。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;1. 实体对象&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;这类对象通常对应着问题空间中的一些现实实体。比如我们要建立一个角色扮演游戏（RPG），那么简单的 Hero 类就是一个实体对象。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Hero&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, health, mana)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._health = health&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._mana = mana&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;&quot;&quot;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        Returns the attack damage of the Hero&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, damage: int)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._health -= damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is_alive&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self._health &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这类对象通常包含关于它们自身的属性（例如 health 或 mana），这些属性根据具体的规则都是可修改的。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;2. 控制对象（Control Object）&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;控制对象（有时候也称作管理对象）主要负责与其它对象的协调，这是一些管理并调用其它对象的对象。我们上面的 RPG 案例中有一个很棒的例子，Fight 类控制两个英雄，并让它们对战。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Fight&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;FightOver&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Exception)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, winner, *args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.winner = winner&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            super(*args, **kwargs)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, hero_a: Hero, hero_b: Hero)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._hero_a = hero_a&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._hero_b = hero_b&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.fight_ongoing = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.winner = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;fight&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;while&lt;/span&gt; self.fight_ongoing:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._run_round()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;f&#39;The fight has ended! Winner is #&lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{self.winner}&lt;/span&gt;&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_run_round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._run_attack(self._hero_a, self._hero_b)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._run_attack(self._hero_b, self._hero_a)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; self.FightOver &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._finish_round(e.winner)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_run_attack&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, attacker: Hero, victim: Hero)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        damage = attacker.attack()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        victim.take_damage(damage)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; victim.is_alive():&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; self.FightOver(winner=attacker)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_finish_round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, winner: Hero)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.winner = winner&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.fight_ongoing = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在这种类中，为对战封装编程逻辑可以给我们提供多个好处：其中之一就是动作的可扩展性。我们可以很容易地将参与战斗的英雄传递给非玩家角色（NPC），这样它们就能利用相同的 API。我们还可以很容易地继承这个类，并复写一些功能来满足新的需要。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;3. 边界对象（Boundary Object）&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;这些是处在系统边缘的对象。任何一个从其它系统获取输入或者给其它系统产生输出的对象都可以被归类为边界对象，无论那个系统是用户，互联网或者是数据库。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;UserInput&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, input_parser)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.input_parser = input_parser&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_command&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;&quot;&quot;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        Takes the user&#39;s input, parses it into a recognizable command and returns it&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        command = self._parse_input(self._take_input())&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; command&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_parse_input&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, input)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.input_parser.parse(input)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;_take_input&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; NotImplementedError()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;UserMouseInput&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(UserInput)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;UserKeyboardInput&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(UserInput)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;UserJoystickInput&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(UserInput)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些边界对象负责向系统内部或者外部传递信息。例如对要接收的用户指令，我们需要一个边界对象来将键盘输入（比如一个空格键）转换为一个可识别的域事件（例如角色的跳跃）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;Bonus：值对象（Value Object）&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;价值对象代表的是域（domain）中的一个简单值。它们无法改变，不恒一。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;如果将它们结合在我们的游戏中，Money 类或者 Damage 类就表示这种对象。上述的对象让我们容易地区分、寻找和调试相关功能，然而仅使用基础的整形数组或者整数却无法实现这些功能。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Money&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, gold, silver, copper)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.gold = gold&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.silver = silver&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.copper = copper&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__eq__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, other)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.gold == other.gold &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; self.silver == other.silver &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; self.copper == other.copper&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__gt__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, other)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.gold == other.gold &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; self.silver == other.silver:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.copper &amp;gt; other.copper&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.gold == other.gold:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.silver &amp;gt; other.silver&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.gold &amp;gt; other.gold&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__add__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, other)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; Money(gold=self.gold + other.gold, silver=self.silver + other.silver, copper=self.copper + other.copper)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;f&#39;Money Object(Gold: &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{self.gold}&lt;/span&gt;; Silver: &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{self.silver}&lt;/span&gt;; Copper: &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{self.copper}&lt;/span&gt;)&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__repr__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.__str__()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;print(Money(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;) == Money(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# =&amp;gt; True&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;print(Money(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;) &amp;gt; Money(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# =&amp;gt; False&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;print(Money(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;) + Money(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# =&amp;gt; Money Object(Gold: 2; Silver: 2; Copper: 1)&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;它们可以归类为实体对象的子类别。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;关键设计原则&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;设计原则是软件设计中的规则，过去这些年里已经证明它们是有价值的。严格地遵循这些原则有助于软件达到一流的质量。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;抽象（A&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;bstraction&lt;/span&gt;）&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;抽象就是将一个概念在一定的语境中简化为原始本质的一种思想。它允许我们拆解一个概念来更好的理解它。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;上面的游戏案例阐述了抽象，让我们来看一下 Fight 类是如何构建的。我们以尽可能简单的方式使用它，即在实例化的过程中给它两个英雄作为参数，然后调用 fight() 方法。不多也不少，就这些。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;代码中的抽象过程应该遵循最少意外（POLA）的原则，抽象不应该用不必要和不相关的行为/属性。换句话说，它应该是直观的。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;注意，我们的 Hero#take_damage() 函数不会做一些异常的事情，例如在还没死亡的时候删除角色。但是如果他的生命值降到零以下，我们可以期望它来杀死我们的角色。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;封装&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;封装可以被认为是将某些东西放在一个类以内，并限制了它向外部展现的信息。在软件中，限制对内部对象和属性的访问有助于保证数据的完整性。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;将内部编程逻辑封装成黑盒子，我们的类将更容易管理，因为我们知道哪部分可以被其它系统使用，哪些不行。这意味着我们在保留公共部分并且保证不破坏任何东西的同时能够重用内部逻辑。此外，我们从外部使用封装功能变得更加简单，因为需要考虑的事情也更少。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在大多数编程语言中，封装都是通过所谓的 Access modifiers（访问控制修饰符）来完成的（例如 private，protected 等等）。Python 并不是这方面的最佳例子，因为它不能在运行时构建这种显式修饰符，但是我们使用约定来解决这个问题。变量和函数前面的_前缀就意味着它们是私有的。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;举个例子，试想将我们的 Fight#_run_attack 方法修改为返回一个布尔变量，这意味着战斗结束而不是发生了意外。我们将会知道，我们唯一可能破坏的代码就是 Fight 类的内部，因为我们是把这个函数设置为私有的。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;请记住，代码更多的是被修改而不是重写。能够尽可能清晰、较小影响的方式修改代码对开发的灵活性很重要。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;分解&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;分解就是把一个对象分割为多个更小的独立部分，这些独立的部分更易于理解、维护和编程。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;试想我们现在希望 Hero 类能结合更多的 RPG 特征，例如 buffs，资产，装备，角色属性。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Hero&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, health, mana)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._health = health&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._mana = mana&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._strength = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._agility = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._stamina = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.level = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._items = {}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._equipment = {}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._item_capacity = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;30&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stamina_buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.agility_buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.strength_buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.buff_duration = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;level_up&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.level += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._stamina += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._agility += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._strength += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._health += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_buff&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, stamina_increase, strength_increase, agility_increase)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stamina_buff = stamina_increase&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.agility_buff = agility_increase&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.strength_buff = strength_increase&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._stamina += stamina_increase&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._strength += strength_increase&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._agility += agility_increase&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.buff_duration = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;10&lt;/span&gt;  &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# rounds&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass_round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.buff_duration &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.buff_duration -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.buff_duration == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:  &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Remove buff&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._stamina -= self.stamina_buff&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._strength -= self.strength_buff&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._agility -= self.agility_buff&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self._health -= self.stamina_buff * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.buff_duration = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.stamina_buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.agility_buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.strength_buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;&quot;&quot;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        Returns the attack damage of the Hero&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt; + (self._agility * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;) + (self._strength * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, damage: int)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._health -= damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is_alive&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self._health &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item: Item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self._item_capacity == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;No more free slots&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._items[item.id] = item&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._item_capacity -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;equip_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item: Item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; item.id &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self._items:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Item is not present in inventory!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._equipment[item.slot] = item&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._agility += item.agility&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._stamina += item.stamina&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._strength += item.strength&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._health += item.stamina * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5&lt;br&gt;# 缺乏分解的案例&lt;br&gt;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们可能会说这份代码已经开始变得相当混乱了。我们的 Hero 对象一次性设置了太多的属性，结果导致这份代码变得相当脆弱。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;例如，我们的耐力分数为 5 个生命值，如果将来要修改为 6 个生命值，我们就要在很多地方修改这个实现。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;解决方案就是将 Hero 对象分解为多个更小的对象，每个小对象可承担一些功能。下面展示了一个逻辑比较清晰的架构：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.4565&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW9tox7gia6LQVibDIMnOytSGqWqibZ1j9lg9j5FxaKibGxUO2tZtjBmuTDTicyz29hu1KQZycZwleZWmwg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2000&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; copy &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; deepcopy&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;AttributeCalculator&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    @staticmethod&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;stamina_to_health&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, stamina)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; stamina * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;6&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    @staticmethod&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;agility_to_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, agility)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; agility * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    @staticmethod&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;strength_to_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, strength)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; strength * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;HeroInventory&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;FullInventoryException&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Exception)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, capacity)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._equipment = {}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._item_capacity = capacity&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;store_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item: Item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self._item_capacity &amp;lt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; self.FullInventoryException()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._equipment[item.id] = item&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._item_capacity -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;has_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; item.id &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self._equipment&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;HeroAttributes&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, health, mana)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.health = health&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.mana = mana&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stamina = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.strength = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.agility = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.damage = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;increase&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, stamina=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, agility=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, strength=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stamina += stamina&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.health += AttributeCalculator.stamina_to_health(stamina)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.damage += AttributeCalculator.strength_to_damage(strength) + AttributeCalculator.agility_to_damage(agility)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.agility += agility&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.strength += strength&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;decrease&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, stamina=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, agility=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, strength=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stamina -= stamina&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.health -= AttributeCalculator.stamina_to_health(stamina)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.damage -= AttributeCalculator.strength_to_damage(strength) + AttributeCalculator.agility_to_damage(agility)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.agility -= agility&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.strength -= strength&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;HeroEquipment&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, hero_attributes: HeroAttributes)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.hero_attributes = hero_attributes&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._equipment = {}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;equip_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self._equipment[item.slot] = item&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.hero_attributes.increase(stamina=item.stamina, strength=item.strength, agility=item.agility)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;HeroBuff&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Expired&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Exception)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, stamina, strength, agility, round_duration)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stamina = stamina&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.strength = strength&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.agility = agility&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.duration = round_duration&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with_attributes&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, hero_attributes: HeroAttributes)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        buff = deepcopy(self)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        buff.attributes = hero_attributes&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; buff&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.attributes &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; Exception()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes.increase(stamina=self.stamina, strength=self.strength, agility=self.agility)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;deapply&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes.decrease(stamina=self.stamina, strength=self.strength, agility=self.agility)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass_round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.duration -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.has_expired():&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.deapply()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; self.Expired()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;has_expired&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.duration == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Hero&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, health, mana)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes = HeroAttributes(health, mana)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.level = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.inventory = HeroInventory(capacity=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;30&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.equipment = HeroEquipment(self.attributes)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;level_up&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.level += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes.increase(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;&quot;&quot;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        Returns the attack damage of the Hero&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.attributes.damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, damage: int)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes.health -= damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_buff&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, buff: HeroBuff)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.buff = buff.with_attributes(self.attributes)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.buff.apply()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass_round&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.buff:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.buff.pass_round()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; HeroBuff.Expired:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.buff = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is_alive&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.attributes.health &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item: Item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.inventory.store_item(item)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;equip_item&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, item: Item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; self.inventory.has_item(item):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Item is not present in inventory!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.equipment.equip_item(item)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;现在，在将 Hero 对象分解为 HeroAttributes、HeroInventory、HeroEquipment 和 HeroBuff 对象之后，未来新增功能就更加容易、更具有封装性、具有更好的抽象，这份代码也就越来越清晰了。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;下面是三种分解关系：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;关联：在两个组成部分之间定义一个松弛的关系。两个组成部分不互相依赖，但是可以一起工作。例如 Hero 对象和 Zone 对象。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;聚合：在整体和部分之间定义一个弱「包含」关系。这种关系比较弱，因为部分可以在没有整体的时候存在。例如 HeroInventory（英雄财产）和 Item（条目）。HeroInventory 可以有很多 Items，而且一个 Items 也可以属于任何 HeroInventory（例如交易条目）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;组成：一个强「包含」关系，其中整体和部分不能彼此分离。部分不能被共享，因为整体要依赖于这些特定的部分。例如 Hero（英雄）和 HeroAttributes（英雄属性）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;泛化&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;泛化可能是最重要的设计原则，即我们提取共享特征，并将它们结合到一起的过程。我们都知道函数和类的继承，这就是一种泛化。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;做一个比较可能会将这个解释得更加清楚：尽管抽象通过隐藏非必需的细节减少了复杂性，但是泛化通过用一个单独构造体来替代多个执行类似功能的实体。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Two methods which share common characteristics&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_physical_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, physical_damage)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;f&#39;Took &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{physical_damage}&lt;/span&gt; physical damage&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self._health -= physical_damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_spell_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, spell_damage)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;f&#39;Took &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{spell_damage}&lt;/span&gt; spell damage&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self._health -= spell_damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# vs.&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# One generalized method&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, damage, is_physical=True)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    damage_type = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;physical&#39;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; is_physical &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;spell&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;f&#39;Took &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{damage}&lt;/span&gt; &lt;span class=&quot;hljs-subst&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;{damage_type}&lt;/span&gt; damage&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    self._health -= damage&lt;br&gt;    &lt;br&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;以上是函数示例，这种方法缺少泛化性能，而下面展示了具有&lt;/span&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;泛化性能的案例。&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;margin-bottom: 20px;line-height: normal;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Entity&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Should not be initialized directly!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;&quot;&quot;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        Returns the attack damage of the Hero&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.attributes.damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, damage: int)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes.health -= damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is_alive&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.attributes.health &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Hero&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Entity)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;NPC&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Entity)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在给出的例子中，我们将常用的 Hero 类和 NPC 类泛化为一个共同的父类 Entity，并通过继承简化子类的构建。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;这里，我们通过将它们的共同功能移动到基本类中来减少复杂性，而不是让 NPC 类和 Hero 类将所有的功能都实现两次。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们可能会过度使用继承，因此很多有经验的人都建议我们更偏向使用组合（Composition）而不是继承（https://stackoverflow.com/a/53354）。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;继承常常被没有经验的程序员滥用，这可能是由于继承是他们首先掌握的 OOP 技术。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;组合&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;组合就是把多个对象结合为一个更复杂对象的过程。这种方法会创建对象的示例，并且使用它们的功能，而不是直接继承它。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;使用组合原则的对象就被称作组合对象（composite object）。这种组合对象在要比所有组成部分都简单，这是非常重要的一点。当把多个类结合成一个类的时候，我们希望把抽象的层次提高一些，让对象更加简单。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;组合对象的 API 必须隐藏它的内部模块，以及内部模块之间的交互。就像一个机械时钟，它有三个展示时间的指针，以及一个设置时间的旋钮，但是它内部包含很多运动的独立部件。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;正如我所说的，组合要优于继承，这意味着我们应该努力将共用功能移动到一个独立的对象中，然后其它类就使用这个对象的功能，而不是将它隐藏在所继承的基本类中。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;让我们阐述一下过度使用继承功能的一个可能会发生的问题，现在&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们仅仅向游戏中增加一个行动：&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;p style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: normal;margin-bottom: 20px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Entity&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, x, y)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.x = x&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.y = y&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; Exception(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Should not be initialized directly!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;attack&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt; -&amp;gt; int:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;&quot;&quot;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        Returns the attack damage of the Hero&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &quot;&quot;&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.attributes.damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;take_damage&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self, damage: int)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.attributes.health -= damage&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is_alive&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; self.attributes.health &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;move_left&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.x -= &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;move_right&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.x += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Hero&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Entity)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(165, 218, 45);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;NPC&lt;/span&gt;&lt;span class=&quot;hljs-params&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(255, 152, 35);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;(Entity)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;正如我们所学到的，我们将 move_right 和 move_left 移动到 Entity 类中，而不是直接复制代码。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;好了，如果我们想在游戏中引入坐骑呢？&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;坐骑也应该需要左右移动，但是它没有攻击的能力，甚至没有生命值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们的解决方案可能是&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;简单地将 move 逻辑移动到独立的 MoveableEntity 或者 MoveableObject 类中，这种类仅仅含有那项功能。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;那么，如果我们想让坐骑具有生命值，但是无法攻击，那该怎么办呢？希望你可以看到类的层次结构是如何变得复杂的，即使我们的业务逻辑还是相当简单。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;一个从某种程度来说比较好的方法是将动作逻辑抽象为 Movement 类（或者其他更好的名字），并且在可能需要的类里面把它实例化。这将会很好地封装函数，并使其在所有种类的对象中都可以重用，而不仅仅局限于实体类。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;strong&gt;批判性思考&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;尽管这些设计原则是在数十年经验中形成的，但盲目地将这些原则应用到代码之前进行批判性思考是很重要的。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;任何事情都是过犹不及！有时候这些原则可以走得很远，但是实际上有时会变成一些很难使用的东西。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;作为一个工程师，我们需要根据独特的情境去批判地评价最好的方法，而不是盲目地遵从并应用任意的原则。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;关注点的内聚、耦合和分离&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;内聚（Cohesion）&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;内聚代表的是模块内部责任的分明，或者是模块的复杂度。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;如果我们的类只执行一个任务，而没有其它明确的目标，那么这个类就有着高度内聚性。另一方面，如果从某种程度而言它在做的事情并不清楚，或者具有多于一个的目标，那么它的内聚性就非常低。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我们希望代码具有较高的内聚性，如果发现它们有非常多的目标，或许我们应该将它们分割出来。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;耦合&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;耦合获取的是连接不同类的复杂度。我们希望类与其它的类具有尽可能少、尽可能简单的联系，所以我们就可以在未来的事件中交换它们（例如改变网络框架）。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在很多编程语言中，这都是通过大量使用接口来实现的，它们抽象出处理特定逻辑的类，然后表征为一种适配层，每个类都可以嵌入其中。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;分离关注点&lt;/span&gt;&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;分离关注点（SoC）是这样一种思想：软件系统必须被分割为功能上互不重叠的部分。或者说关注点必须分布在不同的地方，其中关注点表示能够为一个问题提供解决方案。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;网页就是一个很好的例子，它具有三个层（信息层、表示层和行为层），这三个层被分为三个不同的地方（分别是 HTML，CSS，以及 JS）。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;如果重新回顾一下我们的 RPG 例子，你会发现它在最开始具有很多关注点（应用 buffs 来计算袭击伤害、处理资产、装备条目，以及管理属性）。我们通过分解将那些关注点分割成更多的内聚类，它们抽象并封装了它们的细节。我们的 Hero 类现在仅仅作为一个组合对象，它比之前更加简单。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;strong&gt;结语&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对小规模的代码应用这些原则可能看起来很复杂。但是事实上，对于未来想要开发和维护的任何一个软件项目而言，这些规则都是必须的。在刚开始写这种代码会有些成本，但是从长期来看，它会回报以几倍增长。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;这些原则保证我们的系统更加：&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;可扩展：高内聚使得不用关心不相关的功能就可以更容易地实现新模块。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;margin-bottom: 5px;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可维护：低耦合保证一个模块的改变通常不会影响其它模块。高内聚保证一个系统需求的改变只需要更改尽可能少的类。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可重用：高内聚保证一个模块的功能是完整的，也是被妥善定义的。低耦合使得模块尽可能少地依赖系统的其它部分，这使得模块在其它软件中的重用变得更加容易。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;margin-bottom: 20px;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;在本文中，我们首先介绍了一些高级对象的类别（实体对象、边界对象以及控制对象）。&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;然后我们了解了一些构建对象时使用的关键原则，比如抽象、泛化、分解和封装等。&lt;/span&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;最后，我们引入了两个软件质量指标（耦合和内聚），然后学习了使用这些原则能够带来的好处。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;我希望这篇文章提供了一些关于设计原则的概览，如果我们希望自己能够在这个领域获得更多的进步，我们还需要了解更多具体的操作。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;font-size: 14px;text-align: justify;white-space: normal;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;原文地址：https://medium.freecodecamp.org/a-short-overview-of-object-oriented-software-design-c7aa0a622c83&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1537078956&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-01-1000000678</guid>
<pubDate>Tue, 01 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>ICLR 2018 | Oral论文：zero-shot视觉模仿系统GSP，仅观察演示就学会执行任务</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-04-30-1000000677_503257999.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ43ZZrGqeqmLWIMzzpczsebc7HDYj315kMh7FJPUL-bDoh8MuyGvknWmdkjsE3*zvhA46Brb0Cz-9BxlSZTI0v8Y=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    ICLR 2018 | Oral论文：zero-shot视觉模仿系统GSP，仅观察演示就学会执行任务                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-04-30&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自arxiv&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：Deepak Pathak&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Nurhachu Null、刘晓坤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 14px;text-align: justify;&quot;&gt;ICLR 2018将于今晚正式开始，机器之心带你抢先一睹这篇来自UC Berkeley的Oral论文。目前模仿学习依赖于专家监督来学习模仿什么以及如何模仿。作者寻求可替代的范式，其中智能体只需知道要模仿什么，然后自主学习如何模仿。该方法是 zero-shot 的，因为在训练或者推理任务演示的时候，智能体从未接触专家如何执行任务的信息。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;研究者在两个实际环境中测试了该 zero-shot 方法：分别是使用 Baxter 机器人的复杂绳索操作和使用 TurtleBot 机器人的陌生环境室内导航。在 VizDoom 环境模仿的进一步实验中，给出了这样的证据：更好的探索机制可以导致更强大的策略，策略反过来又进一步提升最终的任务性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.625&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StBAyZjv2HSncG6lEL1lT4zRgUWjPVViba3fwQSf3fria43B98y0pHktGQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;320&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;Baxter 机器人操作绳索。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.625&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StBDGNtqz669B6c8PibXzbTe7A7vhibew5bggWoxMTdcjibiaGdAfm4lw26A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;320&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;TurtleBot 机器人室内导航。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(123, 12, 0);font-size: 14px;text-align: justify;&quot;&gt;演示及代码链接：https://pathak22.github.io/zeroshot-imitation/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模仿专家演示是从原始感知观察中学习执行任务的强大机制。从演示中学习（learning from demonstration，LfD）(Argall et al., 2009; Ng &amp;amp; Russell, 2000; Pomerleau, 1989; Schaal, 1999) 目前的主要范式要么需要专家手动移动机器人的机械臂（也就是运动觉训练），要么需要专家远程操纵机器人来执行期望的任务。在训练时，专家通常会为一个任务提供多次演示，这样就会在智能体的视角以观察-行动（observation-action）对的形式生成数据。然后智能体为执行感兴趣的任务而从这些数据中提取出策略。这种严格监督的方法对人类专家而言是难以置信的乏味，必须通过控制机器人来提供演示。此外，对每个需要机器人来执行的新任务而言，专家必须提供一套新的演示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;除了传达如何通过观察-行动对来执行任务，一个更加泛化的形式是让专家通过一段视频或者一个稀疏的图像序列提供对期望世界状态的观察，仅传达需要做什么。这样，智能体需要自己推理如何执行任务（也就是行动）。在心理学中，这被称为基于观察的学习 (Bandura &amp;amp; Walters, 1977)。尽管这是一个相对困难的学习任务，但是它更加有趣，因为专家可以快速容易地演示多个任务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对于一个没有任何先验知识的智能体而言，除了在最简单的例子中之外，仅通过简单地观看视觉演示来模仿一个任务是极其困难的。所以，本质问题是：为了模仿，智能体必须具备哪些先验知识？有大量的工作寻求通过从观察中手动预定义必须从观察推理的状态来捕捉先验知识 (Breazeal &amp;amp; Scassellati, 2002; Dillmann, 2004; Ikeuchi &amp;amp; Suehiro, 1994; Kuniyoshi et al., 1989; 1994; Yang et al., 2015)。然后智能体通过这些状态来推理如何执行任务（也就是规划模仿）。不幸的是，计算机视觉系统通常无法准确地估计状态变量，而且对于下行规划系统而言对这种误差的鲁棒性被证明是很重要的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5006747638326585&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StONax40KpveBGrt8cUM11ACicsYwddQINttXEdkalZBMOib0r4DnunVVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;741&quot; style=&quot;&quot;&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 1： 目标制约的技能策略（GSP）以当前和目标观察为输入，输出能够实现目标的行动序列。我们比较了以下几个 GSP 模型的性能：（a）简单的逆模型；（b）具有之前动作历史的多步 GSP；（c）具有之前动作历史和前向模型作为正则项的多步 GSP；（d）本文提出的具有前向一致性损失的多步 GSP。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在本论文中，研究者沿着 (Agrawal et al., 2016; Levine et al., 2016; Pinto &amp;amp; Gupta, 2016) 的方向来寻求一个可替代的范式，智能体在没有任何专家监督的情况下将这些探索数据提取为目标指引的技能。这些技能可以被用来模仿由专家提供的视觉演示 (Nair et al., 2017)。这里所说的技能指的是能够预测出相关动作序列的功能，这个动作序列能够将智能体由当前的观察状态带到目标状态。这个功能被称为 GSP（目标制约的技能策略）。GSP 通过自监督的方式习得，与 (Agrawal et al., 2016; Andrychowicz et al., 2017) 类似，通过将智能体在探索环境时遇到的状态重新标记为目标，以及将智能体执行的动作重新标记为预测目标来完成。在推理过程中，在给定一次演示中的目标观察时，GSP 可以从目前的观察中反过来推理如何达到这些目标，因此就可以逐步模仿。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;学习 GSP 时的一个关键挑战是：通常，从一个状态到达另一个状态存在多种可能的方式，状态之间的轨迹分布式多模态的。研究者用原创的基于直觉的前向一致性损失解决了这个问题，这个直觉就是：对绝大多数任务而言，达到目标要比如何达到目标更重要。为了让它运转起来，首先需要学习一个能够在给定一个行动（action）和当前观察（observation）时可以预测下一个状态的前向模型。研究者使用用于 GSP 选择的动作的前向模型的输出和真实的下一个状态之间的差别来训练 GSP。这个损失在不需要准确匹配动作本身时就可以让 GSP 预测的动作和真实的下一个动作保持一致，因此会保证预测得到的与真实动作不同的动作—但是会导致同样的下一个状态—不会在不经意间受到惩罚。为了说明达到不同目标所需的不同的步骤数目，研究者使用目标识别器来联合优化 GSP，目标识别器可以判定当前的目标是否已经被满足了。图 1 是对 GSP 结构的简单描述。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这个方法称为是 zero-shot 的，因为智能体从不需要获取专家的动作，无论是在训练 GSP 的过程还是推理阶段的任务演示过程。相反，绝大多数关于 one-shot 模仿学习的最近工作都需要关于动作的完全知识，以及在训练过程中对专家演示的充分了解 (Duan et al., 2017; Finn et al., 2017)。总之，该方法具有以下特点：（1）在学习过程中不需要任何外在激励或者专家监督，（2）仅仅在推理阶段需要演示，（3）仅仅将演示限制在视觉观察上，而不是所有的状态动作。这里的智能体是学习模仿，而不是通过模仿来学习。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;研究者在真实机器人上测试了该 zero-shot 模仿器，这些机器人使用 Baxter 进行绳索操作或者使用 TurtleBot 来进行室内导航。前向一致损失能够在复杂的打结任务中提升性能，将准确率从 36% 提升至 60%。在室内导航试验中，通过指引一个简单的有轮子的机器人在部分可观察的室内环境中行走，结果表明学习到的 GSP 可以泛化到陌生的环境中。进一步，在 VizDoom 环境中使用导航的实验，表明利用好奇心驱动的探索 (Oudeyer et al., 2007; Pathak et al., 2017; Schmidhuber, 1991) 学到的 GSP 可以比使用随机探索数据学到的 GSP 更准确地遵循演示。总之，实验表明前向一致的 GSP 可以在没有特定环境或者特定任务假设时被用来模仿很多任务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7445742904841403&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StGGuEal7yuwtRk8qPFAoU8etQic9hnYq5wiaUQ94zRBq9jd8PA0rRv1Zw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 2： 使用 Baxter 机器人的绳索操作任务的定性演示。（a）机器人系统设置。（b）打结任务的推理阶段由人类提供的人类演示图像序列（顶行），在模仿已有的演示时机器人达到的状态的观察图像序列（底行）。（c）在将绳子扭成「S」形的任务中，人类演示的图像序列和机器人达到的状态的图像序列，智能体可以成功地模仿这个演示。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.25346784363177804&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StE4gv1hu5JnrbWJSV5WGIbmcjZFHQrUoPMs7aDoQ0smBv1BZEYgt9yQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;793&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 4：从初始图像（左上）到达目标图像（右图）的过程中 TurtleBot 轨迹的演示。由于初&lt;/em&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;始图像和目标图像没有重叠，所以机器人首先通过原地打转来进行探索。一旦它检测到了当前图像和目标图像之间的重叠，它就会朝着目标图像移动（也就是第 42 步的图像）。需要注意的是，其中没有显式地训练机器人来探索，而且这种探索行为是自监督学习过程中自然发生的。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.16359163591635917&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0St7yGWWXuu0M1MgzEacDSsmvf67GBHFPicovMQBX7IcAKT4A0CBFJibfmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;813&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 1： 导航任务中，在陌生环境中使用单幅图像作为目标时，不同方法的定量测评。每一列代表对应一个不同的初始/目标图像时的不同运行。完全的 GSP 模型在成功运行时达到目标所花的平均时间更长，但是具有更高的成功率。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2747524752475248&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StofJNY8Lib3dELOqibdTgAFMEIanMYicKibHicCzSzFJ7CQ7lleqC9ndPHjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;808&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 5： 在跟随一个给定的图像序列（顶行）的视觉演示时 TurtleBot 的性能。TurtleBot 以这样的方式被放置：演示中的第一张图像跟目前的观察没有重叠。即使如此，机器人还是能够朝着靠近第一张演示图像靠近（如 Robot WayPoint-1 所示），然后遵循给定的演示，直到结束。这也是经典方法的典型失败案例；在 WayPoint-1 和 WayPoint-2 之间没有可能的关键点匹配，甚至初始的观察是远离 WayPoint-1 的。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.24217687074829933&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StcD4yu39DC9aI7lWbdNCXttibAJcN5QiaPzDot45hNQFnkCzqibdrNZH3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;735&quot; style=&quot;&quot;&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 2： 在迷宫和环路两个场景中跟随视觉演示时 TurtleBot 的性能的定量测评。这里给出了两次不同演示下各自三次运行到达地标的百分比。结果表明本文的方法要比基准更优。需要注意的是，研究者在环路情景的光照显著不同的情况下进行了额外的三次实验，结果没有模型成功。具体结果在补充材料中可以看到。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.33042394014962595&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StoyabVFMJTGOtNqBKxFgjaq5rg4VZR5wyjKicbCae3rFuibiaC5FM1xJXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;802&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 3： 本文提出的 GSP 方法和基线模型在 VizDoom 3D 导航中跟随视觉演示的性能定量测评。对于每个环境类型中超过 50 个种子和 5 条人类路径的演示完成和效率，给出了中位数和 95% 置信区间。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;论文：Zero-Shot Visual Imitation（Zero-Shot 视觉模仿）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3111111111111111&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StTvhP6eIicPiaAfZwYaXHrQLhcqqfT8bwIDjqiaBFv1rSh4peHX6wU9XsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;675&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;论文链接：https://pathak22.github.io/zeroshot-imitation/resources/iclr18.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;目前模仿学习的主要范式依赖于较强的专家监督来学习模仿什么以及如何模仿，我们寻求一个可替代的范式，其中智能体首先在没有任何专家监督的情况下探索环境，然后以一种新型的前向一致损失将它的经验抽取为目标制约的技能策略（GSP）。在我们的框架中，专家的作用仅仅是在推理过程中传达目标（即：要模仿什么）。然后，在观察了一个期望任务的演示图像序列之后，学习到的策略被用来模仿专家（即：如何模仿）。我们的方法是 zero-shot 的，因为在训练或者推理任务演示的时候，智能体从未接触过专家的行动。我们在两个实际环境中测试了我们的 zero-shot 方法：分别是使用 Baxter 机器人的复杂绳索操作和使用 TurtleBot 机器人的陌生环境室内导航。在 VizDoom 环境模仿的进一步实验中，我们给出了这样的证据：更好的探索机制可以导致更强大的策略，策略反过来又进一步提升最终的任务性能。&lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;background-color: rgb(255, 255, 255);font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;995467381&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;&lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    ICLR 2018 | Oral论文：zero-shot视觉模仿系统GSP，仅观察演示就学会执行任务                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-04-30&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自arxiv&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：Deepak Pathak&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Nurhachu Null、刘晓坤&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 14px;text-align: justify;&quot;&gt;ICLR 2018将于今晚正式开始，机器之心带你抢先一睹这篇来自UC Berkeley的Oral论文。目前模仿学习依赖于专家监督来学习模仿什么以及如何模仿。作者寻求可替代的范式，其中智能体只需知道要模仿什么，然后自主学习如何模仿。该方法是 zero-shot 的，因为在训练或者推理任务演示的时候，智能体从未接触专家如何执行任务的信息。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;研究者在两个实际环境中测试了该 zero-shot 方法：分别是使用 Baxter 机器人的复杂绳索操作和使用 TurtleBot 机器人的陌生环境室内导航。在 VizDoom 环境模仿的进一步实验中，给出了这样的证据：更好的探索机制可以导致更强大的策略，策略反过来又进一步提升最终的任务性能。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.625&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StBAyZjv2HSncG6lEL1lT4zRgUWjPVViba3fwQSf3fria43B98y0pHktGQ/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;320&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;Baxter 机器人操作绳索。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.625&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_gif/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StBDGNtqz669B6c8PibXzbTe7A7vhibew5bggWoxMTdcjibiaGdAfm4lw26A/640?wx_fmt=gif&quot; data-type=&quot;gif&quot; data-w=&quot;320&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;TurtleBot 机器人室内导航。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(123, 12, 0);font-size: 14px;text-align: justify;&quot;&gt;演示及代码链接：https://pathak22.github.io/zeroshot-imitation/&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;简介&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;模仿专家演示是从原始感知观察中学习执行任务的强大机制。从演示中学习（learning from demonstration，LfD）(Argall et al., 2009; Ng &amp;amp; Russell, 2000; Pomerleau, 1989; Schaal, 1999) 目前的主要范式要么需要专家手动移动机器人的机械臂（也就是运动觉训练），要么需要专家远程操纵机器人来执行期望的任务。在训练时，专家通常会为一个任务提供多次演示，这样就会在智能体的视角以观察-行动（observation-action）对的形式生成数据。然后智能体为执行感兴趣的任务而从这些数据中提取出策略。这种严格监督的方法对人类专家而言是难以置信的乏味，必须通过控制机器人来提供演示。此外，对每个需要机器人来执行的新任务而言，专家必须提供一套新的演示。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;除了传达如何通过观察-行动对来执行任务，一个更加泛化的形式是让专家通过一段视频或者一个稀疏的图像序列提供对期望世界状态的观察，仅传达需要做什么。这样，智能体需要自己推理如何执行任务（也就是行动）。在心理学中，这被称为基于观察的学习 (Bandura &amp;amp; Walters, 1977)。尽管这是一个相对困难的学习任务，但是它更加有趣，因为专家可以快速容易地演示多个任务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对于一个没有任何先验知识的智能体而言，除了在最简单的例子中之外，仅通过简单地观看视觉演示来模仿一个任务是极其困难的。所以，本质问题是：为了模仿，智能体必须具备哪些先验知识？有大量的工作寻求通过从观察中手动预定义必须从观察推理的状态来捕捉先验知识 (Breazeal &amp;amp; Scassellati, 2002; Dillmann, 2004; Ikeuchi &amp;amp; Suehiro, 1994; Kuniyoshi et al., 1989; 1994; Yang et al., 2015)。然后智能体通过这些状态来推理如何执行任务（也就是规划模仿）。不幸的是，计算机视觉系统通常无法准确地估计状态变量，而且对于下行规划系统而言对这种误差的鲁棒性被证明是很重要的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5006747638326585&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StONax40KpveBGrt8cUM11ACicsYwddQINttXEdkalZBMOib0r4DnunVVw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;741&quot; style=&quot;&quot;&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 1： 目标制约的技能策略（GSP）以当前和目标观察为输入，输出能够实现目标的行动序列。我们比较了以下几个 GSP 模型的性能：（a）简单的逆模型；（b）具有之前动作历史的多步 GSP；（c）具有之前动作历史和前向模型作为正则项的多步 GSP；（d）本文提出的具有前向一致性损失的多步 GSP。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在本论文中，研究者沿着 (Agrawal et al., 2016; Levine et al., 2016; Pinto &amp;amp; Gupta, 2016) 的方向来寻求一个可替代的范式，智能体在没有任何专家监督的情况下将这些探索数据提取为目标指引的技能。这些技能可以被用来模仿由专家提供的视觉演示 (Nair et al., 2017)。这里所说的技能指的是能够预测出相关动作序列的功能，这个动作序列能够将智能体由当前的观察状态带到目标状态。这个功能被称为 GSP（目标制约的技能策略）。GSP 通过自监督的方式习得，与 (Agrawal et al., 2016; Andrychowicz et al., 2017) 类似，通过将智能体在探索环境时遇到的状态重新标记为目标，以及将智能体执行的动作重新标记为预测目标来完成。在推理过程中，在给定一次演示中的目标观察时，GSP 可以从目前的观察中反过来推理如何达到这些目标，因此就可以逐步模仿。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;学习 GSP 时的一个关键挑战是：通常，从一个状态到达另一个状态存在多种可能的方式，状态之间的轨迹分布式多模态的。研究者用原创的基于直觉的前向一致性损失解决了这个问题，这个直觉就是：对绝大多数任务而言，达到目标要比如何达到目标更重要。为了让它运转起来，首先需要学习一个能够在给定一个行动（action）和当前观察（observation）时可以预测下一个状态的前向模型。研究者使用用于 GSP 选择的动作的前向模型的输出和真实的下一个状态之间的差别来训练 GSP。这个损失在不需要准确匹配动作本身时就可以让 GSP 预测的动作和真实的下一个动作保持一致，因此会保证预测得到的与真实动作不同的动作—但是会导致同样的下一个状态—不会在不经意间受到惩罚。为了说明达到不同目标所需的不同的步骤数目，研究者使用目标识别器来联合优化 GSP，目标识别器可以判定当前的目标是否已经被满足了。图 1 是对 GSP 结构的简单描述。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这个方法称为是 zero-shot 的，因为智能体从不需要获取专家的动作，无论是在训练 GSP 的过程还是推理阶段的任务演示过程。相反，绝大多数关于 one-shot 模仿学习的最近工作都需要关于动作的完全知识，以及在训练过程中对专家演示的充分了解 (Duan et al., 2017; Finn et al., 2017)。总之，该方法具有以下特点：（1）在学习过程中不需要任何外在激励或者专家监督，（2）仅仅在推理阶段需要演示，（3）仅仅将演示限制在视觉观察上，而不是所有的状态动作。这里的智能体是学习模仿，而不是通过模仿来学习。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;研究者在真实机器人上测试了该 zero-shot 模仿器，这些机器人使用 Baxter 进行绳索操作或者使用 TurtleBot 来进行室内导航。前向一致损失能够在复杂的打结任务中提升性能，将准确率从 36% 提升至 60%。在室内导航试验中，通过指引一个简单的有轮子的机器人在部分可观察的室内环境中行走，结果表明学习到的 GSP 可以泛化到陌生的环境中。进一步，在 VizDoom 环境中使用导航的实验，表明利用好奇心驱动的探索 (Oudeyer et al., 2007; Pathak et al., 2017; Schmidhuber, 1991) 学到的 GSP 可以比使用随机探索数据学到的 GSP 更准确地遵循演示。总之，实验表明前向一致的 GSP 可以在没有特定环境或者特定任务假设时被用来模仿很多任务。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7445742904841403&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StGGuEal7yuwtRk8qPFAoU8etQic9hnYq5wiaUQ94zRBq9jd8PA0rRv1Zw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;599&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 2： 使用 Baxter 机器人的绳索操作任务的定性演示。（a）机器人系统设置。（b）打结任务的推理阶段由人类提供的人类演示图像序列（顶行），在模仿已有的演示时机器人达到的状态的观察图像序列（底行）。（c）在将绳子扭成「S」形的任务中，人类演示的图像序列和机器人达到的状态的图像序列，智能体可以成功地模仿这个演示。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.25346784363177804&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StE4gv1hu5JnrbWJSV5WGIbmcjZFHQrUoPMs7aDoQ0smBv1BZEYgt9yQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;793&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 4：从初始图像（左上）到达目标图像（右图）的过程中 TurtleBot 轨迹的演示。由于初&lt;/em&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;始图像和目标图像没有重叠，所以机器人首先通过原地打转来进行探索。一旦它检测到了当前图像和目标图像之间的重叠，它就会朝着目标图像移动（也就是第 42 步的图像）。需要注意的是，其中没有显式地训练机器人来探索，而且这种探索行为是自监督学习过程中自然发生的。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.16359163591635917&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0St7yGWWXuu0M1MgzEacDSsmvf67GBHFPicovMQBX7IcAKT4A0CBFJibfmA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;813&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 1： 导航任务中，在陌生环境中使用单幅图像作为目标时，不同方法的定量测评。每一列代表对应一个不同的初始/目标图像时的不同运行。完全的 GSP 模型在成功运行时达到目标所花的平均时间更长，但是具有更高的成功率。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2747524752475248&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StofJNY8Lib3dELOqibdTgAFMEIanMYicKibHicCzSzFJ7CQ7lleqC9ndPHjQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;808&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 5： 在跟随一个给定的图像序列（顶行）的视觉演示时 TurtleBot 的性能。TurtleBot 以这样的方式被放置：演示中的第一张图像跟目前的观察没有重叠。即使如此，机器人还是能够朝着靠近第一张演示图像靠近（如 Robot WayPoint-1 所示），然后遵循给定的演示，直到结束。这也是经典方法的典型失败案例；在 WayPoint-1 和 WayPoint-2 之间没有可能的关键点匹配，甚至初始的观察是远离 WayPoint-1 的。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.24217687074829933&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StcD4yu39DC9aI7lWbdNCXttibAJcN5QiaPzDot45hNQFnkCzqibdrNZH3g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;735&quot; style=&quot;&quot;&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 2： 在迷宫和环路两个场景中跟随视觉演示时 TurtleBot 的性能的定量测评。这里给出了两次不同演示下各自三次运行到达地标的百分比。结果表明本文的方法要比基准更优。需要注意的是，研究者在环路情景的光照显著不同的情况下进行了额外的三次实验，结果没有模型成功。具体结果在补充材料中可以看到。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.33042394014962595&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StoyabVFMJTGOtNqBKxFgjaq5rg4VZR5wyjKicbCae3rFuibiaC5FM1xJXA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;802&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 3： 本文提出的 GSP 方法和基线模型在 VizDoom 3D 导航中跟随视觉演示的性能定量测评。对于每个环境类型中超过 50 个种子和 5 条人类路径的演示完成和效率，给出了中位数和 95% 置信区间。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;论文：Zero-Shot Visual Imitation（Zero-Shot 视觉模仿）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3111111111111111&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWibAMPxqCv8TicJpnViaa0v0StTvhP6eIicPiaAfZwYaXHrQLhcqqfT8bwIDjqiaBFv1rSh4peHX6wU9XsA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;675&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;论文链接：https://pathak22.github.io/zeroshot-imitation/resources/iclr18.pdf&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;目前模仿学习的主要范式依赖于较强的专家监督来学习模仿什么以及如何模仿，我们寻求一个可替代的范式，其中智能体首先在没有任何专家监督的情况下探索环境，然后以一种新型的前向一致损失将它的经验抽取为目标制约的技能策略（GSP）。在我们的框架中，专家的作用仅仅是在推理过程中传达目标（即：要模仿什么）。然后，在观察了一个期望任务的演示图像序列之后，学习到的策略被用来模仿专家（即：如何模仿）。我们的方法是 zero-shot 的，因为在训练或者推理任务演示的时候，智能体从未接触过专家的行动。我们在两个实际环境中测试了我们的 zero-shot 方法：分别是使用 Baxter 机器人的复杂绳索操作和使用 TurtleBot 机器人的陌生环境室内导航。在 VizDoom 环境模仿的进一步实验中，我们给出了这样的证据：更好的探索机制可以导致更强大的策略，策略反过来又进一步提升最终的任务性能。&lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;background-color: rgb(255, 255, 255);font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;995467381&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;&lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;&lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;&lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-04-30-1000000677_503257999</guid>
<pubDate>Mon, 30 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>入门 | 10个例子带你了解机器学习中的线性代数</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-04-30-1000000677_503257941.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525275855&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=Ts01bV1xycOZ1sQZFBZdJy*vDRRcTDn4sNqqo-z44X62oBRBRCIx-YJVywuweqo7UkkuNGNZJw0ZNav91RnQ43ZZrGqeqmLWIMzzpczsebeNYrN0OuzvEtdagx5x6XW1zw2RXoZTzryIyREyPGMXhp4Vdx1DHROdu0dpRnM8Rtk=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    入门 | 10个例子带你了解机器学习中的线性代数                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-04-30&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自machinelearningmastery&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;span style=&quot;color: rgb(153, 153, 153);&quot;&gt; &lt;/span&gt;&lt;span class=&quot;author vcard&quot; style=&quot;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 12px;vertical-align: baseline;background: rgb(255, 255, 255);text-transform: capitalize;color: rgb(153, 153, 153);&quot;&gt;&lt;span class=&quot;fn&quot; style=&quot;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;background: transparent;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Jason Brownlee&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：张倩、刘晓坤&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;text-align: justify;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;本文介绍了 10 个常见机器学习案例，这些案例需要用线性代数才能得到最好的理解。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;线性代数是数学的分支学科，涉及矢量、矩阵和线性变换。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;它是机器学习的重要基础，从描述算法操作的符号到代码中算法的实现，都属于该学科的研究范围。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;虽然线性代数是机器学习领域不可或缺的一部分，但二者的紧密关系往往无法解释，或只能用抽象概念（如向量空间或特定矩阵运算）解释。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;阅读这篇文章后，你将会了解到：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如何在处理数据时使用线性代数结构，如表格数据集和图像。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;数据准备过程中用到的线性代数概念，例如 one-hot 编码和降维。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;深度学习、自然语言处理和推荐系统等子领域中线性代数符号和方法的深入使用。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;让我们开始吧。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这 10 个机器学习案例分别是：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;1. Dataset and Data Files 数据集和数据文件&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;2. Images and Photographs 图像和照片&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;3. One-Hot Encoding one-hot 编码&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;4. Linear Regression 线性回归&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;5. Regularization 正则化&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;6. Principal Component Analysis 主成分分析&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;7. Singular-Value Decomposition 奇异值分解&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;8. Latent Semantic Analysis 潜在语义分析&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;9. Recommender Systems 推荐系统&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;10. Deep Learning 深度学习&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;1. 数据集和数据文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在机器学习中，你可以在数据集上拟合一个模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这是表格式的一组数字，其中每行代表一组观察值，每列代表观测的一个特征。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，下面这组数据是鸢尾花数据集的一部分&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;数据集地址：http://archive.ics.uci.edu/ml/datasets/Iris&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5.1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4.9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4.7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4.6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5.0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些数据实际上是一个矩阵：线性代数中的一个关键数据结构。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;接下来，将数据分解为输入数据和输出数据，来拟合一个监督机器学习模型（如测量值和花卉品种），得到矩阵（X）和矢量（y）。矢量是线性代数中的另一个关键数据结构。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;每行长度相同，即每行的数据个数相同，因此我们可以说数据是矢量化的。这些行数据可以一次性或成批地提供给模型，并且可以预先配置模型，以得到固定宽度的行数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;2. 图像和照片&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;也许你更习惯于在计算机视觉应用中处理图像或照片。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;你使用的每个图像本身都是一个固定宽度和高度的表格结构，每个单元格有用于表示黑白图像的 1 个像素值或表示彩色图像的 3 个像素值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;照片也是线性代数矩阵的一种。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;与图像相关的操作，如裁剪、缩放、剪切等，都是使用线性代数的符号和运算来描述的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;3. one-hot 编码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;有时机器学习中要用到分类数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可能是用于解决分类问题的类别标签，也可能是分类输入变量。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对分类变量进行编码以使它们更易于使用并通过某些技术进行学习是很常见的。one-hot 编码是一种常见的分类变量编码。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;one-hot 编码可以理解为：创建一个表格，用列表示每个类别，用行表示数据集中每个例子。在列中为给定行的分类值添加一个检查或「1」值，并将「0」值添加到所有其他列。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，共计 3 行的颜色变量：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;red&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;green&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;blue&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些变量可能被编码为：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;red, green, blue&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;每一行都被编码为一个二进制矢量，一个被赋予「0」或「1」值的矢量。这是一个稀疏表征的例子，线性代数的一个完整子域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;4. 线性回归&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;线性回归是一种用于描述变量之间关系的统计学传统方法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该方法通常在机器学习中用于预测较简单的回归问题的数值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;描述和解决线性回归问题有很多种方法，即找到一组系数，用这些系数与每个输入变量相乘并将结果相加，得出最佳的输出变量预测。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如果您使用过机器学习工具或机器学习库，解决线性回归问题的最常用方法是通过最小二乘优化，这一方法是使用线性回归的矩阵分解方法解决的（例如 LU 分解或奇异值分解）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;即使是线性回归方程的常用总结方法也使用线性代数符号：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;y = A . b&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中，y 是输出变量，A 是数据集，b 是模型系数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;5. 正则化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在应用机器学习时，我们往往寻求最简单可行的模型来发挥解决问题的最佳技能。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;较简单的模型通常更擅长从具体示例泛化到未见过的数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在涉及系数的许多方法中，例如回归方法和人工神经网络，较简单的模型通常具有较小的系数值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;一种常用于模型在数据拟合时尽量减小系数值的技术称为正则化，常见的实现包括正则化的 L2 和 L1 形式。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这两种正则化形式实际上是系数矢量的大小或长度的度量，是直接脱胎于名为矢量范数的线性代数方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;6. 主成分分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;通常，数据集有许多列，列数可能达到数十、数百、数千或更多。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对具有许多特征的数据进行建模具有一定的挑战性。而且，从包含不相关特征的数据构建的模型通常不如用最相关的数据训练的模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;我们很难知道数据的哪些特征是相关的，而哪些特征又不相关。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;自动减少数据集列数的方法称为降维，其中也许最流行的方法是主成分分析法（简称 PCA）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该方法在机器学习中，为可视化和模型创建高维数据的投影。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;PCA 方法的核心是线性代数的矩阵分解方法，可能会用到特征分解，更广义的实现可以使用奇异值分解（SVD）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;7. 奇异值分解&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;另一种流行的降维方法是奇异值分解方法，简称 SVD。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如上所述，正如该方法名称所示，它是源自线性代数领域的矩阵分解方法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该方法在线性代数中有广泛的用途，可直接应用于特征选择、可视化、降噪等方面。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在机器学习中我们会看到以下两个使用 SVD 的情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;8. 潜在语义分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在用于处理文本数据的机器学习子领域（称为自然语言处理），通常将文档表示为词出现的大矩阵。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，矩阵的列可以是词汇表中的已知词，行可以是文本的句子、段落、页面或文档，矩阵中的单元格标记为单词出现的次数或频率。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这是文本的稀疏矩阵表示。矩阵分解方法（如奇异值分解）可以应用于此稀疏矩阵，该分解方法可以提炼出矩阵表示中相关性最强的部分。以这种方式处理的文档比较容易用来比较、查询，并作为监督机器学习模型的基础。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这种形式的数据准备称为潜在语义分析（简称 LSA），也称为潜在语义索引（LSI）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;9. 推荐系统&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;涉及产品推荐的预测建模问题被称为推荐系统，这是机器学习的一个子领域。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，基于你在亚马逊上的购买记录和与你类似的客户的购买记录向你推荐书籍，或根据你或与你相似的用户在 Netflix 上的观看历史向你推荐电影或电视节目。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;推荐系统的开发主要涉及线性代数方法。一个简单的例子就是使用欧式距离或点积之类的距离度量来计算稀疏顾客行为向量之间的相似度。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;像奇异值分解这样的矩阵分解方法在推荐系统中被广泛使用，以提取项目和用户数据的有用部分，以备查询、检索及比较。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;10. 深度学习&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;人工神经网络是一种非线性机器学习算法，它受大脑中信息处理元素的启发，其有效性已经在一系列问题中得到验证，其中最重要的是预测建模。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;深度学习是近期出现的、使用最新方法和更快硬件的人工神经网络的复兴，这一方法使得在非常大的数据集上开发和训练更大更深的（更多层）网络成为可能。深度学习方法通常会在机器翻译、照片字幕、语音识别等一系列具有挑战性的领域取得最新成果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经网络的执行涉及线性代数数据结构的相乘和相加。如果扩展到多个维度，深度学习方法可以处理向量、矩阵，甚至输入和系数的张量，此处的张量是一个两维以上的矩阵。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;线性代数是描述深度学习方法的核心，它通过矩阵表示法来实现深度学习方法，例如 Google 的 TensorFlow Python 库，其名称中包含「tensor」一词。&lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;原文链接：https://machinelearningmastery.com/examples-of-linear-algebra-in-machine-learning/&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;234655011&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;&lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    入门 | 10个例子带你了解机器学习中的线性代数                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-04-30&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自machinelearningmastery&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;span style=&quot;color: rgb(153, 153, 153);&quot;&gt; &lt;/span&gt;&lt;span class=&quot;author vcard&quot; style=&quot;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;font-size: 12px;vertical-align: baseline;background: rgb(255, 255, 255);text-transform: capitalize;color: rgb(153, 153, 153);&quot;&gt;&lt;span class=&quot;fn&quot; style=&quot;border-width: 0px;border-style: initial;border-color: initial;outline: 0px;vertical-align: baseline;background: transparent;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Jason Brownlee&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：张倩、刘晓坤&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;text-align: justify;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;本文介绍了 10 个常见机器学习案例，这些案例需要用线性代数才能得到最好的理解。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;线性代数是数学的分支学科，涉及矢量、矩阵和线性变换。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;span style=&quot;font-size: 14px;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;它是机器学习的重要基础，从描述算法操作的符号到代码中算法的实现，都属于该学科的研究范围。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;虽然线性代数是机器学习领域不可或缺的一部分，但二者的紧密关系往往无法解释，或只能用抽象概念（如向量空间或特定矩阵运算）解释。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;阅读这篇文章后，你将会了解到：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如何在处理数据时使用线性代数结构，如表格数据集和图像。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;数据准备过程中用到的线性代数概念，例如 one-hot 编码和降维。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;深度学习、自然语言处理和推荐系统等子领域中线性代数符号和方法的深入使用。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;让我们开始吧。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这 10 个机器学习案例分别是：&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;1. Dataset and Data Files 数据集和数据文件&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;2. Images and Photographs 图像和照片&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;3. One-Hot Encoding one-hot 编码&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;4. Linear Regression 线性回归&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;5. Regularization 正则化&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;6. Principal Component Analysis 主成分分析&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;7. Singular-Value Decomposition 奇异值分解&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;8. Latent Semantic Analysis 潜在语义分析&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;9. Recommender Systems 推荐系统&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;10. Deep Learning 深度学习&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;1. 数据集和数据文件&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在机器学习中，你可以在数据集上拟合一个模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这是表格式的一组数字，其中每行代表一组观察值，每列代表观测的一个特征。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，下面这组数据是鸢尾花数据集的一部分&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(123, 12, 0);&quot;&gt;数据集地址：http://archive.ics.uci.edu/ml/datasets/Iris&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5.1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4.9&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4.7&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.2&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.3&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4.6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.1&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.5&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5.0&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3.6&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1.4&lt;/span&gt;,&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.2&lt;/span&gt;,Iris-setosa&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些数据实际上是一个矩阵：线性代数中的一个关键数据结构。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;接下来，将数据分解为输入数据和输出数据，来拟合一个监督机器学习模型（如测量值和花卉品种），得到矩阵（X）和矢量（y）。矢量是线性代数中的另一个关键数据结构。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;每行长度相同，即每行的数据个数相同，因此我们可以说数据是矢量化的。这些行数据可以一次性或成批地提供给模型，并且可以预先配置模型，以得到固定宽度的行数据。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;2. 图像和照片&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;也许你更习惯于在计算机视觉应用中处理图像或照片。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;你使用的每个图像本身都是一个固定宽度和高度的表格结构，每个单元格有用于表示黑白图像的 1 个像素值或表示彩色图像的 3 个像素值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;照片也是线性代数矩阵的一种。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;与图像相关的操作，如裁剪、缩放、剪切等，都是使用线性代数的符号和运算来描述的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;3. one-hot 编码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;有时机器学习中要用到分类数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;可能是用于解决分类问题的类别标签，也可能是分类输入变量。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对分类变量进行编码以使它们更易于使用并通过某些技术进行学习是很常见的。one-hot 编码是一种常见的分类变量编码。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;one-hot 编码可以理解为：创建一个表格，用列表示每个类别，用行表示数据集中每个例子。在列中为给定行的分类值添加一个检查或「1」值，并将「0」值添加到所有其他列。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，共计 3 行的颜色变量：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;red&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;green&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;blue&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这些变量可能被编码为：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;red, green, blue&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;每一行都被编码为一个二进制矢量，一个被赋予「0」或「1」值的矢量。这是一个稀疏表征的例子，线性代数的一个完整子域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;4. 线性回归&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;线性回归是一种用于描述变量之间关系的统计学传统方法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该方法通常在机器学习中用于预测较简单的回归问题的数值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;描述和解决线性回归问题有很多种方法，即找到一组系数，用这些系数与每个输入变量相乘并将结果相加，得出最佳的输出变量预测。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如果您使用过机器学习工具或机器学习库，解决线性回归问题的最常用方法是通过最小二乘优化，这一方法是使用线性回归的矩阵分解方法解决的（例如 LU 分解或奇异值分解）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;即使是线性回归方程的常用总结方法也使用线性代数符号：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;box-sizing: border-box;margin-top: 0px;margin-bottom: 0px;padding: 0px;font-size: 16px;color: rgb(62, 62, 62);line-height: inherit;background-color: rgb(255, 255, 255);&quot;&gt;&lt;code class=&quot;python language-python hljs&quot; style=&quot;box-sizing: border-box;margin-right: 2px;margin-left: 2px;padding: 0.5em;font-size: 14px;color: rgb(169, 183, 198);line-height: 18px;border-radius: 0px;background: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;y = A . b&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;其中，y 是输出变量，A 是数据集，b 是模型系数。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;5. 正则化&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在应用机器学习时，我们往往寻求最简单可行的模型来发挥解决问题的最佳技能。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;较简单的模型通常更擅长从具体示例泛化到未见过的数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在涉及系数的许多方法中，例如回归方法和人工神经网络，较简单的模型通常具有较小的系数值。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;一种常用于模型在数据拟合时尽量减小系数值的技术称为正则化，常见的实现包括正则化的 L2 和 L1 形式。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这两种正则化形式实际上是系数矢量的大小或长度的度量，是直接脱胎于名为矢量范数的线性代数方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;6. 主成分分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;通常，数据集有许多列，列数可能达到数十、数百、数千或更多。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;对具有许多特征的数据进行建模具有一定的挑战性。而且，从包含不相关特征的数据构建的模型通常不如用最相关的数据训练的模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;我们很难知道数据的哪些特征是相关的，而哪些特征又不相关。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;自动减少数据集列数的方法称为降维，其中也许最流行的方法是主成分分析法（简称 PCA）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该方法在机器学习中，为可视化和模型创建高维数据的投影。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;PCA 方法的核心是线性代数的矩阵分解方法，可能会用到特征分解，更广义的实现可以使用奇异值分解（SVD）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;7. 奇异值分解&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;另一种流行的降维方法是奇异值分解方法，简称 SVD。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;如上所述，正如该方法名称所示，它是源自线性代数领域的矩阵分解方法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;该方法在线性代数中有广泛的用途，可直接应用于特征选择、可视化、降噪等方面。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在机器学习中我们会看到以下两个使用 SVD 的情况。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;8. 潜在语义分析&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;在用于处理文本数据的机器学习子领域（称为自然语言处理），通常将文档表示为词出现的大矩阵。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，矩阵的列可以是词汇表中的已知词，行可以是文本的句子、段落、页面或文档，矩阵中的单元格标记为单词出现的次数或频率。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这是文本的稀疏矩阵表示。矩阵分解方法（如奇异值分解）可以应用于此稀疏矩阵，该分解方法可以提炼出矩阵表示中相关性最强的部分。以这种方式处理的文档比较容易用来比较、查询，并作为监督机器学习模型的基础。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;这种形式的数据准备称为潜在语义分析（简称 LSA），也称为潜在语义索引（LSI）。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;9. 推荐系统&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;涉及产品推荐的预测建模问题被称为推荐系统，这是机器学习的一个子领域。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;例如，基于你在亚马逊上的购买记录和与你类似的客户的购买记录向你推荐书籍，或根据你或与你相似的用户在 Netflix 上的观看历史向你推荐电影或电视节目。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;推荐系统的开发主要涉及线性代数方法。一个简单的例子就是使用欧式距离或点积之类的距离度量来计算稀疏顾客行为向量之间的相似度。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;像奇异值分解这样的矩阵分解方法在推荐系统中被广泛使用，以提取项目和用户数据的有用部分，以备查询、检索及比较。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;10. 深度学习&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;人工神经网络是一种非线性机器学习算法，它受大脑中信息处理元素的启发，其有效性已经在一系列问题中得到验证，其中最重要的是预测建模。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;深度学习是近期出现的、使用最新方法和更快硬件的人工神经网络的复兴，这一方法使得在非常大的数据集上开发和训练更大更深的（更多层）网络成为可能。深度学习方法通常会在机器翻译、照片字幕、语音识别等一系列具有挑战性的领域取得最新成果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;神经网络的执行涉及线性代数数据结构的相乘和相加。如果扩展到多个维度，深度学习方法可以处理向量、矩阵，甚至输入和系数的张量，此处的张量是一个两维以上的矩阵。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;线性代数是描述深度学习方法的核心，它通过矩阵表示法来实现深度学习方法，例如 Google 的 TensorFlow Python 库，其名称中包含「tensor」一词。&lt;/span&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;原文链接：https://machinelearningmastery.com/examples-of-linear-algebra-in-machine-learning/&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;234655011&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;&lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;&lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;&lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-04-30-1000000677_503257941</guid>
<pubDate>Mon, 30 Apr 2018 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
