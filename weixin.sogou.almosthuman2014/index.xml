<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>机器之心</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/</link>
<description>专业的人工智能媒体和产业服务平台</description>
<language>zh-cn</language>
<lastBuildDate>Sun, 06 May 2018 07:24:39 +0800</lastBuildDate>
<item>
<title>前沿 | 连发Science、Nature Physics：谷歌展示量子霸权实现蓝图</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-05-1000000682_503258179.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYMjRG2A4hv5f*zg*ZIsqa8VSZF9Q*4eE*bpz2UeEZKrcyhlFSuIZNvOIJDzNdAiWJwxWcADTwFkh*3SEl*oDHdE=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    前沿 | 连发Science、Nature Physics：谷歌展示量子霸权实现蓝图                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-05&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Google Blog&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Sergio Boixo、Charles Neill&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：刘晓坤、张倩、李泽南&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;今年 3 月，谷歌曾在洛杉矶举办的美国物理学会年会上&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650738741&amp;amp;idx=4&amp;amp;sn=894fa577b92d93da56e47331de0a12e8&amp;amp;chksm=871ad44bb06d5d5df31e0b5f4839357827f65789c41cdfa00f3b04300c4fde063eb5dd8dc9a7&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;推出了 72-qubit 超导量子处理器 Bristlecone&lt;/a&gt;。与此同时，这家科技巨头宣称将要在今年实现「量子霸权」。在硬件之外，谷歌在量子计算理论方面的研究最近也在持续推进，本文将简要介绍其在四月份分别发表于 Nature Physics 和 Science 的两篇论文，其中详细描述了实现量子霸权的计划蓝图。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;量子计算结合了过去半个世纪以来两个最大的技术变革：信息技术和量子力学。如果我们使用量子力学的规则替换二进制逻辑来计算，某些难以攻克的计算任务将得到解决。追求通用量子计算机的一个重要目标是确定当前经典计算机无法承载的最小复杂度的计算任务。该交叉点被称为「量子霸权」边界，是在通向更强大和有用的计算技术的关键一步。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在 4 月底 Nature Physics 上发表的文章《Characterizing quantum supremacy in near-term devices》中，谷歌介绍了在近期设备中实际展示量子霸权的理论基础。它提出了从随机量子线路的输出中采样比特串的任务，可被看成是量子计算的「hello world」程序。争论的结果是，随机混沌系统（参见「蝴蝶效应」）运行的时间越长，这些系统输出变得难以预测的速度就越快。构建一个随机、混沌的量子比特系统，并测试经典系统模拟前者所需的时间，就可以获得量子计算机何时超越经典计算机的良好度量。可以说，这是证明经典和量子计算机之间的计算能力的指数式分离（exponential separation）的最强理论方案。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在随机量子线路中确定量子霸权边界迅速成为了一个令人激动的研究领域。一方面，通过优化经典算法来模拟量子线路的方案的目的是增加要达到量子霸权的量子线路的规模。这迫使实验的量子设备需要足够多的量子比特数、足够低的误差率来实现足够深度（即线路中量子门的层数）的线路，才能达到量子霸权。另一方面，我们现在更加理解用于构建随机量子线路的量子门的特定选择如何影响模拟成本，从而得到近期的量子霸权的优化基准（https://github.com/sboixo/GRCS），在某些情况下用经典计算机模拟的成本是该方案成本的二次方。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从随机量子线路采样是量子计算机的优秀校正基准，称为交叉熵基准测试。成功地利用随机线路的量子霸权实验将能展示大规模容错量子计算机的基础构建模块。此外，量子物理学中目前仍未测试过如此高度复杂的量子态。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.728125&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicW2FSKzCdOcvTK7shyZFuq2gblKp9jWBgjVDY3uImwIVibwGDaYAGZ1BvWNLpsgTM9Yl2vrian56ew/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;640&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;量子电路计算的空间时间体积。量子模拟的计算成本随着量子电路体积的增加而增加，并且通常随着量子比特数量和电路深度的增加而呈指数增长。在量子比特的非对称网格中，计算空间-时间体积随深度的增长速度比对称网格慢，随电路呈现的指数级增长也更容易模拟。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在最近的 Science 文章《A blueprint for demonstrating quantum supremacy with superconducting qubits》中，来自 UCSB、谷歌、NASA 等研究机构的学者们展示了实现量子霸权的蓝图，并首次通过实验演示了其原理证明过程。本文讨论了量子霸权的两个关键因素：指数复杂性和精确计算。研究者首先在装置的 5~9 个量子比特的子部分上运行算法，发现经典的模拟成本随着量子比特数的增加呈指数增长。这些结果旨在提供这些装置指数幂的清晰示例。接下来，他们使用交叉熵基准来比较该结果与普通计算机的结果，结果表明，他们的计算是高度精确的。事实上，如果使用较大的量子处理器，误差率可以低到实现量子霸权。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在实现量子霸权的更高层面，量子平台还应提供明确的应用。在本文中，谷歌将算法应用于使用复杂的多量子比特门（相对于为具有表面代码纠错算法的数字量子处理器设计的两量子比特门）的量子统计力学中的计算问题。结果表明，该装置可以用来研究材料的基本特性，例如金属和绝缘体之间的微观差异。通过将这些结果扩展到具有大约 50 个比特的下一代设备，谷歌希望能够解决任何其他计算平台都无法解决的科学问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicW2FSKzCdOcvTK7shyZFuqTyEJibjcnVWx0Uoxn1OibxGODCjTo3ic81NeJsqt74BGcibic3ojfSJEPUw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;400&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;Charles Neill 和 Pedram Roushan 开发的两个 gmon 超导量子比特及其可调耦合器。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;两篇文章介绍了近期量子霸权的现实提议，并首次展示了其原则证明过程。谷歌将探索继续降低误差率，增加量子处理器中量子比特的数量，以实现量子霸权，并为短期实用的应用开发量子算法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Nature Physics 论文：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Characterizing quantum supremacy in near-term devices&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.4935521688159437&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicW2FSKzCdOcvTK7shyZFuqvdaUuBzdxd59ydMAkiaeZ2MpwWy8vTULgSEia3MICLSagdcAzibsBz5DQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;853&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;论文链接：https://www.nature.com/articles/s41567-018-0124-x&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;arXiv 链接：https://arxiv.org/abs/1608.00263&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;摘要：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在近期内关于量子计算的一个关键问题是，没有误差校正的量子设备是否可以在执行良好定义的计算任务上超越超级计算机的能力。这样的展示被称为量子霸权，其需要对用经典方法求解的任务所需的资源进行可靠的评估。这里，我们提出了从随机量子线路的输出分布中采样的任务，作为量子霸权的展示。我们扩展了在计算复杂度上的之前的结果，以证明该采样任务在经典计算机中必然需要指数量级的时间复杂度。我们引入了交叉熵基准测试来获得复杂多比特动力学的实验保真度。其可被评估和推断来为量子霸权展示给出成功的指标。我们研究的相关经典算法的计算成本，并得出结论：量子霸权可以在 7×7 个量子比特和 40 个时钟周期的二维点阵线路上达到量子霸权。这需要两比特量子门的大约 0.5% 误差率（单比特量子门的 0.05% 误差率），并且它将展示容错量子计算机的基础构建模块。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Science 论文：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;A blueprint for demonstrating quantum supremacy with superconducting qubits&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.559&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicW2FSKzCdOcvTK7shyZFuq9ibc9wJesriaeHHV0HvRMbzZnZ5nGlsicRJiazREekyW8qaplNrOCHnyxA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1000&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;论文链接：http://science.sciencemag.org/content/360/6385/195&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;arXiv 链接：https://arxiv.org/abs/1709.06678&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;量子信息科学家距离构建量子计算机的梦想越来越近，它可以执行经典计算机无法完成的计算。据估计，这样一台计算机将需要大约 50 个量子比特，但是将现有的体系结构扩展到这个数字是很困难的。Neill 等人尝试将量子比特的数量从 5 个增加到 9 个，探索这种做法对超导量子比特设备输出质量的影响。随着量子比特数量进一步增加，如果误差继续以相同的速率增加，则利用当前技术打造具有约 60 个量子比特和合理精确度的量子计算机将成为可能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;摘要：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;证明量子系统能够解决物理、化学难题的关键一步是进行超越任何经典计算机能力的计算，从而实现所谓的量子霸权。在这项研究中，我们使用了九个超导量子比特展示了一条通往量子霸权的可行路径。通过单独调整量子比特参数，我们能够生成数千个不同的 Hamiltonian 演化，并探测输出概率。所测量的概率服从一种普遍分布，与均匀采样整个 Hilbert 空间的结果一致。随着量子比特数量的增加，系统继续探索数量呈指数增长的状态。将这些结果扩展到一个具有 50 个量子比特的系统，有可能解决超出任何经典计算机能力的科学问题。 &lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);white-space: normal;text-align: justify;caret-color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;原文链接：https://research.googleblog.com/2018/05/the-question-of-quantum-supremacy.html&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);caret-color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;2098301594&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-05-1000000682_503258179</guid>
<pubDate>Sat, 05 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>入门 | 极致的优化：智能手机是如何处理大型神经网络的</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-05-1000000682_503258169.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYMjRG2A4hv5f*zg*ZIsqa8UQMddhoyyQ5VtmtSOzoSuz2pthIgQF7VTXG1Xl-YVNd48sfmtlXlsN96s2orWZMrE=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    入门 | 极致的优化：智能手机是如何处理大型神经网络的                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-05&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;&quot;&gt;HeartBeat&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Julien Despois&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Pedro、张倩、刘晓坤&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;运行深度神经网络对计算能力、能耗及磁盘空间要求甚高，智能手机的计算资源十分有限，需要多种优化才能高效运行深度学习应用。本文介绍了如何在移动设备的各种指标之间取得平衡，在避免大幅度降低准确性的前提下构造更加轻便的神经网络，使得在移动设备上快速、准确地运行神经网络成为可能。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5326666666666666&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4CQEx4DYrSVA74uoYPZjWeSLSYdsh4AmlNaS1IibicIvWmdF0et1oNojg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1500&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;电脑拥有大容量硬盘和强大的 CPU 与 GPU，但智能手机没有。为了弥补这些硬件上的不足，智能手机需要一些特殊手段才能高效地运行深度学习应用。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.38875&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4lV4TyfoxAg0DbMlNdwmEJOk3aJfMJicHZfxH3copmsnSQXPWoXiaHylw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;智能手机有办法与这些强大的服务器集群竞争吗？还是完全没有希望？&lt;/span&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;深度学习是一种功能十分多样和强大的技术，但是运行神经网络对计算能力、能耗及磁盘空间要求甚高。这对于在具有大型硬盘和多个 GPU 的服务器上运行的云应用来说一般不是问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;不幸的是，在移动设备上运行神经网络并非易事。事实上，尽管智能手机的功能越来越强大，它们的计算能力、电池寿命及可用的磁盘空间依然十分有限，特别是那些非常依赖轻便性的应用。把应用做得轻便可以加快下载速度，减少更新，并且延长电池寿命，而这些都是用户迫切需要的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;为了执行图像分类、人像模式摄影、文本预测以及其他几十项任务，智能手机需要使用特殊方法来快速、准确地运行神经网络，且不占用过多内存空间。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在这篇文章中，我们将会了解一些最有效的、能让神经网络在手机上实时运行的技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;能使神经网络更小更快的技术&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基本上来讲，我们只对三个指标感兴趣：模型的准确率、速度、在手机中占用的内存。天下没有免费的午餐，因此我们不得不在这些指标之间作出一些权衡。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;对于大部分技术来说，我们一边要关注指标，一边还要寻找一个叫做「饱和点」（saturation point）的东西。达到这个点之后，利用其他指标的损失实现某个指标的增益将不再可行。在到达饱和点前保持优化值，可以在两个指标上取得最佳结果。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.36&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4E3PZZPibpXspicYzG8xB6VWibG60awrUvFWrRVPTUNwTIDbIVR2GDIGFA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);text-align: justify;&quot;&gt;在这个例子中，我们可以在不增加误差的情况下显著减少代价昂贵的运算。但是，在超过饱和点之后，误差的严重程度高到不可接受。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;记住这个方法，让我们开始吧！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;1. 避免全连接层&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;全连接层是神经网络中最常见的部分，它们通常能发挥很大作用。然而，由于每一个神经元都和前一层的所有神经元相连接，因此它们需要存储和更新大量参数，这对速度和磁盘空间都很不利。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;卷积层是利用输入（通常是图像）中局部一致性的层。每一个神经元不再与前一层的所有神经元相连。这有助于网络在保持高度准确性的同时减少连接/权重的数量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3575&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4WQUZAxWDhbee0gaibZ31RtqWibCCZ7NDQg1icqNkQJX5G12Dx1jtEqmzg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;全连接层的连接/权重数量要远远多于卷积层。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;使用少连接或非全连接的层能缩小模型的体积，同时保持其高准确性。这种方法可以提高速度，同时减少磁盘使用量。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在上面提到的构造中，一个拥有 1024 个输入、 512 个输出的全连接层大约有 500k 个参数。而一个拥有相同特征以及 32 个特征图的卷积层只需要大约 50k 个参数。这是一个 10 倍的提升。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2. 减少通道数量与卷积核大小&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这一步展现了在模型复杂度与速度之间作出的一个非常直接的权衡。拥有大量通道的卷积层能使网络提取相关信息，但也要付出相应的代价。剔除一些特征图是一个节约空间、加速模型的简单方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们可以运用卷积运算的感受野来做同样的事情。通过缩小卷积核大小，卷积对局部模式的感知减少，但涉及的参数也减少了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.2475&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4ETLfBcPicNoRia3FtAfW8thEL7BPNDsHicCj3FqqoCouTqC9fBOAMzX2g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;缩小感受野/卷积核大小可以降低计算成本，但是传递的信息会变少。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在这两种情况下，我们通过找到饱和点来选择特征图的数量/卷积核大小，以保证准确性不会下降太多。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;3. 优化降采样&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;对于固定数量的层和固定数量的池化操作，神经网络可能会表现得天差地别。这是由于数据的表征以及计算量大小取决于这些池化操作于何处完成。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果池化操作较早完成，数据的维数会减少。维数越少，网络的处理速度越快，但信息量会减少，准确性也会降低。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果网络中的池化操作完成较晚，那么大部分信息会被保留下来，因此准确度高。然而这也意味着计算是在多维对象上完成的，这会导致计算成本的增加。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;于神经网络中均匀布置降采样是一种行之有效的结构（https://arxiv.org/pdf/1710.02759.pdf），而且能在准确性与速度之间保持良好的平衡。这也是一种饱和点。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;较早的池化速度快，延后的池化精确性高，均匀布置池化能兼具二者的一些优点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;4. 权重修剪&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在一个经过训练的神经网络中，有些权重对于某个神经元单元的激活值至关重要，而其他的权重基本不影响结果。尽管如此，我们仍要对这些不那么重要的权重做一些计算。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;修剪（pruning）是一个完全删除最小强度连接的过程，这样我们就可以跳过这些计算。这会降低准确性但是能让网络更快更精简。我们需要找出饱和点，然后在尽量不影响准确性的情况下删去尽可能多的连接。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.23&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4zLMKQ6mgSMEVweZ4zRicibqppVw0VYpMr10vOwRjhpkke0qib1PRia2goQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;删去最弱的连接来节省计算时间与空间。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;5. 离散化权重&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;为了在磁盘中保存神经网络，我们需要记录网络中每一个权重的值。这意味着我们需要为每一个参数保存一个浮点数，同时也意味着大量磁盘空间的消耗。举例说明，在 C 中一个浮点数占据 4 个字节，即 32 位。一个有着上亿参数的网络（如 Google-Net 或 VGG-16）会轻易占据上百兆字节的空间，而这样的消耗在移动设备中是不可接受的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;为了尽量减小网络存储的量，一种方法是通过离散化权重来降低权重的精度。在这个过程当中，我们更改数字的表示使其不再表示具体值，而是限制其为数值的子集。这样我们只需要存储一次经过离散化的值，然后将它们映射到网络的权重上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.37625&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4j6HyYoE5fIaIsf6XuNeGDNR4OmjMeyhiccHd30FFUvmTgwhSbd1VMGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;离散化权重存储索引而非浮点值。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们再次需要通过找到饱和点来决定到底使用多少个值。使用更多数值意味着准确性的提高，但也意味着更大的表征空间。举个例子：如果使用 256 个经过离散化的值，每一个权重只需要使用 1 个字节（即 8 位）就能表示。相比之前（32 位），我们将其大小缩减了四倍！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;6. 模型表征的编码&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们已经对权重作了许多处理，但是还能进一步改进网络！这个特殊技巧源于权重分布不均的事实。一旦权重被离散化，我们就会失去相同数量的对应每一个离散化值的权重。这意味着在我们的模型表征中，某些索引的出现频率相对更高，我们可以利用这一点！&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;哈夫曼编码（Huffman coding）能完美地解决这个问题。它通过给最常用的值分配最小索引以及给最不常用的值分配最大索引来解决这些问题。这有助于减小设备上模型的体积，最关键的是不会降低准确性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5925&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4PMvcS23ESHRAHT5WB7gmlE5d1y30muNYDSXkQsC0VxO706S3vX5IQg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;访问次数最多的符号只使用 1 位的空间，而访问次数最少的符号使用 3 位的空间。这是因为后者在数据表示中出现的次数很少，并由此可以达到一种空间上的平衡。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这个简单的技巧使我们能够进一步缩小神经网络占用的空间，通常能减少 30％ 左右。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;注意：每一层的离散化和编码可以是不同的，从而提供更大的灵活性。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;修正准确率损失&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;通过我们使用的方法，神经网络已经十分精简了。我们删去了弱连接（修剪），甚至改变了一些权重（离散化）。在网络变得十分轻巧快速的同时，其准确率也不如以前了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;为了修正这一点，我们需要迭代地重新训练网络的每一步。这代表我们需要在修剪和离散化操作之后，再次训练网络使其可以拟合相应的变化，然后重复这一过程直到权重不再大幅变化为止。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 16px;&quot;&gt;&lt;strong&gt;结论&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;尽管智能手机没有优秀的台式机那样的磁盘空间、计算能力或者电池寿命，它们仍是深度学习应用程序的优秀实验对象。通过一系列方法，我们现在可以在这些多功能手持设备上运行强大的神经网络，准确性只是略有下降。这为数千个优秀的应用打开了大门。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果有兴趣，你也可以了解一些面向移动设备的优秀神经网络，如 SqueezeNet（https://arxiv.org/abs/1602.07360）或 MobileNets（https://arxiv.org/abs/1704.04861）。 &lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);text-align: justify;white-space: normal;caret-color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;参考阅读：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650735882&amp;amp;idx=1&amp;amp;sn=84eb9fd048df96b67061c46fe211ddbb&amp;amp;chksm=871ac174b06d486254116f564b0c4a572401947d18a299d2d2de46b6966c73daa958c643d109&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;纵览轻量化卷积神经网络：SqueezeNet、MobileNet、ShuffleNet、Xception&lt;/a&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650740387&amp;amp;idx=2&amp;amp;sn=81c7077d3bf8d365a84aeda46ce9b804&amp;amp;chksm=871ad2ddb06d5bcbaa607ceab17dcc363d5eb639ae43d942d5513bbd12ac9815efe54a11fe0b&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;谷歌发布MobileNetV2：可做语义分割的下一代移动端计算机视觉架构&lt;/span&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;原文链接：https://heartbeat.fritz.ai/how-smartphones-manage-to-handle-huge-neural-networks-269debcb243d&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;930626227&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-05-1000000682_503258169</guid>
<pubDate>Sat, 05 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>CVPR 2018 | 密歇根大学&amp;谷歌提出TAL-Net：将Faster R-CNN泛化至视频动作定位中</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-05-1000000682_503258160.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYMjRG2A4hv5f*zg*ZIsqa8X473TVRlBqGwfYUMPJEp6LYDewaOSDKeMWPvTBIZSbRLSQ*V4bbSYoJaM41rPT6qA=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    CVPR 2018 | 密歇根大学&amp;amp;谷歌提出TAL-Net：将Faster R-CNN泛化至视频动作定位中                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-05&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;arXiv&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Yu-Wei Chao等&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：Geek AI、路&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;近日，密歇根大学和谷歌研究院的一项研究提出了时序动作定位网络 TAL-Net，该网络将之前常用于图像目标检测的 Faster R-CNN 网络应用于视频时序动作定位中。在 THUMOS&#39;14 检测基准上，TAL-Net 在动作提名（action proposal）和定位上都取得了目前最好的性能，并且在 ActivityNet 数据集上取得了具有竞争力的性能。目前，该论文已被 CVPR 2018 大会接收。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;对人类动作的视觉理解是构建辅助人工智能系统所需的核心能力。在传统的研究中，这个问题通常在动作分类的范畴内被研究 [46, 37, 30]，其目标是对一个按照时序剪辑的视频片段进行强制选择（forced-choice）分类，分类为若干动作类型中的一类。尽管人们在此领域的研究取得了累累硕果，但这种分类的设定是不现实的，因为现实世界中的视频通常是没有剪辑过的，而且我们感兴趣的行为通常也内嵌在与其不相关的活动背景中。最近的研究关注点已经逐渐向未剪辑视频中的时序动作定位转移 [24, 32, 47]，其任务不仅仅是识别动作的类别，还需要检测每个动作实例的开始和结束时间。时序动作定位的改进可以推动大量重要课题的发展，从提取体育运动视频中的精彩片段这样的即时应用，到更高级的任务，如自动视频字幕。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;时序动作定位，和目标检测一样，都属于视觉检测问题的范畴。然而，目标检测旨在生成物体在二维图像中的空间边界框，时序动作定位则是要在一维的帧序列中生成时序片段。因此，许多动作定位的方法从目标检测技术的进展中得到启发。一个成功的例子是：基于区域的检测器的使用 [18, 17, 33]。这些方法首先从完整的图像中生成一个与类别无关的候选区域的集合，然后遍历这些候选区域，对其进行目标分类。要想检测动作，我们可以遵循这一范式，先从整个视频中生成候选片段，然后对每个候选片段进行分类。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在基于区域的检测器中，Faster R-CNN [33] 由于其在公开的对比基准上极具竞争力的检测精度，被广泛应用于目标检测。Faster R-CNN 的核心思想是利用深度神经网络（DNN）的巨大容量推动候选区域生成和目标检测这两个过程。考虑到它在图像目标检测方面的成功，将 Faster R-CNN 用到视频时序动作定位也引起了研究者极大的兴趣。然而，这种领域的转变也带来了一系列挑战。本论文作者回顾了 Faster R-CNN 在动作定位领域存在的问题，并重新设计了网络架构，来具体地解决问题。研究者重点关注以下几个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;1. 如何处理动作持续时间的巨大差异？与图像中物体的大小相比，动作的时间范围差别很大——从零点几秒到几分钟不等。但是，Faster R-CNN 根据共享的特征表示对不同规模的候选片段（即 anchor）进行评估，由于特征的时间范围（即感受野）和 anchor 跨度在对齐时存在偏差，因此 Faster R-CNN 可能无法捕获相关的信息。研究者提出使用 multi-tower 网络和扩张时序卷积（dilated temporal convolution）来执行此类对齐工作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2. 如何利用时序上下文（temporal context）？动作实例之前和之后的时刻包含用于定位和分类的关键信息（可能比目标检测中的空间上下文更重要）。直接简单地将 Faster R-CNN 应用于时序动作定位可能无法利用时序上下文。研究者提出通过扩展生成候选片段和动作分类的感受野来显性地对时序上下文进行编码。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;3. 如何最好地融合多流特征？当前最优的动作分类结果主要是通过融合 RGB 和基于光流的特征得到的。然而，探索将这样的特征融合应用到 Faster R-CNN 上的研究还十分有限。研究者提出了一个晚融合（late fusion，在分类结果上融合）方案，并且通过实验证明了它相对于常见的早融合（early fusion，在特征上融合）的优势。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;本研究的贡献有两方面：（1）介绍了时序动作定位网络（TAL-Net），一种基于 Faster R-CNN 的视频动作定位新方法；（2）在 THUMOS』14 检测基准 [22] 中，本研究提出的模型在动作提名（action proposal）和定位上都取得了目前最好的性能，并且在 ActivityNet 数据集 [5] 上取得了具有竞争力的性能。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3236784938450398&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4Al6XUePZmqQcuBuePtdPQia3aGYVZsdd6jEZOCq70wZuQAzSh1wbnqg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1381&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 1：用于图像目标检测的 Faster R-CNN 架构 [33]（左图）和用于视频时序动作定位的 Faster R-CNN 架构 [15, 9, 16, 51]（右图）的对比。时序动作定位可以被看作是目标检测任务的一维版本。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Faster R-CNN&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Faster R-CNN 最初的提出是为了解决目标检测问题 [33]，在给定一个输入图像时，Faster R-CNN 的目标是输出一组检测边界框，每一个边界框都带有一个目标类别标签。整个流程包括两个阶段：生成候选区域和分类。首先，输入图像经过二维卷积处理生成一个二维特征图。另一个二维卷积（即候选区域网络，Region Proposal Network）用于生成一组稀疏的类别无关的候选区域，这是通过对一组大小不同的、以特征图上的每个像素点为中心的锚点框进行分类来实现的。这些候选区域的边界也通过回归进行调整。之后，对于每个候选区域，区域内的特征首先被池化为一个固定大小的特征图（即 RoI 池化）。接着，DNN 分类器使用池化之后的特征计算目标类别的概率，同时为每个目标类别的检测边界进行回归。图 1（左）展示了完整的流程。该框架通常通过交替进行第一阶段和第二阶段的训练来完成训练工作 [33]。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Faster R-CNN 很自然地被拓展到时序动作定位领域 [15, 9, 51]。回想一下，目标检测的目的是检测二维空间区域。而在时序动作定位中，目标则是检测一维的时序片段，每个片段都以一个开始时间和一个结束时间来表示。时序动作定位因此可以被看作是目标检测的一维版本。图 1（右）展示了一个典型的 Faster RCNN 时序动作定位流程。与目标检测类似，它包含两个阶段。首先，给定一组帧序列，我们通常通过二维或者三维卷积网络提取出一个一维特征图。之后，将该特征图传输给一维卷积网络（指候选片段网络，Segment Proposal Network），在每个时间点上对一组大小不同的 anchor 片段进行分类，并且对边界进行回归。这将返回一组稀疏的类别无关的候选片段。接着，对于每个候选片段，我们计算动作类别的概率，并进一步对片段边界进行回归（修正）。在这一步，首先使用一维的 RoI 池化层（也称「SoI 池化」），接着使用 DNN 分类器来实现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;TAL-Net&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;TAL-Net 遵循了 Faster R-CNN 的检测模式，并用于时序动作定位（图 1 右），但有三种新的架构变化。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.308843537414966&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4KicS0Vkv5u2Sibj4ADmDLHSibTKuClyfgicOryXQ4rOk7McA73wjuJnJ3w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1470&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 2：左图：在时序动作定位中，不同规模的 anchor 共享感受野的局限性。右图：本研究提出的的候选片段网络的 multi-tower 架构。每个 anchor 大小都有一个具备对齐后的感受野的相关网络。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6115942028985507&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4oz17QZqMy3wkWqWG772Mcy3hPIubib3T5aocgJvDNfhD5PcIrdTnOGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;690&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 3：使用扩张时序卷积控制感受野的大小 s。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5947521865889213&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4gBqV3qzh2h2gBicgicoFhcr8huJ0nqTfcPIwrruF6IJTpjwV1JDBulOg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;686&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 4：在生成候选片段中纳入上下文特征。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.0116788321167882&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4v4slrM7c9iaek16rWAohg3wo4czTVibyELf8SmkGibcicRESdvoK2ARtBw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;685&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 5：不纳入上下文特征的候选片段分类（上图）[17, 33]，纳入上下文特征后的候选片段分类（下图）。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.8296943231441049&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4dxxcqzOB5yCWypAJkPcZfLwJm1JiaGtAc1kz5icicV8P4mxu7eeG8PhfQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;687&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;图 6：双流 Faster RCNN 框架的晚融合方案。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9929971988795518&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4O3IgVjtB6ibFuFyO3vRFwRkI6L63NspoBAwxeI77c38Y99fMKow94VQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;714&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;表 5：在 THUMOS&#39;14 上的动作定位 mAP（%）。&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;论文：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Rethinking the Faster R-CNN Architecture for Temporal Action Localization&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.16594960049170251&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4bJJybSeuNM5s2OJjCSH7pz7aDU6BslkXnZCYTc1qbE5ic5ZDr0EUiaibg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1627&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;论文链接：https://arxiv.org/abs/1804.07667&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;摘要：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们提出了 TAL-Net，一种用于视频时序动作定位的改进方法，它受到了 Faster R-CNN 目标检测框架的启发。TAL-Net 解决了现有方法存在的三个关键问题：（1）我们使用一个可适应动作持续时间剧烈变化的 multi-scale 架构来提高感受野的对齐程度；（2）通过适当扩展感受野，我们更好地利用动作的时序上下文，用于生成候选片段和动作分类；（3）我们显性地考虑了多流特征融合，并证明了动作晚融合的重要性。我们在 THUMOS&#39;14 检测基准上取得了动作提名和定位目前最好的性能，并且在 ActivityNet 数据集上取得了很有竞争力的性能。 &lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);text-align: justify;white-space: normal;caret-color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);caret-color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1986718093&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-05-1000000682_503258160</guid>
<pubDate>Sat, 05 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>论强化学习和概率推断的等价性：一种全新概率模型</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-05-1000000682.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYMjRG2A4hv5f*zg*ZIsqa8WH-rqyoo7AH-tbGRK-9Lo4GmfDSqt7oZvUZpBLi10PUPCZSCri*IPegZ-etzl7kNg=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    论强化学习和概率推断的等价性：一种全新概率模型                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-05&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;max-width: 100%;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border-width: 0px;border-style: initial;border-color: currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border-width: initial;border-style: initial;border-color: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;arXiv&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Sergey Levine&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：张倩、刘晓坤&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: justify;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;虽然强化学习问题的一般形式可以有效地推理不确定性，但强化学习和概率推断的联系并不是很明显。在本文中，UC Berkeley EECS 助理教授 Sergey Levine 提出了一种新的概率模型和理论框架，证明了强化学习的一般形式即最大熵强化学习与概率推断的等价性。在原则上，将问题形式化为概率推断，可以应用多种近似推断工具，将模型以灵活、强大的方式进行扩展。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;概率图模型（PGM）为机器学习研究者提供了一种广泛适用的工具（Koller 和 Friedman，2009）：该模型用概率理论表达整个学习问题，为原则目标的设计提供了一个一致、灵活的框架，建立了反映世界因果结构的模型，并允许针对广泛的问题领域部署一组通用的推理方法。事实上，如果一个特定的学习问题可以形式化为概率图模型，我们通常会将其作为解决问题的第一步，也是最重要的一步。关键的是，在 PGM 框架下，写下模型并提出问题就足够了，学习和推理的目标会自动涌现。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;一般来讲，被形式化为强化学习或最优控制的决策问题会被投射到一个框架中，该框架旨在用效用或奖励来扩充概率模型，进而实现模型的泛化，其中奖励函数被视为外部信号。根据这种观点，确定最佳行动方案或最佳决策策略是一种与概率推理截然不同的问题，尽管潜在的动力系统仍然可以用概率图模型来描述。在本文中，我们提出了关于决策、强化学习和最优控制的另一种观点，其中决策问题只是特定类型图模型中的一种推理问题。将决策形式化为概率图模型中的推理，原则上可以使我们得以应用广泛的近似推理工具，以灵活而有力的方式对模型进行扩展，并对模型的组合性和部分可观测性进行推理。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;具体来说，我们将讨论强化学习或最优控制问题（有时称为最大熵强化学习）的泛化如何等价于确定性动力学机制下的精确概率推理及随机动力学机制下的变分推断。所有这些方法都包括将控制或强化学习明确或隐含地表述为 PGM，然后部署来自 PGM 文献的学习和推理方法以解决由此产生的推理和学习问题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;将强化学习和决策形式化为推理可以创造出许多其他有吸引力的工具：基于熵最大化的自然探索策略、逆向强化学习的有效工具以及部署解决强化学习问题的强大的近似推理算法的能力。此外，概率推理和控制之间的联系为奖励函数的含义及其对最优策略的影响提供了一种有吸引力的概率解释。强化学习中奖励或成本函数的设计往往与科学一样艺术，奖励的选择往往模糊了算法与目标之间的界限，为任务定制的启发式算法和任务目标组合成单个奖励。在作为推理框架的控制中，奖励诱导随机变量的分布，最优策略的目标是明确匹配由奖励和系统动力学定义的概率分布，这可能为今后的工作提供一种系统化奖励设计的方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;本文将提出一种概率模型，用于将控制或强化学习的最大熵泛化嵌入 PGM 框架中，描述如何在该模型（确切地说是在确定性动力学机制下，或随机动力学机制下的结构化变分推理）中进行推理，并讨论基于函数逼近的近似方法如何在该框架中拟合。虽然控制的特殊变分推理解释与以往的研究有所不同，但本文的目的并不是要提出一种从根本上看待控制与推理之间联系的新方法。更确切地说，本文是以独立和可访问的教程形式统一处理该主题，并将该框架与最近在强化学习方面的研究相联系，包括最近提出的深度强化学习算法。此外，本文还对近年来与控制作为概率推理的观点相关的强化学习文献进行了综述，并对未来的研究方向提出了一些看法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在控制问题中利用图模型进行推断&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在这一部分，我们将证明基础的图模型可以让我们在 PGM 框架中嵌入控制，并讨论该框架如何导出多种标准强化学习和动态编程方法的变体。这部分展示的 PGM 对应标准强化学习问题的泛化，其中 RL 目标函数增加了一个熵项。奖励函数的量在奖励最大化和熵最大化之间进行权衡，使原始强化学习可以由无限大奖励值极限导出。我们首先定义符号，然后定义图模型，再展示多种推断方法，并解释它们和强化学习、动态编程的标准算法的联系。最后，我们将讨论该方法的一些局限，启发第三部分的变分方法。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;变分推断和随机性动力学&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在随机性动力学的情况下，最大熵框架的根本困难（参见 2.3、2.4）在于假设智能体被允许同时控制它的动作和系统动态，以生成最优轨迹，但它对系统动态的控制权基于对真实动态的偏差而被惩罚。因此，等式（10）中的 log p(s_t+1|s_t, a_t) 项可以分离到等式之外，生成附加项，其对应的是后验动态 p(s_t+1|s_t, a_t,O1:T) 和真实动态 p(s_t+1|s_t, a_t) 之间的交叉熵。这解释了 2.3 节中讨论的该方法的追逐风险的本质：如果智能体被允许影响它的动态，即使很微弱，它也将合理地移除危险动作的发生可能性不大但却极端糟糕的输出。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当然，在实际的强化学习和控制问题中，这种对系统动态的操控是不可能的，并且得到的策略会导致灾难性的糟糕输出。我们可以通过修改推断过程修正这个问题。在这一部分中，我们将通过固定系统动态，写下对应的最大熵目标函数，来推导这种修正，并导出一个动态编程过程来对其进行优化。然后，我们将表明该过程可以应用到多种结构化变分推断中。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;用函数逼近实现近似推断&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在上一部分中，我们讨论了动态编程反向算法结合类似 Bellman backup 的更新过程，可以得到类似最大熵强化学习框架中的价值函数和 Q-函数，随机最优化策略可以由 Q-函数和价值函数得到。在这一部分中，我们将讨论高维或连续的强化学习问题的实用算法如何从这个理论框架中使用函数逼近推导出来。然后，我们能得到很多类似标准强化学习中概念的对应技术：策略梯度、actor-critic 算法和 Q-学习。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;论文：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Reinforcement Learning and Control as Probabilistic Inference: Tutorial and Review&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.31339285714285714&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicW2FSKzCdOcvTK7shyZFuqUeP1XSXnvAUia5sG8JWQJZ1SFPibymUV5tVDS3TBMQOTSeDjMNW7LTmw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1120&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;论文地址：https://arxiv.org/abs/1805.00909&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;摘要：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;强化学习或最优控制的框架为智能决策提供了数学形式，使其变得强大和应用广泛。虽然强化学习问题的一般形式可以有效地推理不确定性，但强化学习和概率模型推断的联系并不是很明显。然而，在算法设计中考虑这样的联系还是有价值的：在原则上将一个问题形式化为概率推断，使我们能应用多种近似推断工具，将模型以灵活、强大的方式进行扩展，并对组合性和部分可观测性进行推理。在本文中，我们将讨论强化学习或最优控制问题的一般形式（有时称为最大熵强化学习）如何与确定性动力学的概率推断等价，并与随机性动力学的变分推断等价。我们将展示该框架的细节推导，概述以前的相关研究和相关思想来提出新的强化学习和控制算法，并展望了未来的研究方向。 &lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;color: rgb(62, 62, 62);white-space: normal;text-align: justify;caret-color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);font-size: 16px;white-space: normal;background-color: rgb(255, 255, 255);caret-color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;caret-color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);white-space: normal;background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1796085439&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-05-1000000682</guid>
<pubDate>Sat, 05 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>教程 | 如何使用DeepFake实现视频换脸</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-04-1000000681_503258144.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYIcBR5AytnwjiVWaYHPFaZLUQkvcyFL9W5jbxxEb7O113BWyk35QV-75gTgC43dc7H1CC6As4DYbUW31oLHTjX0=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    教程 | 如何使用DeepFake实现视频换脸                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-04&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border: 0px currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);&quot;&gt;机器之心发布&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：冯沁原&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 14px;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/span&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;blockquote style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/blockquote&gt;&lt;blockquote style=&quot;white-space: normal;&quot;&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;不久之前，AV 视频换脸明星的 DeepFake 火了。这篇文章将一步步教你如何实现换脸。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;iframe class=&quot;video_iframe&quot; data-vidtype=&quot;2&quot; allowfullscreen=&quot;&quot; frameborder=&quot;0&quot; data-ratio=&quot;1.7647058823529411&quot; data-w=&quot;480&quot; data-src=&quot;https://v.qq.com/iframe/preview.html?vid=q0642apt86a&amp;amp;width=500&amp;amp;height=375&amp;amp;auto=0&quot;&gt;&lt;/iframe&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果你是第一次听说 DeepFake，一定要点击上面的视频，亲自感受一下尼古拉斯的脸是如何占据全世界的每一个影片。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;strong&gt;项目实战&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们要如何实现视频里的变脸呢?&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;因为视频是连续的图片，那么我们只需要把每一张图片中的脸切换了，就能得到变脸的新视频了。那么如何切换一个视频中的图片呢? 这需要我们 首先找到视频中的脸，然后把脸进行切换。我们会发现，变脸这个难题可以拆解成如下的流程。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.33364928909952607&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUqzWUNwdWFEP2iaDKH6tVUq5fBnRibxzMqD0D15sALD1ibQvIO9hciaGpOQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;2110&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;于是，在我们会在后续按照这五个步骤进行介绍。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;strong&gt;视频转图像&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;FFmpeg&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;FFmpeg 提供了处理音频、视频、字幕和相关源数据的工具库。核心的库包括:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libavcodec 提供了处理编码的能力&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libavformat 实现了流协议、容器类型、基本的 I/O 访问 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libavutil 包括哈希、解压缩等多样的功能 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libavfilter 提供了链式修改音频和视频的能力 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libavdevice 提供了对设备访问的抽象 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libswresample 实现了混音等能力 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;libswscale 实现了颜色和尺度变换的能力&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;对外主要提供了三个工具:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;ffmpeg 用来处理多媒体内容 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;ffplay 是一个极简的播放器 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;ffprobe 是多媒体内容的分析工具&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;于是，我们的视频转图片的功能，可以通过以下命令来实现，&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;ffmpeg -i clipname -vf fps=framerate -qscale:v &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;imagename%04d.jpg&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;line-height: 1.75em;&quot;&gt;&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;具体来说，上面的指令可以把一个视频，按照固定的频率生成图片。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;strong&gt;人脸定位 &lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基本算法&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;人脸定位是一个相对成熟的领域，主要应用 dlib 库的相关功能。我们虽然可以定制一个人脸识别的算法，但是我们也可以使用已有的通用的人脸识别 的函数库。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;有两类算法，一类是 HOG 的脸部标记算法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9501133786848073&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUbz51xeF2ebtH91rOiakhFiaGsurENAoNjxyCwCPObUqvjbEvvfVxIVBg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;882&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;(来源: Facial landmarks with dlib, OpenCV, and Python) &lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;该算法的效果如上图。它将人脸分成了如下的区域:&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;眼睛 (左/右)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;眉毛 (左/右)&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;鼻子&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;嘴&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;下巴 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基于这些标记，我们不仅能够进行后续的换脸，也能检测脸的具体形态，眨眼状态等。例如，我们可以把这些点连在一起，得到更多的特征。&lt;br&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.9861386138613861&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUwBMicfpsFdiafottmQStjW3o1NwhRWHeSacTRrYyD9eRPoJ4g51IMsIw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1010&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;(来源: Real-Time Face Pose Estimation ) &lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;寻找脸部标记是一个预测问题，输入是一张图片和兴趣区域，输出是兴趣区域的关键点。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;HOG 是如何找到人脸的呢? 这是一个通用的检测算法:&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从数据集中找到正样本，并且计算 HOG 描述 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从数据集中找到负样本，并且计算 HOG 描述 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基于 HOG 的描述使用分类算法 &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在负样本上在不同的起点和尺度进行分类，并且找到误判的 HOG &lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基于上一步的负样本，对模型进行重新的训练&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这里有个问题，如何计算 HOG 的描述呢? 我们可以计算每个点的亮度，然后把每个点表示为指向更黑的方向的向量。如下图所示:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.35987261146496813&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUA7NPqoOVdPYkqgqcnuLPibj1YtHMKU23dRFJs705lLicm5rMs9QMfBKA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1256&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt; (来源: Machine Learning is Fun! Part 4: Modern Face Recognition with Deep Learning )&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.39171974522292996&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUYcdc5Mal4C9CXmib0ormO1WWNRDNwerE2R8zKHLEpexUXUCfjBPOTLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1256&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt; (来源: Machine Learning is Fun! Part 4: Modern Face Recognition with Deep Learning )&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; 我们为什么要这么做呢? 因为每个点的绝对值会受到环境的影响，但是相对值则比较稳定。因此，我们通过梯度变化的表示，能够准备出高质量的数据。当然，我们也可以进一步的把相邻的点聚合在一起，从而产生更有代表性的数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;现在可以进行检测了&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;首先在新的图片上基于不同的起点和尺度寻找可行的区间；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基于非极大抑制的方法来减少冗余和重复的，下图就是一个有冗余和去除冗余的情况，这个方法说白了就是找一个最大概率的矩阵去覆盖掉和它过于重合的矩阵，并且不断重复这个过程。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.719551282051282&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUdNqr2rTCtXQWzHicegw89Y6jVFEjVCoxZ0VclgrtFM3ibGMOiatDeA3Kg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1248&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;  (来源: Histogram of Oriented Gradients and Object Detection)&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;有了轮廓之后，我们可以找到脸部标记。寻找脸部标记的算法是基于《One Millisecond Face Alignment with an Ensemble of Regression Trees》的论文。简单来说，它利用了已经标记好的训练集来训练一个回归树的组合，从而用来预测。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;1.1876675603217157&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUDb3VSKHNuAiatHMVBCoDmhXvHRUKdUT0NwTksYorZaEHVOvA5aul28A/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;746&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt; (来源: One Millisecond Face Alignment with an Ensemble of Regression Trees) &lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;在这个基础上，就能够标记出这 68 个点。&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.7916666666666666&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuURyYfiaNibG8ub01E9KSU5kicQEpQF6BQHUNP5hUicXPIF5OvBc1LLichkwA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;816&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt; (来源: Facial landmarks with dlib, OpenCV, and Python ) &lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基于人脸的 68 个标记的坐标，可以计算人脸的⻆度，从而抠出摆正后的人脸。但是 dlib 要求识别的必须是全脸，因此会减少我们的样本集以及一些特定的样本场景。同时，因为人脸是 64*64 像素的尺寸，因此也要处理清晰度的问题。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;另一种方法是用 CNN 训练一个识别脸部的模型。CNN 能够检测更多的⻆度，但是需要更多的资源，并且可能在大文件上失效。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;strong&gt;数据准备&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们的目标是把原始人脸转换为目标人脸，因此我们需要收集原始人脸的图片和目标人脸的图片。如果你选择的是一个名人，那么可以直接用 Google image 得到你想要的图片。虽然视频中的图片也能用，但是也可以收集一些多样的数据。当然，我用的是我和我老婆的图片，因此直接从我 们的 Photo 中导出即可。当人脸数据生成后，最好仔细检查一下，避免不应该的脸或者其它的东东出现在你的训练集中。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;extract.py&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Deepfake 用于定位人脸的算法如下:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; cv2 &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 开源的计算机视觉库&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; Path &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供面向对象方式的文件访问&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; tqdm &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; tqdm &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供进度条显示功能&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; os &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供操作系统相关的访问&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; np &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供科学计算相关的功能&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.cli &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; DirectoryProcessor, rotate_image &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 处理一个目录的文件，然后保存到新的目录中；旋转图片，其实是在utils中&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.utils &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; get_folder &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 获得一个folder，不存在则创建&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.multithreading &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; pool_process &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 多进程并发计算&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.detect_blur &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; is_blurry &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 判断图片是否模糊&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; plugins.PluginLoader &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; PluginLoader &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 加载对应的算法&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;ExtractTrainingData(DirectoryProcessor)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 从训练集提取头像&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;create_parser(self, subparser, command, description)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.optional_arguments = self.get_optional_arguments()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.parser = subparser.add_parser(&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            command,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            help=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Extract the faces from a pictures.&quot;&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            description=description,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            epilog=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Questions and feedback: \&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            https://github.com/deepfakes/faceswap-playground&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            )&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/span&gt; # 参数配置部分省略&lt;br&gt;&lt;br&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;process(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        extractor_name = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Align&quot;&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 对应的是Extract_Align.py&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.extractor = PluginLoader.get_extractor(extractor_name)()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        processes = self.arguments.processes&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; processes != &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 多进程处理图片&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                files = list(self.read_directory())&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; filename, faces &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; tqdm(pool_process(self.processFiles, files, processes=processes), total = len(files)):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    self.num_faces_detected += &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    self.faces_detected[os.path.basename(filename)] = faces&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 单进程处理图片&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; filename &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; tqdm(self.read_directory()):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        image = cv2.imread(filename)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        self.faces_detected[os.path.basename(filename)] = self.handleImage(image, filename)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.verbose:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Failed to extract from image: {}. Reason: {}&#39;&lt;/span&gt;.format(filename, e))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;finally&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.write_alignments()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;processFiles(self, filename)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 处理一个单独的图片的函数&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            image = cv2.imread(filename)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; filename, self.handleImage(image, filename)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.verbose:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Failed to extract from image: {}. Reason: {}&#39;&lt;/span&gt;.format(filename, e))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; filename, []&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;getRotatedImageFaces(self, image, angle)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 得到固定角度旋转后的图片的人脸&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        rotated_image = rotate_image(image, angle)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        faces = self.get_faces(rotated_image, rotation=angle)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        rotated_faces = [(idx, face) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; idx, face &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; faces]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; rotated_faces, rotated_image&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;imageRotator(self, image)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 得到一系列旋转后的人脸&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;&#39;&#39; rotates the image through rotation_angles to try to find a face &#39;&#39;&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; angle &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.rotation_angles:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            rotated_faces, rotated_image = self.getRotatedImageFaces(image, angle)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; len(rotated_faces) &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.verbose:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;found face(s) by rotating image {} degrees&#39;&lt;/span&gt;.format(angle))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;break&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; rotated_faces, rotated_image&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;handleImage(self, image, filename)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        faces = self.get_faces(image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        process_faces = [(idx, face) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; idx, face &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; faces]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 没有找到人脸，尝试旋转图片&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.rotation_angles &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; len(process_faces) == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            process_faces, image = self.imageRotator(image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        rvals = []&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; idx, face &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; process_faces:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 画出人脸的标记&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.debug_landmarks:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; (x, y) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; face.landmarksAsXY():&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    cv2.circle(image, (x, y), &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, (&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;255&lt;/span&gt;), &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            resized_image, t_mat = self.extractor.extract(image, face, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;256&lt;/span&gt;, self.arguments.align_eyes)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            output_file = get_folder(self.output_dir) / Path(filename).stem&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 检测图片是否模糊&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.blur_thresh &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                aligned_landmarks = self.extractor.transform_points(face.landmarksAsXY(), t_mat, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;256&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;48&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                feature_mask = self.extractor.get_feature_mask(aligned_landmarks / &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;256&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;256&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;48&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                feature_mask = cv2.blur(feature_mask, (&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;10&lt;/span&gt;))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                isolated_face = cv2.multiply(feature_mask, resized_image.astype(float)).astype(np.uint8)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                blurry, focus_measure = is_blurry(isolated_face, self.arguments.blur_thresh)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# print(&quot;{} focus measure: {}&quot;.format(Path(filename).stem, focus_measure))&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# cv2.imshow(&quot;Isolated Face&quot;, isolated_face)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# cv2.waitKey(0)&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# cv2.destroyAllWindows()&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; blurry:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;{}&#39;s focus measure of {} was below the blur threshold, moving to \&quot;blurry\&quot;&quot;&lt;/span&gt;.format(Path(filename).stem, focus_measure))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    output_file = get_folder(Path(self.output_dir) / Path(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;blurry&quot;&lt;/span&gt;)) / Path(filename).stem&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            cv2.imwrite(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;{}_{}{}&#39;&lt;/span&gt;.format(str(output_file), str(idx), Path(filename).suffix), resized_image) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 生成新图片&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            f = {&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;r&quot;&lt;/span&gt;: face.r,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;x&quot;&lt;/span&gt;: face.x,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;w&quot;&lt;/span&gt;: face.w,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;y&quot;&lt;/span&gt;: face.y,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;h&quot;&lt;/span&gt;: face.h,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;landmarksXY&quot;&lt;/span&gt;: face.landmarksAsXY()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            }&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            rvals.append(f)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; rvals&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;注意，基于特征标记的算法对于倾斜的脸效果不好，也可以引入 CNN。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;line-height: 1.75em;&quot;&gt;&lt;strong&gt;人脸转换&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;人脸转换的基本原理是什么? 假设让你盯着一个人的视频连续看上 100 个小时，接着又给你看一眼另外一个人的照片，接着让你凭着记忆画出来刚才 的照片，你一定画的会很像第一个人的。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们使用的模型是 Autoencoder。有趣的是，这个模型所做的是基于原始的图片再次生成原始的图片。Autoencoder 的编码器把图片进行压缩，而解 码器把图片进行还原，一个示例如下图:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3086816720257235&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUziaRXdzG7h8Ccuh9MhQ07icFic6ibf0hlOcepQeygJQTeKNc61uXXXx6Ug/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1244&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;(来源: Building Autoencoders in Keras ) &lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在这个基础上，即使我们输入的是另外一个人脸，也会被 Autoencoder 编码成为一个类似原来的脸。&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;为了提升我们最终的效果，我们还需要把人脸共性相关的属性和人脸特性相关的属性进行学习。因此，我们对所有的脸都用一个统一的编码器，这 个编码器的目的是学习人脸共性的地方;然后，我们对每个脸有一个单独的解码器，这个解码器是为了学习人脸个性的地方。这样当你用 B 的脸通过 编码器，再使用 A 的解码器的话，你会得到一个与 B 的表情一致，但是 A 的脸。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这个过程用公式表示如下:&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;X&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39; = Decoder(Encoder(Shuffle(X)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Loss = L1Loss(X&#39;&lt;/span&gt;-X)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;A&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39; = Decoder_A(Encoder(Shuffle(A)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Loss_A = L1Loss(A&#39;&lt;/span&gt;-A)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;B&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39; = Decoder_B(Encoder(Shuffle(B)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Loss_B = L1Loss(B&#39;&lt;/span&gt;-B)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;具体来说，在训练过程中，我们输入 A 的图片，通过编码器和解码器还原 A 的脸;然后我们输入 B 的图片，通过相同的编码器但是不同的解码器还原 B 的脸。不断迭代这个过程，直到 loss 降低到一个阈值。在模型训练的时候，我建议把 loss 降低到 0.02，这样的效果会比较好。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这里用的是比较标准的建模方式。值得注意的是，作者通过加入 PixelShuffler() 的函数把图像进行了一定的扭曲，而这个扭曲增加了学习的难度，反 而让模型能够实现最终的效果。仔细想想这背后的道理，如果你一直在做简单的题目，那么必然不会有什么解决难题的能力。但是，我只要把题目 做一些变体，就足以让你成⻓。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;因为在建模中使用的是原图 A 的扭曲来还原 A，应用中是用 B 来还原 A，所以扭曲的方式会极大的影响到最终的结果。因此，如何选择更好的扭曲方 式，也是一个重要的问题。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当我们图片融合的时候，会有一个难题，如何又保证效果又防止图片抖动。于是我们还要引入相关的算法处理这些情况。于是我们可以知道，一个 看似直接的人脸转换算法在实际操作中需要考虑各种各样的特殊情况，这才是真真的接地气。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;train.py&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;以下是进行训练的算法逻辑：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; cv2 &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 开源的计算机视觉库&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供科学计算相关的功能&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; time &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供时间相关的功能&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; threading &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供多线程相关的功能&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.utils &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; get_image_paths, get_folder &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 得到一个目录下的图片；获得一个folder，不存在则创建&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.cli &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; FullPaths, argparse, os, sys&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; plugins.PluginLoader &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; PluginLoader &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 加载对应的算法&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;tf = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;set_session = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import_tensorflow_keras()&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 在需要的时候载入TensorFlow和keras模块&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;&#39;&#39; Import the TensorFlow and keras set_session modules only when they are required &#39;&#39;&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;global&lt;/span&gt; tf&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;global&lt;/span&gt; set_session&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; tf &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;or&lt;/span&gt; set_session &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; tensorflow&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; keras.backend.tensorflow_backend &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# keras依赖底层的tensorflow实现具体的运算&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        tf = tensorflow&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        set_session = keras.backend.tensorflow_backend.set_session&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;TrainingProcessor(object)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 训练器&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    arguments = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__(self, subparser, command, description=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;default&#39;&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 初始化训练器&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.argument_list = self.get_argument_list()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.optional_arguments = self.get_optional_arguments()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.parse_arguments(description, subparser, command)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.lock = threading.Lock()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;process_arguments(self, arguments)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.arguments = arguments&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Model A Directory: {}&quot;&lt;/span&gt;.format(self.arguments.input_A))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Model B Directory: {}&quot;&lt;/span&gt;.format(self.arguments.input_B))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Training data directory: {}&quot;&lt;/span&gt;.format(self.arguments.model_dir))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.process()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/span&gt; # 参数配置部分省略&lt;br&gt;&lt;br&gt;&lt;span class=&quot;hljs-meta&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(91, 218, 237);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    @staticmethod&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;get_optional_arguments()&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 创建一个存放参数的数组&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;&#39;&#39; Put the arguments in a list so that they are accessible from both argparse and gui &#39;&#39;&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Override this for custom arguments&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        argument_list = []&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; argument_list&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;parse_arguments(self, description, subparser, command)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        parser = subparser.add_parser(&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            command,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            help=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;This command trains the model for the two faces A and B.&quot;&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            description=description,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            epilog=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Questions and feedback: \&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            https://github.com/deepfakes/faceswap-playground&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; option &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.argument_list:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            args = option[&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;opts&#39;&lt;/span&gt;]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            kwargs = {key: option[key] &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; option.keys() &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; key != &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;opts&#39;&lt;/span&gt;}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            parser.add_argument(*args, **kwargs)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        parser = self.add_optional_arguments(parser)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        parser.set_defaults(func=self.process_arguments)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;add_optional_arguments(self, parser)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; option &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.optional_arguments:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            args = option[&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;opts&#39;&lt;/span&gt;]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            kwargs = {key: option[key] &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; option.keys() &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; key != &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;opts&#39;&lt;/span&gt;}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            parser.add_argument(*args, **kwargs)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; parser&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;process(self)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 具体的执行&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stop = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.save_now = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        thr = threading.Thread(target=self.processThread, args=(), kwargs={}) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 线程执行&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        thr.start()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.preview:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Using live preview&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; self.lock:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; name, image &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.preview_buffer.items():&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                            cv2.imshow(name, image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    key = cv2.waitKey(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1000&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; key == ord(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;\n&#39;&lt;/span&gt;) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;or&lt;/span&gt; key == ord(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;\r&#39;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;break&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; key == ord(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;s&#39;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        self.save_now = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;break&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                input() &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# TODO how to catch a specific key instead of Enter?&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# there isnt a good multiplatform solution: https://stackoverflow.com/questions/3523174/raw-input-in-python-without-pressing-enter&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;pass&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Exit requested! The trainer will complete its current cycle, save the models and quit (it can take up a couple of seconds depending on your training speed). If you want to kill it now, press Ctrl + c&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.stop = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        thr.join() &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# waits until thread finishes&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;processThread(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.allow_growth:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                self.set_tf_allow_growth()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Loading data, this may take a while...&#39;&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 加载数据&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# this is so that you can enter case insensitive values for trainer&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            trainer = self.arguments.trainer&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            trainer = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;LowMem&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; trainer.lower() == &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;lowmem&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; trainer&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            model = PluginLoader.get_model(trainer)(get_folder(self.arguments.model_dir), self.arguments.gpus) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 读取模型&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            model.load(swapped=&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            images_A = get_image_paths(self.arguments.input_A) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 图片A&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            images_B = get_image_paths(self.arguments.input_B) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 图片B&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            trainer = PluginLoader.get_trainer(trainer) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 创建训练器&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            trainer = trainer(model, images_A, images_B, self.arguments.batch_size, self.arguments.perceptual_loss) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 设置训练器参数&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Starting. Press &quot;Enter&quot; to stop training and save model&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; epoch &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, self.arguments.epochs):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                save_iteration = epoch % self.arguments.save_interval == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                trainer.train_one_step(epoch, self.show &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; (save_iteration &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;or&lt;/span&gt; self.save_now) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 进行一步训练&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; save_iteration:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    model.save_weights()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.stop:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;break&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.save_now:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    model.save_weights()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    self.save_now = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            model.save_weights()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            exit(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                model.save_weights()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Saving model weights has been cancelled!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            exit(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; e&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            exit(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;set_tf_allow_growth(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        import_tensorflow_keras()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        config = tf.ConfigProto()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        config.gpu_options.allow_growth = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        config.gpu_options.visible_device_list=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        set_session(tf.Session(config=config))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    preview_buffer = {}&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;show(self, image, name=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;&#39;&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 提供预览&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.redirect_gui:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                scriptpath = os.path.realpath(os.path.dirname(sys.argv[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;]))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                img = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;.gui_preview.png&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                imgfile = os.path.join(scriptpath, img)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                cv2.imwrite(imgfile, image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;elif&lt;/span&gt; self.arguments.preview:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;with&lt;/span&gt; self.lock:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    self.preview_buffer[name] = image&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;elif&lt;/span&gt; self.arguments.write_image:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                cv2.imwrite(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;_sample_{}.jpg&#39;&lt;/span&gt;.format(name), image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;could not preview sample&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;raise&lt;/span&gt; e&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Trainer.py&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;以下实现了一次具体的训练：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; time&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; numpy&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.training_data &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; TrainingDataGenerator, stack_images&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Trainer()&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    random_transform_args = { &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 初始化参数&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;rotation_range&#39;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;10&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;zoom_range&#39;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.05&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;shift_range&#39;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.05&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;random_flip&#39;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.4&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    }&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__(self, model, fn_A, fn_B, batch_size, *args)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.batch_size = batch_size&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.model = model&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        generator = TrainingDataGenerator(self.random_transform_args, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;160&lt;/span&gt;) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 读取需要的数据&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.images_A = generator.minibatchAB(fn_A, self.batch_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.images_B = generator.minibatchAB(fn_B, self.batch_size)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;train_one_step(self, iter, viewer)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 训练一步&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        epoch, warped_A, target_A = next(self.images_A)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        epoch, warped_B, target_B = next(self.images_B)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        loss_A = self.model.autoencoder_A.train_on_batch(warped_A, target_A) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 计算损失&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        loss_B = self.model.autoencoder_B.train_on_batch(warped_B, target_B)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;[{0}] [#{1:05d}] loss_A: {2:.5f}, loss_B: {3:.5f}&quot;&lt;/span&gt;.format(time.strftime(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;%H:%M:%S&quot;&lt;/span&gt;), iter, loss_A, loss_B),&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            end=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;\r&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; viewer &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            viewer(self.show_sample(target_A[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;14&lt;/span&gt;], target_B[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;14&lt;/span&gt;]), &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;training&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;show_sample(self, test_A, test_B)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        figure_A = numpy.stack([&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            test_A,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.model.autoencoder_A.predict(test_A),&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.model.autoencoder_B.predict(test_A),&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        ], axis=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        figure_B = numpy.stack([&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            test_B,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.model.autoencoder_B.predict(test_B),&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.model.autoencoder_A.predict(test_B),&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        ], axis=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; test_A.shape[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;] % &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt; == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            figure_A = numpy.concatenate ([figure_A, numpy.expand_dims(figure_A[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;) ])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            figure_B = numpy.concatenate ([figure_B, numpy.expand_dims(figure_B[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;],&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;) ])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        figure = numpy.concatenate([figure_A, figure_B], axis=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        w = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        h = int( figure.shape[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;] / w)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        figure = figure.reshape((w, h) + figure.shape[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;:])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        figure = stack_images(figure)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; numpy.clip(figure * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;255&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;255&lt;/span&gt;).astype(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;uint8&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;h4 cid=&quot;n234&quot; mdtype=&quot;heading&quot; class=&quot;md-end-block md-heading md-focus&quot; style=&quot;font-size: medium;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;AutoEncoder.py&lt;/span&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;以下是我们使用的AutoEncoder的算法逻辑：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# AutoEncoder的基础类&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; os, shutil&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;encoderH5 = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;encoder.h5&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;decoder_AH5 = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;decoder_A.h5&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;decoder_BH5 = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;decoder_B.h5&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;AutoEncoder&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;__init__(self, model_dir, gpus)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.model_dir = model_dir&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.gpus = gpus&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.encoder = self.Encoder()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.decoder_A = self.Decoder()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.decoder_B = self.Decoder()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.initModel()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;load(self, swapped)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        (face_A,face_B) = (decoder_AH5, decoder_BH5) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; swapped &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; (decoder_BH5, decoder_AH5)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;: &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 加载权重&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.encoder.load_weights(str(self.model_dir / encoderH5))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.decoder_A.load_weights(str(self.model_dir / face_A))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.decoder_B.load_weights(str(self.model_dir / face_B))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;loaded model weights&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;True&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Failed loading existing training data.&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(e)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;save_weights(self)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 存储权重&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        model_dir = str(self.model_dir)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; os.path.isdir(model_dir + &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;_bk&quot;&lt;/span&gt;):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            shutil.rmtree(model_dir + &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;_bk&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        shutil.move(model_dir,  model_dir + &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;_bk&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        os.mkdir(model_dir)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.encoder.save_weights(str(self.model_dir / encoderH5))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.decoder_A.save_weights(str(self.model_dir / decoder_AH5))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.decoder_B.save_weights(str(self.model_dir / decoder_BH5))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;saved model weights&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Model.py&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;以下是我们的具体模型：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Based on the original https://www.reddit.com/r/deepfakes/ code sample + contribs&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; keras.models &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; Model &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; KerasModel&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; keras.layers &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; Input, Dense, Flatten, Reshape&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; keras.layers.advanced_activations &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; LeakyReLU&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; keras.layers.convolutional &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; Conv2D&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; keras.optimizers &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; Adam&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; .AutoEncoder &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; AutoEncoder&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.PixelShuffler &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; PixelShuffler&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; keras.utils &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; multi_gpu_model&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;IMAGE_SHAPE = (&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;64&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;ENCODER_DIM = &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1024&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Model(AutoEncoder)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;initModel(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        optimizer = Adam(lr=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5e-5&lt;/span&gt;, beta_1=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.5&lt;/span&gt;, beta_2=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.999&lt;/span&gt;)  &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 深入理解Adam的优化&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = Input(shape=IMAGE_SHAPE)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.autoencoder_A = KerasModel(x, self.decoder_A(self.encoder(x)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.autoencoder_B = KerasModel(x, self.decoder_B(self.encoder(x)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.gpus &amp;gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.autoencoder_A = multi_gpu_model( self.autoencoder_A , self.gpus)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.autoencoder_B = multi_gpu_model( self.autoencoder_B , self.gpus)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.autoencoder_A.compile(optimizer=optimizer, loss=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;mean_absolute_error&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.autoencoder_B.compile(optimizer=optimizer, loss=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;mean_absolute_error&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;converter(self, swap)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        autoencoder = self.autoencoder_B &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; swap &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; self.autoencoder_A&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;lambda&lt;/span&gt; img: autoencoder.predict(img)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;conv(self, filters)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;block(x)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            x = Conv2D(filters, kernel_size=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5&lt;/span&gt;, strides=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;, padding=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;same&#39;&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            x = LeakyReLU(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.1&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; x&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; block&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;upscale(self, filters)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;block(x)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            x = Conv2D(filters * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4&lt;/span&gt;, kernel_size=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3&lt;/span&gt;, padding=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;same&#39;&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            x = LeakyReLU(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0.1&lt;/span&gt;)(x) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 使用 LeakyReLU 激活函数&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            x = PixelShuffler()(x) &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 将filter的大小变为原来的1/4，让高和宽变为原来的两倍&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; x&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; block&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Encoder(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        input_ = Input(shape=IMAGE_SHAPE)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = input_&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.conv(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;128&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.conv(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;256&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.conv(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;512&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.conv(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1024&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = Dense(ENCODER_DIM)(Flatten()(x))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = Dense(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4&lt;/span&gt; * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1024&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = Reshape((&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1024&lt;/span&gt;))(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.upscale(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;512&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; KerasModel(input_, x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Decoder(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        input_ = Input(shape=(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;8&lt;/span&gt;, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;512&lt;/span&gt;))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = input_&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.upscale(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;256&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.upscale(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;128&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = self.upscale(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;64&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        x = Conv2D(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3&lt;/span&gt;, kernel_size=&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;5&lt;/span&gt;, padding=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;same&#39;&lt;/span&gt;, activation=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;sigmoid&#39;&lt;/span&gt;)(x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; KerasModel(input_, x)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;整个网络的结构如下：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.4325452016689847&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6yc9koe9FONnak27959vYmSogZVwFiccbnjLF6nqWreyZ0j3TbbrH0aA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;719&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;text-align: left;&quot;&gt; 来源: 刷爆朋友圈的视频人物换脸是怎样炼成的?&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们可以看出来，经历了四个卷积层、展开层、全连接层，我们开始 upscale 整个模型。在我们 upscale 一半的时候，我们把 encoder 和 decoder 进行&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;了切割，从而保证了共性和个性的分离。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;convert.py&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在训练的基础上，我们现在可以进行图片的转换了。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; cv2&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; re&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; os&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; pathlib &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; Path&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; tqdm &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; tqdm&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.cli &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; DirectoryProcessor, FullPaths&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; lib.utils &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; BackgroundGenerator, get_folder, get_image_paths, rotate_image&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;from&lt;/span&gt; plugins.PluginLoader &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;import&lt;/span&gt; PluginLoader&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-class&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;ConvertImage(DirectoryProcessor)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    filename = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;create_parser(self, subparser, command, description)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.optional_arguments = self.get_optional_arguments()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.parser = subparser.add_parser(&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            command,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            help=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Convert a source image to a new one with the face swapped.&quot;&lt;/span&gt;,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            description=description,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            epilog=&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;Questions and feedback: \&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            https://github.com/deepfakes/faceswap-playground&quot;&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        )&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt; &lt;br&gt; # 参数配置部分省略&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;process(self)&lt;/span&gt;:&lt;/span&gt; &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# 进行模型的转换和拼接&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Original &amp;amp; LowMem models go with Adjust or Masked converter&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# &lt;span class=&quot;hljs-doctag&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;Note:&lt;/span&gt; GAN prediction outputs a mask + an image, while other predicts only an image&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        model_name = self.arguments.trainer&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        conv_name = self.arguments.converter&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.input_aligned_dir = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        model = PluginLoader.get_model(model_name)(get_folder(self.arguments.model_dir), self.arguments.gpus)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; model.load(self.arguments.swap_model):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Model Not Found! A valid model must be provided to continue!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            exit(&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        input_aligned_dir = Path(self.arguments.input_dir)/Path(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;aligned&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.input_aligned_dir &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            input_aligned_dir = self.arguments.input_aligned_dir&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.input_aligned_dir = [Path(path) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; get_image_paths(input_aligned_dir)]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; len(self.input_aligned_dir) == &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Aligned directory is empty, no faces will be converted!&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;elif&lt;/span&gt; len(self.input_aligned_dir) &amp;lt;= len(self.input_dir)/&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;3&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Aligned directory contains an amount of images much less than the input, are you sure this is the right directory?&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Aligned directory not found. All faces listed in the alignments file will be converted.&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        converter = PluginLoader.get_converter(conv_name)(model.converter(&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;),&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            trainer=self.arguments.trainer,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            blur_size=self.arguments.blur_size,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            seamless_clone=self.arguments.seamless_clone,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            sharpen_image=self.arguments.sharpen_image,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            mask_type=self.arguments.mask_type,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            erosion_kernel_size=self.arguments.erosion_kernel_size,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            match_histogram=self.arguments.match_histogram,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            smooth_mask=self.arguments.smooth_mask,&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            avg_color_adjust=self.arguments.avg_color_adjust&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        )&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        batch = BackgroundGenerator(self.prepare_images(), &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# frame ranges stuff...&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.frame_ranges = &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# split out the frame ranges and parse out &quot;min&quot; and &quot;max&quot; values&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        minmax = {&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;min&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# never any frames less than 0&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;max&quot;&lt;/span&gt;: float(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;inf&quot;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        }&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.frame_ranges:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.frame_ranges = [tuple(map(&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;lambda&lt;/span&gt; q: minmax[q] &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; q &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; minmax.keys() &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; int(q), v.split(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;-&quot;&lt;/span&gt;))) &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; v &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.arguments.frame_ranges]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# last number regex. I know regex is hacky, but its reliablyhacky(tm).&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.imageidxre = re.compile(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;r&#39;(\d+)(?!.*\d)&#39;&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; batch.iterator():&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            self.convert(converter, item)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;check_skipframe(self, filename)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            idx = int(self.imageidxre.findall(filename)[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;])&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; any(map(&lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;lambda&lt;/span&gt; b: b[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;]&amp;lt;=idx&amp;lt;=b[&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;1&lt;/span&gt;], self.frame_ranges))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;False&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;check_skipface(self, filename, face_idx)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        aligned_face_name = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;{}_{}{}&#39;&lt;/span&gt;.format(Path(filename).stem, face_idx, Path(filename).suffix)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        aligned_face_file = Path(self.arguments.input_aligned_dir) / Path(aligned_face_name)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# &lt;span class=&quot;hljs-doctag&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;TODO:&lt;/span&gt; Remove this temporary fix for backwards compatibility of filenames&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        bk_compat_aligned_face_name = &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;{}{}{}&#39;&lt;/span&gt;.format(Path(filename).stem, face_idx, Path(filename).suffix)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        bk_compat_aligned_face_file = Path(self.arguments.input_aligned_dir) / Path(bk_compat_aligned_face_name)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt; aligned_face_file &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.input_aligned_dir &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; bk_compat_aligned_face_file &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.input_aligned_dir&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;convert(self, converter, item)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;try&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            (filename, image, faces) = item&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            skip = self.check_skipframe(filename)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.arguments.discard_frames &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; skip:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;return&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; skip: &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# process frame as normal&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; idx, face &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; faces:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.input_aligned_dir &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;and&lt;/span&gt; self.check_skipface(filename, idx):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;print&lt;/span&gt; (&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;face {} for frame {} was deleted, skipping&#39;&lt;/span&gt;.format(idx, os.path.basename(filename)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;continue&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# Check for image rotations and rotate before mapping face&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; face.r != &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;0&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        height, width = image.shape[:&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;2&lt;/span&gt;]&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        image = rotate_image(image, face.r)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        image = converter.patch_image(image, face, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;128&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.arguments.trainer &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;128&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# &lt;span class=&quot;hljs-doctag&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;TODO:&lt;/span&gt; This switch between 64 and 128 is a hack for now. We should have a separate cli option for size&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        image = rotate_image(image, face.r * &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;-1&lt;/span&gt;, rotated_width=width, rotated_height=height)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        image = converter.patch_image(image, face, &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&quot;128&quot;&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; self.arguments.trainer &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;128&lt;/span&gt;)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                        &lt;span class=&quot;hljs-comment&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(128, 128, 128);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;# &lt;span class=&quot;hljs-doctag&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;TODO:&lt;/span&gt; This switch between 64 and 128 is a hack for now. We should have a separate cli option for size&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            output_file = get_folder(self.output_dir) / Path(filename).name&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            cv2.imwrite(str(output_file), image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;as&lt;/span&gt; e:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            print(&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;Failed to convert image: {}. Reason: {}&#39;&lt;/span&gt;.format(filename, e))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;    &lt;span class=&quot;hljs-function&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;span class=&quot;hljs-keyword&quot; style=&quot;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;hljs-title&quot; style=&quot;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;prepare_images(self)&lt;/span&gt;:&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        self.read_alignments()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        is_have_alignments = self.have_alignments()&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;        &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;for&lt;/span&gt; filename &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;in&lt;/span&gt; tqdm(self.read_directory()):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            image = cv2.imread(filename)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; is_have_alignments:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;if&lt;/span&gt; self.have_face(filename):&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    faces = self.get_faces_alignments(filename, image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    tqdm.write (&lt;span class=&quot;hljs-string&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(238, 220, 112);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&#39;no alignment found for {}, skipping&#39;&lt;/span&gt;.format(os.path.basename(filename)))&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                    &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;continue&lt;/span&gt;&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;else&lt;/span&gt;:&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;                faces = self.get_faces(image)&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;            &lt;span class=&quot;hljs-keyword&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(248, 35, 117);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;yield&lt;/span&gt; filename, image, faces&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; 当然我们也可以用 GAN 算法进行优化，那么让我们看一下使用 GAN 的模型。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.8325123152709359&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6viaBibCah6aLJuI7dODt1Dr4pFtvLdCamWKaZsKCOZBgM6lLUa55ybPA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;812&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt; (来源: shaoanlu/faceswap-GAN) &lt;/span&gt;&lt;/em&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如上图所示，我们首先扣取 A 的人脸，然后进行变形，之后经历编码和解码生成了重建的脸和 Mask。以下是我们的学习目标。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.1165191740412979&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6WYK19OOOKq0CcfTg3qIEH1oCSibwqwUuHtGHibHjC2z1ibAz1RzM1Yksg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;678&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt; (来源: shaoanlu/faceswap-GAN) &lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从图片到视频&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;基于我们 FFmpeg 的讲解，可以使用以下命令将一批图片合并为一个视频：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;pre style=&quot;margin-top: 0px;margin-bottom: 0px;padding: 0px;background-color: rgb(255, 255, 255);font-size: 16px;box-sizing: border-box;color: rgb(62, 62, 62);line-height: inherit;&quot;&gt;&lt;p style=&quot;margin-right: 2px;margin-left: 2px;padding: 0.5em;box-sizing: border-box;font-size: 14px;color: rgb(169, 183, 198);border-top-left-radius: 0px;border-top-right-radius: 0px;border-bottom-right-radius: 0px;border-bottom-left-radius: 0px;background-color: rgb(40, 43, 46);font-family: Consolas, Inconsolata, Courier, monospace;display: block;overflow-x: auto;letter-spacing: 0px;line-height: 1.75em;word-wrap: normal !important;word-break: normal !important;overflow-y: auto !important;&quot;&gt;ffmpeg  -f image2 -i imagename%&lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;04&lt;/span&gt;d.jpg -vcodec libx264 -crf &lt;span class=&quot;hljs-number&quot; style=&quot;box-sizing: border-box;font-size: inherit;color: rgb(174, 135, 250);line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;15&lt;/span&gt; -pix_fmt yuv420p output_filename.mp4&lt;br style=&quot;box-sizing: border-box;font-size: inherit;color: inherit;line-height: inherit;word-wrap: inherit !important;word-break: inherit !important;&quot;&gt;&lt;/p&gt;&lt;/pre&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果你希望新生成的视频有声音，那就可以在最后把有声音的视频中的声音拼接到你最后产生的目标视频上即可。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;云平台部署&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; 我们可以在 Google Cloud 中部署云平台。具体请看视频展示，我在这里展示几个关键步骤：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.0175&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6Oo3ia3us7VuhnWx3ickj3mR74MNYLe7dPu97KmbXZuU3EAX99vKkeL8w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;800&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt; (来源: How to Create DeepFakes with Google Cloud GPU Services)&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.1066098081023454&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6niaEV0LObXdHR2UNVfgshHh7ZicItnN39QaV2GK43FeibtTeQN150UG7w/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;469&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt; (来源: How to Create DeepFakes with Google Cloud GPU Services)&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9723991507430998&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6K3YlsbKrKEhz4FHn0w3Sma88icVBJV5lQJsKPRgiavmPuXtcBMhSsTyA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;471&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt; (来源: How to Create DeepFakes with Google Cloud GPU Services)&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt;&lt;br&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;1.1403508771929824&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6uRdy2Lx3aunUKbtTv9uXNCRNqcjSo7BxAOJQblCkXcewznicZKQVA1g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;456&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 12px;&quot;&gt;&lt;em&gt; (来源: How to Create DeepFakes with Google Cloud GPU Services) &lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;最后是我在 Google Cloud 上进行 Training 的一个截图。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.6441102756892231&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6CJhQdibo2v7I3WFORw1F1icCfrP9viag9Zpm4QB7t1PIJMI2lrE8HxWlQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;798&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;项目架构&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;最后让我们从高层理解一下整个 DeepFake 项目的架构。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;line-height: 1.75em;&quot;&gt;&lt;img class=&quot;&quot; data-ratio=&quot;0.9316239316239316&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6BwQJyZZ3PaDe7HGsPXFtbenjx5Er5zpXfG1FwDsA7qryXuaZwL7CGA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;819&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;社会影响&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们已经聊了 Deepfake 的原理，那么它到底有哪些真正的社会价值呢? 我们可以用任何人来拍摄一个电影，然后变成我们想要的任何人。我们可以 创建更加真实的虚拟人物。穿衣购物可以更加真人模拟。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;总结&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们用到了如下的技术栈、框架、平台：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Dlib：基于 C++的机器学习算法库 OpenCV:计算机视觉算法库 Keras:在底层机器学习框架之上的高级 API 架构 TensorFlow:Google 开源的机器学习算法框架 CUDA:Nvidia 提供的针对 GPU 加速的开发环境&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Google Cloud Platform:Google 提供的云计算服务平台 Virtualenv:创建独立的 Python 环境 FFmpeg:多媒体音视频处理开源库&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;现在就来上手，把你心爱的另一半的人脸搬上好莱坞吧。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;text-align: justify;white-space: normal;color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心发布，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;184270517&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-04-1000000681_503258144</guid>
<pubDate>Fri, 04 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>业界 | 谷歌、百度等联合发布机器学习新基准MLPerf，旨在促进AI发展和公众参与</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-04-1000000681_503258143.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYIcBR5AytnwjiVWaYHPFaZKUnMsirL*CvN9bXy1cc-KNF5g0NmDyeo9RLzOQmDNFslZQvFdS7kX9Cor1PxyH7qY=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    业界 | 谷歌、百度等联合发布机器学习新基准MLPerf，旨在促进AI发展和公众参与                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-04&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border: 0px currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;&quot;&gt;hpcwire&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;John Russell&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：刘晓坤、路&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 15px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=&quot;white-space: normal;&quot;&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;text-align: justify;color: rgb(136, 136, 136);font-size: 15px;&quot;&gt;昨日，来自学界和业界的多个组织（包括谷歌、百度、英特尔、AMD、哈佛和斯坦福）共同发布了新型基准 MLPerf，「用于衡量机器学习软硬件的速度」。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;长期以来，市场上的 AI 性能对比一直比较粗略，鱼龙混杂且通用性不足，难以作为参考，但 AI 基准之战即将开始。今天，来自学界和业界的多个组织（包括谷歌、百度、英特尔、AMD、哈佛和斯坦福）共同发布了新型基准 MLPerf，「用于衡量机器学习软硬件的速度」。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;上周，RiseML 发布博客，对比了谷歌的 TPUv2 和 Nvidia V100。今天，英特尔发布博客，展示了使用 RNN 执行机器翻译时选择软硬件的相关数据。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;很长时间以来，围绕对有意义的 AI 基准出现大量讨论，支持者认为此类工具的缺乏限制了 AI 的应用。MLPerf 发布公告引用了 AI 领域先驱吴恩达的话：「AI 正在改变多个行业，但是要想完全发挥其潜力，我们仍然需要更快的硬件和软件。」我们希望更好、更标准化的基准能够帮助 AI 技术开发者创造出此类产品，允许采用者做出明智的 AI 技术选择。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;MLPerf 称其主要目标是：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;通过公平、有用的度量来加速 ML 的进展；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;推动互相竞争的系统之间的公平对比，同时鼓励创新，以提升 ML 领域的当前最优水平；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;使基准测试可负担，所有人都可以参与其中；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;服务商业和研究社区；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;强制要求复现性，以确保结果的可靠性。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;AI 性能对比（h/w 和 s/w）目前主要由既得利益者发布，如英特尔近日的博客《Amazing Inference Performance with Intel Xeon Scalable Processors》。这并不是在针对英特尔。此类对比通常包含有用的见解，但是它们通常用于展示一方比另一方的优势。标准化基准可以缓解这一状况。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6951672862453532&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4etqt4RStgH3JIn29uia4uWOPKPv8c34rUO5GHLAtwvFkVcHiajibMVEfg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;269&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;MLPerf 在模拟之前的一些尝试，比如 SPEC（标准性能评估组织）。「SPEC 基准加速了通用计算方面的进步。SPEC 于 1988 年由多个计算公司联合成立。接下来的 15 年中 CPU 性能提升 1.6X/年。MLPerf 将之前基准的最佳实践结合起来：SPEC 使用的一套程序；SORT 的一个部门来做性能对比，另一个部门负责创新；DeepBench 覆盖产品中的软件部署；DAWNBench 的 time-to-accuracy 度量。」MLPerf 称。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Intersect360 Research 的 CEO Addison Snell 称：「现在那么多公司在发展 AI，提供基准测试的尝试具备极高的重要性，尤其是对于大量互相竞争的技术。但是，AI 领域非常多样化，我怀疑是否会出现主导的单一基准。想想五年前所有围绕大数据和分析学的热情；尽管每个人都尝试定义它，行业并没有提供一个统一、常用的基准。我认为 AI 领域也会是这种情况。」&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Hyperion Research 的高级研究副总裁 Steve Conway 称 MLPerf 是「很好、很有用的」一步，「因为多年来对于买方和卖方来说确实缺乏一个基准来展现不同 AI 产品和解决方案之间的区别。这个基准似乎是为了解决如今 AI 早期主要的受限问题（bounded problem）而创建的。之后随着 AI 开始出现未受限问题（unbounded problem，它们将是经济上最重要的问题），我们将需要额外的基准。受限问题相对简单，例如声音和图像识别或玩游戏等。未受限问题例如诊断癌症，其对应的受限问题可能是读取 MRI 图像；未受限问题能够在非常复杂的问题上推荐决策。」&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;MLPref 已经在 GitHub 上开源，但仍然处于非常早期的阶段，正如 MLPref 所强调的：「这次发布的更像是一个内部测试版，它仍可以从多个方面改进。该基准仍然在开发和精炼中，可以查看下方的 Suggestions 部分了解如何贡献该开源项目。我们期待在五月末能基于用户输入进行大幅更新。」&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;目前在 MLPerf 套装中的 7 个基准，每一个都有参考实现：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;图像分类—ResNet-50 v1（ImageNet）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;目标检测—Mask R-CNN（COCO）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;语音识别—DeepSpeech2（Librispeech）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;翻译—Transformer（WMT English—German）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;推荐—Neural Collaborative Filtering（MovieLens 20 Million (ml-20m)）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;情感分析—Seq-CNN（IMDB 数据集）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;强化学习—Mini-go（预测 pro 游戏中的移动）&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;每个参考实现提供了：至少在一个框架中实现模型的代码；可用于在一个容器内运行基准的 Dockerfile；下载合适数据集的脚本；运行模型训练和计时的脚本；数据集、模型和机器设置的相关文档。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这些基准已经在以下的机器配置上进行了测试：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;16 块 CPU、一块 Nvidia P100；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Ubuntu 16.04，包含 docker 和 Nvidia 支持；&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;600GB 硬盘（虽然很多基准不需要这么多硬盘空间）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;业界选择结合几个 AI 基准还是让基准数量激增是很有趣的现象。在这样一个年轻的市场，大部分人选择提供基准测试工具和服务。例如，斯坦福（MLPerf 成员）近日发布了它的第一个 DAWNBench v1 Deep Learning 结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;斯坦福报告称：「2018 年 4 月 20 日，我们发布了第一个衡量端到端性能的深度学习基准和竞赛，这些性能包括：在常见深度学习任务中达到当前最优准确率级别所需的时间/成本，以及在当前最优准确率级别上执行推断的延迟/成本。聚焦于端到端性能提供了标准化计算框架、硬件、优化算法、超参数设置和其它重要因素的区别的客观手段。」像 MLPerf 这样的项目可以在当前对比 AI 性能的时候，清除那些模糊不清的因素。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;text-align: justify;white-space: normal;color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;原文链接：https://www.hpcwire.com/2018/05/02/mlperf-will-new-machine-learning-benchmark-help-propel-ai-forward/&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;em&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;507291774&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-04-1000000681_503258143</guid>
<pubDate>Fri, 04 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>学界 | 牛津大学提出神经网络新训练法：用低秩结构增强网络压缩和对抗稳健性</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-04-1000000681_503258125.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYIcBR5AytnwjiVWaYHPFaZIQDTnj19B3sLu1znE4np6Ol0gmkirdbGVCZGpJv27Z8KZmkeO*xkg4GVobkAj2iug=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    学界 | 牛津大学提出神经网络新训练法：用低秩结构增强网络压缩和对抗稳健性                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-04&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border: 0px currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;选自&lt;span style=&quot;max-width: 100%;font-size: 14px;&quot;&gt;arXiv&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：&lt;/strong&gt;&lt;/span&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;Amartya Sanyal、Varun Kanade、Philip H.S. Torr&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;font-family: inherit;text-decoration: inherit;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心编译&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;参与：刘天赐、刘晓坤&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%;font-size: 14px;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=&quot;white-space: normal;&quot;&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 15px;&quot;&gt;和目前普遍的稀疏性诱导、结构化限制相似，神经网络的低秩结构也具有压缩的性质，并在对抗攻击中具备稳健性。在本文中，来自牛津大学计算科学部和阿兰图灵机构的研究者开发了一种新方法，通过在训练过程中引入修正，增强神经网络表征的低秩属性。&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;strong&gt;引言&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;深度（卷积）神经网络已经取得了许多重大成果，「表征学习」就是其中非常迷人的一个方面：深度网络能够从原始数据中生成可以用于多个任务的表征。有趣的是，从奠基性论文 Krizhevsky et al. (2012) 开始，人们发现，即使是在完全的监督学习体系下训练出的神经网络也具有这一性质。在其他和分类、检索、聚类（通常和原始的分类问题无关）等相关领域，人们利用这些学得的表征（即迁移学习）已经取得了巨大的成功（Kiros et al., 2014; Lin and Parikh, 2015）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从本质上讲，可以认为倒数第二层（或接近输出层的某一层）神经元的激活就是原始数据的一个习得表征（learned representation）（也就是希望从这张图像中希望得到的内容）。而最后一层神经元通常只是一个多类别 logistic 回归模型。在本文中，作者主要研究了 ResNet-18 和 ResNet-50（He et al., 2016），同时也部分包括 VGG 网络（Simonyan and Zisserman, 2014）上的研究结果。尽管近年来许多人广泛研究了神经网络架构的方方面面，但几乎没有关于如何理解这些表征本质的相关工作。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;本文研究了这些习得表征，主要探索了其（有效）维度问题。一个 ResNet-18/50 网络基本都是由 4 个 ResNet 块（block）组成（其中每个块又包含了多个卷积层和跳过连接）。我们探索的是第 3、第 4 个 ResNet 块末端激活的维度。在 ResNet-18 中，第 3 个 ResNet 块后的激活维度为 16384，第 4 个 ResNet 块后的激活维度则为 512。在 ResNet-50 中，作者只研究了最后一个 ResNet 块后的激活维度：为 2048。在实验中，每一个数据点 x 都映射为向量 a ∈ R^m，用 d 表示上述层（layer）中的激活数量；而向量 a 则是 x 的一个习得表征。实证研究（Oyallon, 2017）表明：给定类别，这些习得表征（近似）处于一个低秩（仿射）空间中。（Oyallon 2017 年的研究中，使用了另一个不同的卷积神经网络来处理图像分类问题）。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;作者对训练过程进行了修正，以保证激活可以（近似）处于一个低秩空间中；准确的说，他们在损失函数中加入了一项，以促使特定层的激活能够处于低秩仿射空间。使用修正后训练过程得到的结果准确率基本没有下降（在一些场景下甚至有少量提升），同时增强了习得特征的低秩属性。修正在模型中「加入」了一个虚拟的（virtual）低秩层，可以保证习得特征基本处于低秩空间中。在优化修正后的目标函数时，使用的是交替最小化方法，该想法类似于迭代硬阈值（Blumensath and Davies, 2009）或奇异值投影（Jain et al., 2010）中所使用的方法。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;考虑到朴素奇异值阈值方法会使得训练过程无法满足任何实际场景下的需要，作者采用了基于 Nystr¨om 方法（Williams and Seeger, 2001; Halko et al., 2011）的列采样方法，训练速度得到了显著的提升，但也使得没有得到最优的低秩映射。可以认为，修正后的训练过程能够防止神经网络出现过度参数化（over-parametrization），不过使用了和目前普遍的稀疏性诱导方法（如 Anwar et al. (2017); Wen et al. (2016)）以及结构化限制方法（Moczulski et al. (2015); Liu et al. (2015)）都不同的手段。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;最后，作者也探索了学习低秩表征的优点。其中一个明显的优点是在其它的应用场景中，低秩表征能够压缩嵌入：事实上，由于这些习得表征（近似）处于一个低维（仿射）空间中，它们本身就满足一种压缩框架。另外，我们研究了这种方式训练出的神经网络在对抗性攻击（Szegedy et al., 2013）下的稳健性。结果显示，相比于标准架构，这些神经网络基本上对由 GSM 方法（Gradient Sign Method）及其变体（Kurakin et al., 2016）生成的对抗性攻击有更好的稳健性。实证评估进一步表明，在使用习得表征（或其低秩投影）来训练 SVM 分类器时，利用修正方法训练得到的神经网络在使用习得表征低秩投影时，可以给出更准确的预测结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;3 LR-Layered 网络&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.45625&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUjba6BJ6eSKOESHCCkLaRGUWiaWhtVD4FYaF94OicrR1jOxFjpaNuSdYg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;960&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;4.1 模型性能没有下降&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.30641330166270786&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuULkNlb6qeeyj9ibnwxVribrWQtpumd0D19L6Pq4n1iaOmOfdejxropyAeg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;421&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;表 1：不同的 ResNet 模型在 CIFAR-10 上的测试准确率&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.19805825242718447&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuU83O6m20ZibK63g7HBLAibUxW44DS16ZDHmqkPyzxiawKaPR1l3c5qWLbQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;515&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;表 2：ResNet 模型在 CIFAR-100 上的测试准确率：包含原始结果和迁移到 Fine Label 后的结果&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;4.2 方差率捕获&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6184971098265896&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUvJISN6z2EictucD3XlKSmiaXZPURWxjnfG3Q75K9lS3M5FQWLrreHHng/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;519&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;图 1：倒数第二层上的方差率（Variance Ratio）&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6439393939393939&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUQzjb6rib2rXBtnEbWVQH14eKiaM6ajKicYo4sT4l0guZpiahZ5UCj4CxiaA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;528&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;图 2：第 4 个 ResNet 块前的层上的方差率&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;4.4 低维嵌入的有效性&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5491183879093199&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUHHuzL5Mtv2qYQ5c7mE3gljyDYz2FicjqOkSy5IrFmMiaqRaukvD1jafw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;397&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;表 3：低维嵌入准确率：利用 CIFAR-100 的超类训练 ResNet-50，在最后一个全连接层前的激活上生成低维嵌入&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: center;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5034168564920274&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUK71icXRSFQoU3OwpYUoAZcSwic6IH38oCibOmQ4twcFassE6KL6ia6oCNA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;439&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;表 4：低维嵌入准确率：利用 CIFAR-10 训练的 ResNet-18，利用最后一个 ResNet 块的嵌入生成低维嵌入&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;5 对抗攻击&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.38311688311688313&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUhnz2ne6zolvgUaF2tmfXtrotrS55M1tlHvaKBPR3ibf8gYo2bQxtJzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1078&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;图 5：上图展示了对抗性的误分类和扰动量级间的关系。（扰动量级使用归一化 L2 差异度量。其中 1-LR 和 2-LR 分别表示 ResNet18-1-LR 和 ResNet18-2-LR。LR-V 和 N-LR-V 分别对应低秩 VGG19 模型和标准 VGG19 模型）&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.38390092879256965&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUxHhUZ42zYocVqAnYBrFm2cD234Ae4HIichXyTpHY8ERnygEPnfzvsIg/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;969&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;图 6：CIFAR-100 超类标签的 PCA 图。左图展示了 ResNet-50 上训练的 LR 模型的嵌入结果，右图展示了标准的 ResNet-50 模型结果，两个模型使用了类似的训练方法。图中不同颜色表示不同类别。&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;论文：Low Rank Structure of Learned Representations（习得表征的低秩结构）&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.3263157894736842&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW94cJJdDiaIlvRZ5icSgSnSuUblcyia7IRiaL8obpq7GVKuQy6BepwfAbsbKdOBmIiaqicN33hdDPv3qwOA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;570&quot;&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(123, 12, 0);&quot;&gt;论文地址：https://arxiv.org/pdf/1804.07090.pdf&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;神经网络——尤其是深度卷积神经网络——有一个很重要的特征：它们能够从数据中学习出非常有用的表征，而最后一层神经元则只是在这些习得特征上训练的线性模型。虽然神经网络在其它诸如分类、检索、聚类等目标中得到了广泛使用（即迁移学习），但并没有足够的关于这些表征结构，或是否可以在训练过程中引入某些结构的相关研究结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;本文选择了一些在图像分类问题中表现很好的神经网络，并研究了其习得表征的维度。我们选取了 ResNet-18、ResNet-50 以及 VGG-19，并使用 CIFAR10/CIFAR100 数据集来训练模型；我们发现，这些模型的习得表征表现出了明显的低秩结构。在训练过程中，我们引入了一定的修正，以促进神经网络不同阶段激活的低秩表征。实证结果表明，低秩结构具有压缩的性质，在对抗样本问题中，也具有更高的稳健性。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心编译，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1130180387&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-04-1000000681_503258125</guid>
<pubDate>Fri, 04 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>专访 | 阿里巴巴「鹿班」算法技术负责人星瞳：用可控视觉生成引擎完成智能设计</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-04-1000000681_503258124.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYIcBR5AytnwjiVWaYHPFaZJ6ecD3A*BU6GznpL6fTl5UAIT50*yFpKvN6pHp7UB24c073qb1e-hFqmrBItxHuoI=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    专访 | 阿里巴巴「鹿班」算法技术负责人星瞳：用可控视觉生成引擎完成智能设计                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                        &lt;span id=&quot;copyright_logo&quot; class=&quot;rich_media_meta meta_original_tag&quot;&gt;原创&lt;/span&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-04&lt;/em&gt;

                                        &lt;em class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;邱陆陆&lt;/em&gt;
                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;section style=&quot;font-size: 16px;white-space: normal;max-width: 100%;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border: 0px currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心原创&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：邱陆陆&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%;font-size: 14px;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=&quot;white-space: normal;&quot;&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;&lt;span style=&quot;font-size: 15px;text-align: justify;&quot;&gt;在阿里巴巴，有一位接触设计不过两年时间，就从零开始做了 10 亿张海报，达到阿里巴巴 P5（中级） 设计师水平的传奇「人物」。它叫「鲁班」，是阿里巴巴神秘的智能设计系统。在第七届 UCAN 用户体验设计论坛上，「鲁班」正式以「鹿班」为名加入「阿里动物园」，对外开放核心能力，首批计划邀请一百名设计师。同时面向优秀设计师推出「驯鹿计划」，邀请 ta 们训练机器，完成有自己风格的设计。论坛期间，机器之心受邀访问了&lt;span style=&quot;caret-color: rgb(136, 136, 136);color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;智能设计系统技术负责人星瞳，在首批受邀设计师之前，一窥&lt;span style=&quot;caret-color: rgb(136, 136, 136);color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;如何看待设计，又如何进行设计的秘密。以下为采访实录。&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：首先，我们非常好奇，在&lt;span style=&quot;caret-color: rgb(136, 136, 136);color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;的眼里，设计由哪些部分组成？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;用 Photoshop 做过设计的人就会知道，一张图里有若干个图层，一个图层里有背景、另一个图层里有修饰、再一个图层里有商品等等。&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;也是这样，认为图是由基本元素组成的。每一个元素（或者像素集合）又可以有多个维度的描述，包括空间的（位置坐标 x、y、z，其中 z 指深度空间维度）、视觉的、内容的描述等。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;的「元素」体系是一个两层的树状结构，即不过分复杂，又能给元素一定的区分度。第一层把元素分成若干个大类，比如主体、文案、修饰、标识、背景等。第二层再对大类做细分，比如主体就可以分为商品、物体或者模特；文案分为主题文案、辅助文案、行动利益点等；修饰也有区域修饰、点状、线条、碎片修饰等等不一而足。除了分类外，每个元素也有「语义层」对其进行更详尽的描述，例如一个「商品主体」的色系、风格、适合场景等是什么。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果你展示给&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;一张成品设计图，&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;会对图片进行「设计结构化」，用分类和分割的方法，进行一个反向设计的过程，将图像还原成结构化、带有语义的元素集合。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.47555555555555556&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6iaPFGllibaDibL0v6dtTUxEnLhBJkEEic7bxTtLjbibxDmLxNB0icZGTSQog/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：为了生成一张设计图，&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;需要用户或者说设计师提供哪些输入？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;的定义是一个可控的视觉内容生成系统，这里的「可控」就指用户通过输入需求来描述对结果的视觉预期、对生成过程进行控制。从另一个角度讲，我们希望生成过程是一个可解释的过程，而不是一个黑盒。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;用户的需求可能会以多种形式出现，他可以用自然语言描述、可以给一张之前的图做示例、也可以画一个草图把想要的元素简单排列，即使用户什么都没有给出，&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;作为一个在线系统也能捕捉到一些上下文信息，例如设计是否用于某个特定的活动、有特定的主题之类的。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;得到上述四类用户输入之后，我们对这部分「数据」进行规范化与结构化，变成系统可以理解的「信息」标签，进行后续的处理。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.561849710982659&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ65kYAL206mxByCC4Jicicn6QzibqMuBqOMvK14g3Xbjiaqtd9lRHzuxrvzQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当然，用户输入信息并不是一个基于规则的固定系统，一方面，我们不希望信息输入是一个不自然的过程，所以用户可以选择输入的详细程度，而系统会对用户没有指定的部分进行自我补全与自我推荐；另一方面，我们也希望系统在以用户需求进行约束后，仍然能给出有灵活度和自由度的结果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;机器之心：系统能够接受的信息都有哪些种类？&lt;/span&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;大体上可以分为内容标签和视觉标签。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;视觉标签的典型例子有构图：是采用上下结构还是左右结构；色彩：整体的色调是红蓝还是黑白。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;内容标签则会描述风格：是清新、轻奢还是黑暗等；以及语义标签：例如「双十一」或者「三八妇女节」；虽然语义约束大多蕴含在图像中，但仍然可以以标签的形式提取出来。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：系统拿到标签，进行设计之后，输出给用户的是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;会根据用户需求，提供像素级别的成图，或者可以嵌入到各式 App 里面的、可用于后期渲染的结构化信息。这个过程被称为「数据可视化」。你可能会在手机淘宝的首页 Banner 上或者商品详情页里看到这张图，也可能在线下看到打印成海报的版本。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：设计的过程可以分为几部分？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;智能设计是一个理解设计、抽象设计、重构设计、增强设计（而不仅仅是拟合）的过程，需要满足高质且多样的要求，所以&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;的框架流程本身是一个非常复杂的过程。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;人类设计虽然千变万化，但其中仍然有一定规律可循。比如，平面设计可以被拆分为草图、细化、视觉、评估四个步骤，三维设计可以被分解成点云、mesh、贴图、渲染等。所以，我们的主系统可以被认为由四部分组成，分别是：规划器、行动器、构建器和评估器，辅以一些预处理和后处理过程。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;首先是规划器，规划器接受用户的约束后，以此为条件，序列化地生成一个粗略的草图。「序列化」是说，摆放元素是有先后顺序的。这个顺序可以是一个树状模型，也可以是一个二维或多维的有序过程，比如，可以先摆放第一个元素（图层），然后根据第一个元素优化第二个元素的摆放位置，然后根据前两个元素优化第三个元素的摆放位置，以期达到整体的协调一致。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;之所以选择在「元素级」而不是「像素级」进行序列化生成，是因为像素级的可选状态数量太多，且可选范围太大。图像「生成」的本质就是重复做两件事：选择像素的颜色（视觉角度），选择往哪摆（空间角度）。以一张 256 x 256 的图片的生成为例，像素级生成的每一步都相当于有超过 6 万个状态需要选择；如果采用 RGB 色彩模式，每一个状态有超过 1600 万种颜色 (256 x 256 x 256) 可以选择……这远远超过了语言、围棋等其他序列化优化问题的规模。因此「像素级」的生成会变得不可控。所以我们选择在「元素级」或者「超像素级」（像素级和元素级的中间态）进行生成。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5630057803468208&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6N13euZFxMo0sibGQpFiaLI4tppCDwHCiaIOYaWhKuduxpichX0xVPQl8xw/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;865&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：规划器需要规划的序列有多长？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;视用户需求而定。在用户的输入中有一类约束叫做「复杂度」。复杂度较低的设计可能有 8-10 种元素需要摆放，复杂度较高的设计可能有超过 50 种，当然，我们也会为序列设置上限，不会让它无限地生成下去。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：行动器的职责是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;行动器是把草图细化的过程。这里就和我们分层的元素体系挂钩了。例如色彩上，规划器约定了某一元素的色系是红，然而具体用到的红，是浅红、深红还是紫红，就是在行动器部分决定的。而在空间上，行动器就就好比把一个 64 x 64 规模的草图，变成 256 x 256 级别的精细构图。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们用两个思路处理细化问题：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;第一个是用多智能体强化学习（Multi-agent Reinforcement Learning）来把细化问题变成一个组合优化的过程。我们用了数以千计的智能体，每个智能体在色彩、空间等方面都有若干个受限的动作（Action，此时受限是为了保持生成的可控性）。此时，单个动作的好坏是没有意义的，只有多个智能体结合起来得到一个较好的效果，我们才认为获得了一个较优的状态。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;因为强化学习和监督学习不一样，没有明确的标签可以进行分类。我们倾向于让智能体在行动中不断拟合设计师已经做好的优质作品的构图。然而构图是由复杂的元素及其性质组成的，因此我们计算每个智能体和最终的智能体之间在各个指标上的「距离」，再通过一些求和方法，得到最终指导智能体继续行动的方向。这一部分我们和 UCL 汪军教授团队进行了紧密的合作，取得了一些成果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;另一个思路是用生成对抗网络（GAN）的思路来解细化问题。我们希望理解设计，然后把优质作品中关于色系、空间布局、风格的内容抽象出来，进行重构与增强。然而生成不等于复制，我们不希望得到千篇一律的或者和样本类似的设计。因此我们在每个中间环节加入一些变化因子，使最后的结果既满足那些从原有设计中抽象出来的逻辑，还添加了一些新的变化。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.8577291381668947&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6OAuelA88fuBC3sgp9xHu8O5icYs6ddc01vl9icEb8gcu5tgcdoTwkCLQ/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;731&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：「优质作品」的来源有哪些？「优质作品」中蕴含的设计师的理念又如何传递给行动器？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;优质作品的来源主要有二。第一，我们有许多合作方，例如我们会和&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;的共同发起方、阿里巴巴 UED 团队的设计师有紧密的合作关系。第二，我们也会利用阿里和淘宝的平台优势，找到效果出色的设计作品，进行抽象和理解。第三，我们也会和外部素材资源方进行合作。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;优质作品的理念抽象无外乎三种，一种是人的知识的抽象，设计师把长期积累的经验以知识图谱的形式表现出来；一种是数据里隐含的理念，一幅好作品可能说明不了什么问题，但如果成千上万的好作品组成一个数据集，那么其中自然而然地蕴含了一些共性；还有一种则是在线上规模化使用过程中，有实际效果的设计。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：构建器进行了哪些工作？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;构建器负责把细化过的结构草图变成像素级别的成图。其中涉及两个部分：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;第一是要把尺寸统一的结构草图按照需求做成尺寸千差万别的成图。假设草图是 256 x 256 的，但是成图需要一张 1000 x 800 的，还需要一张 200 x 400 的。实现「多尺寸」最重要的是找到合适的元素，我们用了元素库检索、迁移和生成三种方式来覆盖用户千变万化的需求。获得元素后在进行渲染、组合、贴图等。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.5538641686182669&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6NXcBB3icciaC7AoEFtgz2r0J8QpELd4cViahEyrnwlWXQ031MZFf9VryA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1708&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：最后由评估器对像素级的成图进行评估？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;是的。规划器、行动器和构建器一起生成了数十张图，其中真正会呈现给用户的可能只有「最好」的一张或两张。此时，对众多成图进行打分的就是评估器。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;评估器也用了非常复杂的函数，从视觉、内容等角度衡量成图的效果。例如在视觉角度，评估器要衡量元素间颜色是否相搭、元素间空间是否存在遮挡；在内容角度，要让商品和装饰相匹配，文字和商品相匹配。除此之外，我们也和合作方一起，搭建了一些美学角度的考量。在对多个角度进行评判后，我们根据成图的综合得分进行排序，决定是否反馈给用户。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.39666666666666667&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ662dbEQicFqJAWn1SXWOhnUetkylib7lrcTVPygoAnLwHtcYVVlnQGWoA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;900&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：评估器的衡量内容和之前三者存在一定程度的重合，原因是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;有两个方面原因。第一是研究与实践之间的差距。规划器与行动器设计得再精妙，最后生成的成图彼此之间仍然会存在质量上的差距。因此我们用评估器去确保「可控生成」是真正的「可控」。第二是「满足设计感要求」和「投放效果好」之间的差距。即使一张图满足了设计上的需求，也不保证能获得好的投放效果，因此要在生成之后进行效果的预估。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机器之心：能否请您概括一下，&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;智能设计系统能如何帮助设计师完成工作？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;设计师进行设计需要花费大量的时间，&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;可以完成设计师较难满足的实时在线需求以及「千人千面」、「千货千面」或者「千场千面」的差异化需求。另外，设计师在进行设计时大多很难接触到真实的场景，很难获得个人设计作品的「点击、成交、转化」等历史反馈信息。因此，人类设计师更多从美学、视觉的层面上思考，而很难从产品、效果层面进行思考，这是&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;通过评估器中的针对效果的评估而获得的优势。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;机&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;器之心：在最后，能否请您从算法的角度总结一下&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;中的不同模块中蕴含的 AI 能力，并介绍一下&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;未来的「进化」方向？&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;color: rgb(136, 136, 136);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;星瞳：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;span style=&quot;caret-color: rgb(136, 136, 136);font-size: 15px;text-align: justify;&quot;&gt;鹿班&lt;/span&gt;可以说是各种 AI 技术的集中使用者，因其理解视觉，方可生成视觉。总体来说有五个方面：&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul class=&quot; list-paddingleft-2&quot; style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;首先是分类问题。系统要在「设计结构化」阶段分类成图，也要在「数据可视化」阶段分类元素。这些分类问题又包含多个层级。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;然后是检测和分割问题。系统要从成图中检测目标主体并进行分割。&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;第三是序列模型。规划器的主体就是一个序列模型。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;第四是强化学习，强化学习除了用于上述提到的行动器之外，还用于对训练数据进行数据扩增（data augmentation）。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;第五是各类对抗生成网络（GAN）技术，尤其是 conditional GAN 及照片级别 GAN 技术。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当然还有一些比较基础的技术，如特征表达、多维索引搜索等。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;现在的系统是一个非常复杂的系统，我们希望在未来可以引入一些「端到端」的思想，在不损失可控性和可解释性的情况下，对一些模块进行融合。我们也很关注学界里不同种类的对抗生成网络的进展，包括如何将对抗生成网络与强化学习结合起来。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;此外，在设计知识图谱这一领域，我们希望与外界合作，做得更加完善和灵活。设计水平是很难衡量的，我们希望在此做出一些探索和改进，更好地量化生成效果。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从产品的角度来讲，从平面设计扩展到 3D 设计，从静态图扩展到动态图，从单张影像到视频等，对于设计师来说都是成本高而相对收益低的工作。因此我们希望智能设计也能完成形式更新颖的设计，并且做到高效高质、普惠低成本。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;所思即所见是我们的愿景，目前我们还只是刚刚在路上，希望有更多同仁加入进来，把视觉生成这个领域做大做强。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;text-align: justify;white-space: normal;color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心原创，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(123, 12, 0);&quot;&gt;点击阅读原文，申请加入鹿班首批内测或成为「驯鹿师」。&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1767522803&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;a class=&quot;media_tool_meta meta_primary&quot; id=&quot;js_view_source&quot; href=&quot;##&quot;&gt;阅读原文&lt;/a&gt;
                                &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                &lt;a class=&quot;media_tool_meta meta_primary&quot; href=&quot;http://luban.aliyun.com&quot; target=&quot;_blank&quot;&gt;阅读原文&lt;/a&gt;
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author>邱陆陆</author>
<guid isPermaLink="false">2018-05-04-1000000681_503258124</guid>
<pubDate>Fri, 04 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>CMU机器学习系主任Manuela Veloso加入摩根大通，华尔街金融巨头的AI投资</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-04-1000000681.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYIcBR5AytnwjiVWaYHPFaZICS0eA8kftJKKXPuQgJGavGpzSaIrUwpupMmc1CJ*6Kr0xEgnOzyOZk2EVKp3qLQU=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    CMU机器学习系主任Manuela Veloso加入摩根大通，华尔街金融巨头的AI投资                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-04&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;white-space: normal;max-width: 100%;background-color: rgb(255, 255, 255);line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border: 0px currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;color: rgb(62, 62, 62);font-size: 16px;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;机器之心报道&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color:#888888;&quot;&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;&lt;strong&gt;机器之心编辑部&lt;/strong&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;span style=&quot;max-width: 100%;font-size: 14px;color: rgb(136, 136, 136);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;blockquote style=&quot;white-space: normal;&quot;&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 14px;color: rgb(136, 136, 136);&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;span style=&quot;font-size: 15px;text-align: justify;&quot;&gt;2017 年 5 月份，前微软人工智能首席科学家、IEEE Fellow &lt;a href=&quot;http://mp.weixin.qq.com/s?__biz=MzA3MzI4MjgzMw==&amp;amp;mid=2650726773&amp;amp;idx=1&amp;amp;sn=ef78bc1245f154f57af9f393a3235cf2&amp;amp;chksm=871b250bb06cac1d9345d344aaf6689c5157eb97a91b0427c906643a1501145a8c188c872892&amp;amp;scene=21#wechat_redirect&quot; target=&quot;_blank&quot;&gt;邓力离职&lt;/a&gt;，加盟华尔街对冲基金公司 Citadel。今日，又有一人工智能专家加入金融巨头：CMU 机器学习系主任 Manuela Veloso 加入摩根大通，担任人工智能研究院负责人。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.56282722513089&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gW8PqYht7hfBnsoZYDianOgj411rgLWpFr72cE2Wn5JrscKpiaAKna97hjDaMBYdcsX11JCMUR9fTfUg/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;764&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;摩根大通今日宣布卡耐基梅隆大学机器学习系主任 Manuela Veloso 博士加入摩根大通，担任人工智能研究院负责人。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;此举正值金融业巨头竞相使用 AI 技术之际。AI 可被于欺诈检测和贷款审批等服务，提高内部运营效率。摩根大通已经在其业务中广泛应用机器学习技术。AI 已经是摩根大通 108 亿年度技术预算的一部分，其中超过一半的预算用于新投资。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;密歇根大学计算机科学教授、为 USAA 等金融公司开发人工智能解决方案的 Clinc 公司 CEO Jason Mars 表示：「这些机构中的很多高层都已经开始重视人工智能和流程管理，这是一项应该大量投资的工作。」&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;摩根大通联席总裁及 Corporate &amp;amp; Investment Bank 总裁 Daniel Pinto 在股东信中说道：「我们组建了一支才华横溢的团队以推动人工智能、区块链技术、大数据、机器学习和机器人的创新，我们的目标是提高效率，为更多的顾客提供更高效、深层、精细化的服务。」「不投资的银行将会失去优势，其后的追赶过程将会漫长而艰难。」&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;他补充说，招聘人才是这一使命的一部分。「在未来 5 到 10 年的时间里，技术创新的步伐只会加快，因为人工智能、机器人、机器学习、分布式账本技术和大数据都将塑造我们的未来。」&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: left;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;J.P.Morgan 近期关于 AI 技术应用的研究报告中指出，AI 的概念已经出现了超过 50 年，但现在才是 AI 技术应用的关键点。由于大数据、高性能计算和高级算法的涌现，AI 技术得以借助更快、更低的成本实现。可以在这里查看该报告的 summary：https://www.jpmorgan.com/global/research/machine-learning。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;关于 Manuela Veloso&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;Veloso 于 2014 年开始担任卡内基梅隆大学教授，并被该大学授予最高学术荣誉，同时也是 Herbert A. Simon Chair 荣誉获得者。她曾被中科院邀请担任爱因斯坦讲座教授。此外，她还是 AAAI、RoboCup 联盟的前任主席，AAAI、IEEE、美国计算机协会和美国科学促进协会的 fellow。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如下为 Google Scholar 展示的论文引用量，Manuela M. Veloso 从 14 年开始每年都有近 2000 的引用量。此外，她在机器人与演示学习领域有非常优秀的研究成果，例如引用量最高的一篇论文就是 2009 年关于演示学习（Learning from Demonstration）的综述与调查。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.36398467432950193&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8PqYht7hfBnsoZYDianOgj4P0r5TsiaQicmebAJ5549iauLEibR6jmSatIyxjAjez9gM0V4H1qCB5I7HA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;783&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;随着深度学习的流行，Manuela M. Veloso 也做了很多这方面的研究。在最近的一篇关于 CNN 的论文中，Manuela 等研究者通过理解网络的结构与穿过各层级的信息流来分析深度网络最后的输出，并借此理解深度网络实现分类的过程。她还独立进行了很多关于贝叶斯的前沿研究，包括深度网络中的先验信息与最大后验推断方法等。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从 Manuela 教授的研究主题可知，她对机器人领域做了非常多的贡献。从早期关于多智能体与机器人路径规划问题的研究，到现在利用深度模型和半监督学习等先进技术实现机器人的目标搜索、路径规划以及协作等任务。Manuela 利用这些不同的模块能同时构建足球机器人、服务机器人和问答智能体等多种智能体。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; width=&quot;48px&quot; style=&quot;text-align: justify;white-space: normal;color: rgb(62, 62, 62);font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;font-size: 16px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心报道，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;white-space: normal;max-width: 100%;min-height: 1em;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;708613954&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-04-1000000681</guid>
<pubDate>Fri, 04 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>独家 | 优必选宣布完成8.2亿美元C轮融资, 估值50亿美元后，我们专访了CEO周剑</title>
<link>https://henix.github.io/feeds/weixin.sogou.almosthuman2014/2018-05-03-1000000680_503258110.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s?timestamp=1525562678&amp;amp;src=3&amp;amp;ver=1&amp;amp;signature=vjMEYLZJ8j1dqkHALQiihjA8Lee0oYtz3O9ltSBQBj-hktTn*3paat8RG2Ivp4tz0B1-FQ9*Rnjpfs-SOk1PYDYo2hyoKfCUpaQF2ofEkE11eArEtoipPv7ayQNfzlVwgRriuUQ5sRLiTh4U-mppSNrcytJBIK2ywyENuiPvIqA=&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;rich_media_inner&quot;&gt;
                        
        
        &lt;div id=&quot;page-content&quot; class=&quot;rich_media_area_primary&quot;&gt;
            
                        &lt;div id=&quot;img-content&quot;&gt;
                
                &lt;h2 class=&quot;rich_media_title&quot; id=&quot;activity-name&quot;&gt;
                    独家 | 优必选宣布完成8.2亿美元C轮融资, 估值50亿美元后，我们专访了CEO周剑                                    &lt;/h2&gt;
                &lt;div id=&quot;meta_content&quot; class=&quot;rich_media_meta_list&quot;&gt;
                                                            &lt;em id=&quot;post-date&quot; class=&quot;rich_media_meta rich_media_meta_text&quot;&gt;2018-05-03&lt;/em&gt;

                                        &lt;a class=&quot;rich_media_meta rich_media_meta_link rich_media_meta_nickname&quot; href=&quot;##&quot; id=&quot;post-user&quot;&gt;机器之心&lt;/a&gt;
                    &lt;span class=&quot;rich_media_meta rich_media_meta_text rich_media_meta_nickname&quot;&gt;机器之心&lt;/span&gt;


                    &lt;div id=&quot;js_profile_qrcode&quot; class=&quot;profile_container&quot; style=&quot;display:none;&quot;&gt;
                        &lt;div class=&quot;profile_inner&quot;&gt;
                            &lt;strong class=&quot;profile_nickname&quot;&gt;机器之心&lt;/strong&gt;
                            &lt;img class=&quot;profile_avatar&quot; id=&quot;js_profile_qrcode_img&quot; src=&quot;&quot; alt=&quot;&quot;&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;微信号&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;almosthuman2014&lt;/span&gt;
                            &lt;/p&gt;

                            &lt;p class=&quot;profile_meta&quot;&gt;
                            &lt;label class=&quot;profile_meta_label&quot;&gt;功能介绍&lt;/label&gt;
                            &lt;span class=&quot;profile_meta_value&quot;&gt;专业的人工智能媒体和产业服务平台&lt;/span&gt;
                            &lt;/p&gt;
                            
                        &lt;/div&gt;
                        &lt;span class=&quot;profile_arrow_wrp&quot; id=&quot;js_profile_arrow_wrp&quot;&gt;
                            &lt;i class=&quot;profile_arrow arrow_out&quot;&gt;&lt;/i&gt;
                            &lt;i class=&quot;profile_arrow arrow_in&quot;&gt;&lt;/i&gt;
                        &lt;/span&gt;
                    &lt;/div&gt;
                &lt;/div&gt;
                                
                
                
                
                                                
                                                                
                
                &lt;div class=&quot;rich_media_content &quot; id=&quot;js_content&quot;&gt;
                    

                    

                    
                    
                    &lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;section style=&quot;max-width: 100%;caret-color: rgb(62, 62, 62);font-size: 16px;white-space: normal;line-height: 28.4444px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section data-id=&quot;85660&quot; data-custom=&quot;rgb(117, 117, 118)&quot; data-color=&quot;rgb(117, 117, 118)&quot; style=&quot;max-width: 100%;border: 0px currentcolor;font-family: 微软雅黑;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;section style=&quot;margin-top: 2em;padding-top: 0.5em;padding-bottom: 0.5em;max-width: 100%;border-style: solid none;font-family: inherit;text-decoration: inherit;border-top-color: rgb(204, 204, 204);border-bottom-color: rgb(204, 204, 204);border-top-width: 1px;border-bottom-width: 1px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;margin-top: -1.2em;max-width: 100%;min-height: 1em;text-align: center;line-height: 1.75em;border: currentcolor;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;color: rgb(255, 255, 255);background-color: rgb(117, 117, 118);&quot;&gt;机器之心原创&lt;/span&gt;&lt;/p&gt;&lt;section data-style=&quot;white-space: normal; text-align: left;font-size: 14px;line-height: 1.5em; color: rgb(12, 12, 12);&quot; style=&quot;color: rgb(62, 62, 62);background-color: rgb(255, 255, 255);padding: 16px 16px 10px;max-width: 100%;font-family: inherit;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;text-align: center;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(136, 136, 136);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;作者：宇多田&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;/section&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);font-size: 16px;white-space: normal;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;今日，机器人独角兽优必选（UBTECH）宣布完成 8.2 亿美元 C 轮融资，估值 50 亿美元。这个融资数额刷新了全球 AI 领域的单轮融资记录。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;根据优必选公开的融资信息显示，本轮融资由腾讯领投，工商银行、海尔、民生证券、澳洲电信（Telstra）、居然之家、泰国正大集团、民生银行、宜信集团、中广核、铁投集团、松禾资本等跟投。此外，优必选 B 轮领投方鼎晖资本也追加投资。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;很明显，此轮重要融资方都是可以为优必选产品提供大量应用场景的行业巨头。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;其中，腾讯与优必选的联合，充分利用了地缘优势。而前者的 AI 技术基础研发实力与后者的制造生产实力的高度融合，可以为机器人市场注入新一轮创新血液。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;早在 2017 年 12 月，优必选就与腾讯的 AI 平台之一云小微发布了智能教育娱乐人形机器人 Qrobot Alpha；2018 年 2 月，公司又与腾讯系的另一个 AI 平台（语音助手）——叮当推出个性化智能教育机器人 Alpha Ebot。在 C 轮融资后，作为腾讯投资的人工智能与人形机器人企业，优必选和腾讯除了会在产品层面进行深度合作，未来双方还将继续深化在 AI 领域的合作，围绕着人形机器人这一智能终端共同打造服务与内容生态。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;优必选的产品线非常多样化，遍布娱乐、教育、商用、家庭服务等多个细分领域。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;img data-copyright=&quot;0&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6Bic8afnwHrnvmqCJibApv4kJCtPTEYl6VpcicowouCiaGUA9LtBHIQ2upg/640?wx_fmt=png&quot; data-type=&quot;png&quot; style=&quot;&quot; class=&quot;&quot; data-ratio=&quot;0.4222222222222222&quot; data-w=&quot;1080&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;除了市场成熟度较高的消费级人形机器人 Alpha 系列、STEM 教育智能编程机器人 Jimu，以及与迪士尼合作的第一军团冲锋队员机器人，优必选也在 2017 年 1 月的 CES 首次推出面向企业市场的智能云平台商用服务机器人 Cruzr，正式进入企业级市场。另外，优必选双足机器人 Walker 在 2018 年的 CES 上首次亮相。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.6359375&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6gMYoicw4Y5uTqZpmrdNvbRZGJUsZYAicEXMBkwnCMkpRwjjh12zBkn0g/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;1280&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;em&gt;&lt;span style=&quot;font-size: 12px;&quot;&gt;服务机器人 Cruzr&lt;/span&gt;&lt;/em&gt;&lt;/span&gt;&lt;br&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;优必选最大的优势一直被行业所熟知——在人形机器人伺服舵机与步态运动控制算法的技术研发领域建立了很高的技术壁垒。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;更通俗一点说，与市面上大多数「脑袋+圆桶身躯」的机器人产品相比，优必选在机器人的关节与身体结构的制造工艺上下了很大的功夫。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;舵机可以说是机器人必备零配件。机器人有关节，而关节需要活动，而活动需要控制系统执行指令。而舵机，就是解决这系列问题的关键（当然除了舵机，也要有好的控制系统）。不过，由于成本与技术壁垒，让国产舵机一直对日本、韩国等掌握核心技术国家的优质同类产品望尘莫及。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;而优必选认为，自己已经全面掌握了平价伺服舵机的量产能力。譬如深圳工厂的伺服舵机月产量可以达到 60 万-100 万个，而每个舵机的单价只有市场的几十分之一。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;此外，优必选成立之初就建立的全球化销售战略，为其贡献了不少销售额。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;目前，根据官方资料显示，优必选的产品在中国、北美、欧洲、东南亚等 40 个以上的国家和地区销售，全球零售终端超过 7000 家。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;同时，公司还与多家全球商业巨头达成战略合作。2016 年，优必选的 Jimu 机器人进入全球近 500 家 Apple Store 零售店；2016 年 10 月，优必选与曼城足球俱乐部达成战略合作关系；2017 年，优必选与亚马逊合作推出内置亚马逊语音助理 Alexa 的人形机器人 Lynx；2017 年 10 月，优必选与迪士尼联合发布了第一军团冲锋队员机器人。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;img class=&quot;&quot; data-copyright=&quot;0&quot; data-ratio=&quot;0.75&quot; data-s=&quot;300,640&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_jpg/KmXPKA19gWicVWUrYsq7Zz3Wk9ZIFZqQ6HMfmuGlFEfFO2HP5PuN08ribrXO3hotPjaQhEEofiavx24blSsq5Pqfw/640?wx_fmt=jpeg&quot; data-type=&quot;jpeg&quot; data-w=&quot;800&quot; style=&quot;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;根据优必选的战略规划，他们下一步将加速双足人形机器人的研发进程，推出平台级商业化产品：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2018 年，优必选将致力于大扭矩舵机商业化，加快机器人操作系统 ROSA 的研发；&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2019 年，实现服务机器人 Home AI 技术应用落地；&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2020 年，推出机器人云服务平台及新一代的低成本的大型仿人服务机器人； &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;2021 年，服务机器人 Home AI 技术应用领先，推出核心硬件舵机+操作系统 ROSA+云服务平台的服务机器人行业整体解决方案，进一步确立优必选全球人工智能服务机器人领导地位。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在融资发布后的第一时间，我们独家采访了优必选创始人兼 CEO 周剑，他向我们详细阐述了优必选能够获得如此巨额融资的主要原因以及公司正在面对的机遇与挑战。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;(采访内容以对话形式呈现)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：优必选这一次是战略融资吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;对，优必选 C 轮融资是战略融资，我们主要是跟一些战略合作方以及战略投资方达成协议，基本上财务投资方会比较少，主要是战略为主。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：这一次的融资方看中的是优必选的哪些能力？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;：他们看中的是优必选整个在人形机器人研发，包括在全球市场的地位，以及我们未来的市场潜力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;因为我们还是始终坚持把机器人作为一个未来家庭的成员来看待。我们在技术上也有很多布局，他们觉得我们目前在全球 的销售规模，服务还有技术布局上，都占据了一个比较重要的位置。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：投资方对优必选未来的商业化方向是否会有一些要求？他们可以为优必选提供怎样的应用场景？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;他们觉得我们还是应该坚持目前的布局，包括教育，娱乐以及服务机器人等几个方向。同时，他们在商业上跟我们有一些对接的地方，比如说像工商银行，他们在未来智慧银行的打造方面需要机器人来替代人工。我们的机器视觉等 AI 技术，他们都希望能够引入。我觉得他们都会有一些机器人商业落地的要求。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;另外像我们之前的一些客户，居然之家、泰国正大集团也投资了我们，居然之家此前被阿里投了 70 亿元，做线下新零售，还有泰国正大集团和海尔也都是零售巨头，在这些零售场景我们的机器人产品都会进驻。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;还有全球 500 强企业澳洲电信（Telstra），他们线下的一些零售店我们也进驻了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;腾讯也一样，腾讯未来有非常多的 IP 以及技术将与我们结合，譬如在语音领域就跟我们有具体的合作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;所以说我觉得这次投资方覆盖面比较广，太多垂直场景有商业化机会。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：优必选将怎么用这笔钱呢？会投入在哪些环节？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从全球来看讲，据我们了解，如果是真正的融资，而不是债权或者股权抵押的方式，这应该是非常大的一笔融资了。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;优必选 C 轮融资将主要用于四个方面：&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;首先第是人才的布局，因为现在 AI 人才越来越贵，包括未来我们会收购一些团队，引进一些海外人才，这部分可能是一个重点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;今年我们的人才引入力度将非常大，譬如不久前日本著名的发明家，Robi 机器人之父高桥智隆（Tomotaka Takahashi）也加入了优必选，出任首席产品官。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;其次是市场及品牌拓展方面，优必选将进一步加快全球化的市场布局，并进一步提升公司在全球的品牌影响力。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;另外在收购层面，我们可能会展开一些并购或收购计划。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;最后，研发方面，优必选未来将加大对大型人形机器人的投入，并深入人形机器人驱动伺服、步态运动控制算法、计算机视觉等领域的研发。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：您之前在接受采访的时候受 2017 年要可以达到 15 亿的销售目标，这个数字应该超过了对吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答: &lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;优必选有上市计划，公司正在做审计调整，目前销售数据不方便透露。2018 年优必选的销售额计划突破 20 亿人民币。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：这样来看，从 2016 年到现在，优必选销售额增长迅猛的原因是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我觉得有几点。首先，优必选比较务实，我们会把目前机器人的伺服舵机技术运用到各个产品线上，包括我们的优必选 Alpha 系列，以及编程 Jimu 机器人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;此外，我们拓宽了包括 To B 产品在内的一些销售渠道，像 Cruzr 机器人。每一条产品线都在发力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;截止目前，每一条产品线的销售额都达到了比较不错的成绩，我觉得这个可能就是一个发展比较迅猛的原因。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;其次是销售，我们在创立之初就面向全球市场，不光在中国销售，很大一部分销售额是海外贡献的。你可以看到在全球我们销售门店已经达到 7000 了，包括北美的 Apple Store 零售店，北美以及欧洲的一些大型连锁商超都在销售我们的机器。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：在这个扩展海外市场的这个过程中，团队有没有遇到过一些困难，或者说你们觉得在拓展海外市场过程中最大的挑战是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;：主要还是来自文化方面的挑战。在海外市场，组建海外团队过程中，我们都是尽可能雇佣当地的人才，但文化之间的确是会有一些冲突。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;包括产品的包装设计、销售及市场人员对产品的理解度，以及各个地方市场的诉求，都存在很大的观念差异。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;作为一家中国公司，如果创立之初立足于国内再走出去的话，会遇到非常多不自然不舒服的地方。但是如果像我们一开始便布局全球市场，组建国际化团队，相对来讲这方面的磨合就会少一些。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我认为一家创业公司如果未来希望能够做全球市场，尽可能一上来就具备全球化的市场意识，而不是一直等到在国内做好再走出去。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问: 在优必选开拓的几个细分市场中，您觉得现在哪一个细分市场对销售额贡献最大？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在销售方面，优必选目前的几条产品线基本上齐头并进，如果一定要说哪两条产品线最好，我觉得一个是我们的 STME 教育智能编程机器人 Jimu。另外是我们的服务机器人 Cruzr。用机器人取代人力是个趋势，很多商家愿意去尝试了，所以我们的拓展计划也会加快。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：最近感觉积木机器人的发展趋势挺迅猛的，包括小米在内的很多公司都推出了积木智能玩具。您怎么看这个细分市场？这个的门槛是不是比较低？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;如果只是推出一些简单的智能积木产品，可能并不是一件困难的事情。但你看小米的机器人里面完全没有伺服舵机这个部分，它基本上采用了直流马达。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;此外我就觉得这个细分市场的门槛不单纯是硬件，还包含了这个积木机器人本身带有的课程师资，教材教程等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这个市场其实还有很多细节需要考虑，我觉得并不是一个公司不 all in 进去就能做好，所以说我觉得这个市场还是有一定的门槛。到目前我看到积木型机器人产品，除了优必选，很少有人用到伺服舵机这个技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;这种机器人用到伺服舵机的地方非常多。譬如你要编程，真正的编程就需要用到伺服舵机，你需要精确的角度进行控制力反馈，而传统的直流马达没有办法转向，没法去调整机器人做一些精确的动作，这就是伺服舵机最重要的优势。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：优必选进入 To B 市场其实并不算早，能否介绍一下产品在 To B 市场的发展情况？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们的智能云平台商用服务机器人 Cruzr，主要是面向银行、商超以及机场等公共场所。除了居然之家买了 2000 多台之外，我们的很多机器人目前也在昆明、广州、深圳的机场里做一些接待服务咨询引导的工作。另外我们今年也会大力拓宽银行这一渠道。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当然，2018 年我们还会陆续推出更多的服务机器人产品线，除了已经形成 To C 与 To B 的布局之外，我们还会推出一些包括安防反恐类的机器人，今年我们已经拿到了一些订单了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：是安防机器人？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;确切地说是反恐机器人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：我们在优必选公开的所有专利信息里，看到了关于一些安防机器人的专利，包括外观和软件。这类机器人市场前景您觉得怎么样？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;：这种机器人属于特种机器人，但是对我们公司来讲都属于 To B 的一类。我觉得未来随着对公共场所的安全要求越来越高，如果未来国际形势动荡加剧，再加上文化的冲突，用机器人来替代人力去做巡逻以及安防，是一个必然的趋势。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;所以对我们来讲，优必选已经感觉到了这块市场的潜力很大，因为除了中国之外全球还有很多国家，所以今年我们也会在这个领域发力。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;客户主要以军队和政府为主，当然也有一些大的保安公司，另外，政府的公共区域也会有这个需求，包括银行。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：这类安防机器人相比那些机场及商超里的服务机器人，在设计和工艺上有什么不同？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;区别还是比较大的。因为机器人会在野外执行任务，在硬件方面的要求会更高；此外它的电池续航能力也会要求更高。定位导航，人脸检测，身份识别，物体目标检测等技术，都必不可少。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;所以我们会完全根据每个客户，每个地方政府及军队的具体需求去打造。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：目前优必选的销售模式是什么，在线上线下有哪些销售渠道？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们的销售模式以线下为主，目前的消费级机器人还是一个重体验的产品。今年开始优必选会在国内联合更多的代理商开设自己的旗舰店。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;在全球我们的计划是，在纽约、伦敦、巴黎、东京、上海、深圳等一线城市，开更多超级全球旗舰店。第一个旗舰店选址应该会在深圳。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;此外，我们在海外的 To C 端销售渠道，主要是 Sam&#39;s Club、Walmart、Media Markt、Costco、SOURCE、Best Buy、BARNES&amp;amp;NOBLE、Target、苹果、亚马逊等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问: 我一直比较好奇，优必选机器人身上哪一部分是最贵的？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;目前就机器人来讲，尤其是运动型的机器人，最重要的还是它的关节，就是我们讲的伺服舵机这个系统。按成本来说，这个伺服舵机占了机器人的整体的 40%-50%。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;color: rgb(136, 136, 136);font-size: 15px;&quot;&gt;问：那软件方面，比如说像机器人的（AI）大脑可能会占成本的多少？&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;AI 部分的成本其实主要是人力和研发费用。控制系统的芯片、电池以及基层动力系统也比较费钱的，软件部分的成本不是最高，但是它的投入研发要求比较高，包括视觉、语音技术等等。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：很多消费者吐槽，目前的机器人产品其实比较简陋，很多都是一个屏幕，加一个很大的圆柱身子。我在想，在这个市场要有多大程度的技术优势，才能跟其他厂商区分开？难道只是靠像伺服舵机这种控制关节吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;首先伺服舵机本身就是一个比较难的技术壁垒。尤其是大扭矩伺服舵机，在全球来讲都是机器人产业里一个很大的难题。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;可以看到伺服舵机在我们 Alpha、Jimu 机器人上都是很小的。像 12 公斤，14 公斤，16 公斤的这种小型的伺服舵机，其实出现的时间很长 了，但真正的难度是如何从研发进入到商业化量产阶段。在这个方面，优必选在全球算是第一家。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;而大扭矩的伺服舵机，就正用在优必选人形机器人 walker 脚踝那个关节上。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;大型伺服舵机的价格成本非常贵，而且效果不稳定，优必选的目标是把这个东西做得更加稳定，能够商业化。现在一台的成本我们已经降到几千块钱，其实这就是一个非常大的技术门槛了。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当然这只是硬件优势，此外就是有了机器人这个平台后，如何赋予它更好的运动控制，包括我们提到的步态算法，这也是相当困难的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;目前市面上大部分机器人就直接就跳过这一块了，根本不去考虑运动性，直接就是一个蛋型的身体外加一个屏幕，然后再加一个某公司批量出售的语音交互系统，就称之为机器人，我觉得这是不太理想的，没有核心的东西在里面。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：那像波士顿动力狗，「大脑」可以很灵活地控制四肢。与他们相比，优必选现在的产品是否可以实现机载计算机灵活控制躯体移动？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;：这个可能牵涉到一个机器视觉手眼协调的问题，首先，波士顿动力运动的关节和驱动系统就跟我们不一样。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;它用的是液压技术，液压的力量非常大。虽然弹跳什么看起来效果非常好，但这种液压技术很难在家庭里面使用，更多适用于国防和军用，譬如在阿富汗山区驮东西，打仗这种可能比较适合。那如果进了家里面，你想那么大一块液压的机器，还是油压的，很难维护，同时力量非常大，对家庭来说是非常不安全的，商用的潜力不大。所以谷歌后来把波士顿动力卖给了软银。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;从 AI 大脑的部分看，如果一个机器人平台做得越好，它的算法就越简单，也就是相对来讲越方便，可以更好地去完成它的动作指令。&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我认为波士顿动力的所有东西总体来讲还是提前编辑好了，它并不是自主的大脑行为，所以我觉得 AI 行业目前整体还处于一个弱的阶段，其实手眼协调对机器来讲还是比较困难的，还需要很多年的发展。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：目前优必选机器人的手臂关节以及控制模块，很多都是自主研发的。那么有哪些部分是需要或者不得不由第三方供应商提供的？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答: &lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我认为机器人分为三大部分，一个是关节以及躯干，第二块就是这个躯干上的运动能力，第三个就是大脑 AI。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;躯干、关节以及运动算法都是优必选自己做的，同时「大脑」中的机器视觉技术也是我们优必选自己做。而目前来讲，腾讯和讯飞他们在做语音，ASR、TTS 等领域，我们可能就跟他们一起合作。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;未来在自然语言理解，自然语言处理方面，我们也在布局，但也可能跟其他第三方会有些合作。但优必选主要做的三大核心就是硬件（关节）、再加这个运动控制算法和机器视觉。AI 的分支很多，我们主要做视觉这一块。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;当然，芯片我们也在布局。我之前说过，我们在投资和招聘一些团队，然后投资一些芯片方面的团队。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问: 目前优必选量产机器人的工厂有几个，都在哪里？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们有两个工厂。第一个工厂在深圳本部，主要是做我们伺服舵机核心的零部件。同时我们在做 Jimu 和 Alpha 人形机器人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;另外优必选去年投产了昆明的一个工厂，主要做 To B 的机器人，包括今年一些关于安防的新产品，都会在昆明工厂生产。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;我们的工厂人并不多，两边加在一起大概 200-300 个工人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;主要是因为昆明工厂实现了自动化生产，由机器人来生产服务人类的机器人。这是我们很早就有的想法——以后不需要用人来生产机器人，因为由人来生产机器人我觉得这蛮本末倒置的，机器人就应该是服务人的。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：目前这两个工厂的产能怎么样？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;昆明的工厂目前是年产大概能达到 3 万台 To B 的 Cruzr 机器人。深圳的工厂我们可以月产大概 60 万-100 万个舵机，以及超过 10 万套 Jimu 机器人，1~2 万套 Alpha 人形系列机器人。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：技术研发人员与工厂联系密切吗？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;非常密切，特别是新产品下线的时候，两方会频繁在一起交流。这方面我们很有优势，公司总部和工厂都在深圳。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：那在软硬件耦合过程中遇到的挑战有哪些？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;的确，目前这个行业还处在比较弱的阶段，在紧密结合硬件与 AI 技术和运动控制的过程中，我们遇到了非常多的问题，基本上是一直在摸索着去解决问题。譬如我听美国团队曾讲过在与亚马逊 Alexa 语音做整合的时候，会有一些不兼容的情况，但问题不是很大。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：那您觉得现在目前机器人市场最大的阻力是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;首先，AI 人工智能目前处于一个比较弱的阶段，并没有大家想象中那么强，老百姓对这个人工智能期待会比较高，这导致了预期与产品到手感受到的实际情况有一个很大的落差。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;第二个就是，在垂直场景落地过程中，比如教育这一块，其实很多老百姓还不理解编程机器人到底是什么东西，因此我觉得市场是需要时间来教育的。某种意义上我觉得可能这个阻力会比较大一点。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;总体来说，当技术突破到一定程度，随着逐渐形成刚需，我觉得这个市场自然而然就会被接受。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;color: rgb(136, 136, 136);&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;问：在今年（2018 年）优必选在销售及市场拓展方面设立的目标是什么？&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;答：&lt;/span&gt;&lt;/strong&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;销售方面，优必选 2018 年的目标是超过 20 亿人民币。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;其次我们要打造优必选的生态，什么意思呢？我们要把客户距离与 To C 产品的距离拉得更近。因为很多消费者刚开始对我们产品的期待很高，但是目前 人工智能阶段技术不一定能满足。所以说我们让消费者提出他们自己的需求，我们利用现有技术去满足消费者，与消费者形成更多互动，搭建一个互动平台，这个是我们的第二个战略目标。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;另外，今年我们计划成立更多的联合实验室，包括与海外的一些著名高校进行合作，开发更多机器视觉以及手眼协调这方面的技术。&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: justify;line-height: 1.75em;&quot;&gt;&lt;span style=&quot;font-size: 15px;&quot;&gt;最后是品牌推广，这是一个长期的事情，但我们觉得今年也到了一个需要开始着重品牌推广的年度了。&lt;img class=&quot;&quot; data-ratio=&quot;0.3287671232876712&quot; src=&quot;https://mmbiz.qpic.cn/mmbiz_png/KmXPKA19gW8Zfpicd40EribGuaFicDBCRH6IOu1Rnc4T3W3J1wE0j6kQ6GorRSgicib0fmNrj3yzlokup2jia9Z0YVeA/640?wx_fmt=png&quot; data-type=&quot;png&quot; data-w=&quot;73&quot; style=&quot;caret-color: rgb(62, 62, 62);color: rgb(62, 62, 62);text-align: justify;white-space: normal;font-size: 14px;background-color: rgb(255, 255, 255);box-sizing: border-box !important;word-wrap: break-word !important;visibility: visible !important;width: 48px !important;&quot; width=&quot;48px&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;text-align: justify;line-height: 25.6px;font-family: 微软雅黑;font-size: 14px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;color: rgb(62, 62, 62);line-height: 25.6px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;本文为机器之心原创，&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;转载请联系本公众号获得授权&lt;/span&gt;&lt;/strong&gt;&lt;/span&gt;&lt;/strong&gt;。&lt;/span&gt;&lt;/strong&gt;&lt;br style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;font-size: 18px;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(127, 127, 127);line-height: 25.6px;font-family: 微软雅黑;text-align: justify;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;✄------------------------------------------------&lt;/span&gt;&lt;/p&gt;&lt;p style=&quot;margin-bottom: 5px;max-width: 100%;min-height: 1em;font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;加入机器之心（全职记者/实习生）：hr@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;color: rgb(217, 33, 66);line-height: 1.6;font-size: 12px;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;投稿或寻求报道：editor@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p style=&quot;max-width: 100%;min-height: 1em;font-size: 18px;font-family: 微软雅黑;text-align: center;line-height: 1.75em;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;strong style=&quot;max-width: 100%;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;&lt;span style=&quot;max-width: 100%;font-size: 12px;color: rgb(217, 33, 66);line-height: 1.6;box-sizing: border-box !important;word-wrap: break-word !important;&quot;&gt;广告&amp;amp;商务合作：bd@jiqizhixin.com&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;/div&gt;
                &lt;script nonce=&quot;1884993523&quot; type=&quot;text/javascript&quot;&gt;
                    var first_sceen__time = (+new Date());

                    if (&quot;&quot; == 1 &amp;&amp; document.getElementById(&#39;js_content&#39;)) {
                        document.getElementById(&#39;js_content&#39;).addEventListener(&quot;selectstart&quot;,function(e){ e.preventDefault(); });
                    }

                    
                    (function(){
                        if (navigator.userAgent.indexOf(&quot;WindowsWechat&quot;) != -1){
                            var link = document.createElement(&#39;link&#39;);
                            var head = document.getElementsByTagName(&#39;head&#39;)[0];
                            link.rel = &#39;stylesheet&#39;;
                            link.type = &#39;text/css&#39;;
                            link.href = &quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/style/page/appmsg/page_mp_article_improve_winwx3d171e.css&quot;;
                            head.appendChild(link);
                        }
                    })();
                &lt;/script&gt;
                
                
                                &lt;a class=&quot;original_tool_area&quot; id=&quot;copyright_info&quot; href=&quot;##&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;内容转载自公众号&lt;/p&gt;
                    &lt;div class=&quot;flex_cell original_cell&quot;&gt;
                        &lt;div class=&quot;flex_cell_hd&quot;&gt;
                            &lt;span class=&quot;radius_avatar&quot;&gt;
                                                                &lt;img class=&quot;avatar&quot; src=&quot;http://wx.qlogo.cn/mmhead/Q3auHgzwzM4dHbXFnIwHHqx6M764xYA2qiabVPUaCrqLqTAIkUkUialw/0&quot; alt=&quot;机器之能&quot;&gt;
                                                            &lt;/span&gt;
                        &lt;/div&gt;
                        &lt;div class=&quot;flex_cell_bd flex_cell_primary&quot;&gt;
                            机器之能
                        &lt;/div&gt;
                        &lt;div class=&quot;flex_cell_ft icon_access&quot;&gt;了解更多&lt;/div&gt;
                    &lt;/div&gt;
                &lt;/a&gt;
                                
                &lt;div class=&quot;ct_mpda_wrp&quot; id=&quot;js_sponsor_ad_area&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;

                
                                &lt;div class=&quot;reward_area tc&quot; id=&quot;js_preview_reward&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p id=&quot;js_preview_reward_wording&quot; class=&quot;tips_global reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;p&gt;
                        &lt;a class=&quot;reward_access&quot; id=&quot;js_preview_reward_link&quot; href=&quot;##&quot;&gt;&lt;span class=&quot;icon-reward&quot;&gt;&lt;/span&gt;赞赏&lt;/a&gt;

                    &lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&quot;reward_qrcode_area reward_area tc&quot; id=&quot;js_preview_reward_qrcode&quot; style=&quot;display:none;&quot;&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;长按二维码向我转账&lt;/p&gt;
                    &lt;p id=&quot;js_preview_reward_ios_wording&quot; class=&quot;reward_tips&quot; style=&quot;display:none;&quot;&gt;&lt;/p&gt;
                    &lt;span class=&quot;reward_qrcode_img_wrp&quot;&gt;&lt;img class=&quot;reward_qrcode_img&quot; src=&quot;//res.wx.qq.com/mmbizwap/zh_CN/htmledition/images/pic/appmsg/pic_reward_qrcode.2x3534dd.png&quot;&gt;&lt;/span&gt;
                    &lt;p class=&quot;tips_global&quot;&gt;受苹果公司新规定影响，微信 iOS 版的赞赏功能被关闭，可通过二维码转账支持公众号。&lt;/p&gt;
                &lt;/div&gt;
                            &lt;/div&gt;
                        
            &lt;ul id=&quot;js_hotspot_area&quot; class=&quot;article_extend_area&quot;&gt;&lt;/ul&gt;


            
                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_toobar3&quot;&gt;
                
                                
                                            &lt;div id=&quot;js_read_area3&quot; class=&quot;media_tool_meta tips_global meta_primary&quot; style=&quot;display:none;&quot;&gt;阅读 &lt;span id=&quot;readNum3&quot;&gt;&lt;/span&gt;&lt;/div&gt;

                &lt;span style=&quot;display:none;&quot; class=&quot;media_tool_meta meta_primary tips_global meta_praise&quot; id=&quot;like3&quot;&gt;
                    &lt;i class=&quot;icon_praise_gray&quot;&gt;&lt;/i&gt;&lt;span class=&quot;praise_num&quot; id=&quot;likeNum3&quot;&gt;&lt;/span&gt;
                &lt;/span&gt;

                &lt;a id=&quot;js_report_article3&quot; style=&quot;display:none;&quot; class=&quot;media_tool_meta tips_global meta_extra&quot; href=&quot;##&quot;&gt;投诉&lt;/a&gt;

            &lt;/div&gt;


                        &lt;div class=&quot;rich_media_tool&quot; id=&quot;js_sg_bar&quot;&gt;
                
                                
                                
            &lt;/div&gt;
                    &lt;/div&gt;

        &lt;div class=&quot;rich_media_area_primary sougou&quot; id=&quot;sg_tj&quot; style=&quot;display:none&quot;&gt;&lt;/div&gt;

        
        &lt;div class=&quot;rich_media_area_extra&quot;&gt;

            
                        &lt;div class=&quot;mpda_bottom_container&quot; id=&quot;js_bottom_ad_area&quot;&gt;&lt;/div&gt;
                        
            &lt;div id=&quot;js_iframetest&quot; style=&quot;display:none;&quot;&gt;&lt;/div&gt;
                        
                        
            &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_friend_cmt_area&quot; style=&quot;display:none&quot;&gt;
              
              
              
            &lt;/div&gt;

                        &lt;div class=&quot;rich_media_extra rich_media_extra_discuss&quot; id=&quot;js_cmt_area&quot; style=&quot;display:none&quot;&gt;
            &lt;/div&gt;
                    &lt;/div&gt;

        
        &lt;div id=&quot;js_pc_qr_code&quot; class=&quot;qr_code_pc_outer&quot; style=&quot;display:none;&quot;&gt;
            &lt;div class=&quot;qr_code_pc_inner&quot;&gt;
                &lt;div class=&quot;qr_code_pc&quot;&gt;
                    &lt;img id=&quot;js_pc_qr_code_img&quot; class=&quot;qr_code_pc_img&quot;&gt;
                    &lt;p&gt;微信扫一扫&lt;br&gt;关注该公众号&lt;/p&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;</description>
<author></author>
<guid isPermaLink="false">2018-05-03-1000000680_503258110</guid>
<pubDate>Thu, 03 May 2018 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
