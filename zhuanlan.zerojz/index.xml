<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>DivisionByZero</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/</link>
<description></description>
<language>zh-cn</language>
<lastBuildDate>Fri, 23 Feb 2018 16:53:10 +0800</lastBuildDate>
<item>
<title>“大炮打蚊子”计划</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2018-02-20-33885192.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33885192&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这两天被一个（几个）问题频繁刷屏：&lt;/p&gt;&lt;a href=&quot;https://www.zhihu.com/question/267243881/answer/322218895&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;80/v2-25acd2a5e77238f42d57befa245cbd45&quot; data-image-width=&quot;710&quot; data-image-height=&quot;246&quot; data-image-size=&quot;180x120&quot;&gt;知乎现在还有哪些值得关注的科普输出？&lt;/a&gt;&lt;a href=&quot;https://www.zhihu.com/question/267117521&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot;&gt;知乎现在还有哪些值得关注的学术输出？&lt;/a&gt;&lt;p&gt;其实很多有才的答主不写回答，不是他们不愿意写（知乎Latex难用其实占了一部分因素），更多是没有任何“值得”回答的问题，每天去数学话题下翻翻，多少作业题，多少“小学生”问题，多少“日经”题，多少根本数学上不make sense的问题……&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;而真正能写出好回答的问题，往往只能是很general的问题，比如之前看到的一个回答：&lt;/p&gt;&lt;a href=&quot;https://www.zhihu.com/question/36464952/answer/315059174&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;80/v2-5b2c73e420adcf7ce807e3b122dc12d1&quot; data-image-width=&quot;367&quot; data-image-height=&quot;255&quot; data-image-size=&quot;180x120&quot;&gt;有哪些看起来很简单但做起来很难的数学题？&lt;/a&gt;&lt;p&gt;（当然关于这题的详细解释，有人写了Quora翻译，详见&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33853851&quot;&gt;这里&lt;/a&gt; ）&lt;/p&gt;&lt;p&gt;Turns out 这个回答和这片专栏文章吸引了很多目光。我就有了如下的想法：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;对于普罗大众的数学科普其实是很困难的，所以我们何不换个思路：多给有志于从事数学学习/研究的学生们（初中生/高中生/大学生/数学爱好者）进行一些科普&lt;/li&gt;&lt;li&gt;其实很多有意思的数学现象，背后是有一套现代数学的原理的。比如上面这个看似“简单的”数学方程，就来源于椭圆曲线。而椭圆曲线这种东西，对于数学“内部人士”可能习以为常，对于没有学习过相关理论的人来说，觉得“高大上”可是完全不懂。&lt;/li&gt;&lt;li&gt;结合1和2，我们是不是可以通过一些“高端”数学的”基础“应用来科普一些数学理论，这样也能激发一些爱好数学的人能更有动力去学习更近一步的数学。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;比如👆上面这个回答，其实就可以把问题抛在这儿，然后写一篇（或者几篇）文章详细解释一下椭圆曲线的最最最最最最基础的概念定义和性质，然后通过一些“厉害”的定理，降维打击给出这个问题的答案/计算方法/计算原理。这也就是大家常说&lt;b&gt;的“大炮打&lt;/b&gt;蚊子”。&lt;/p&gt;&lt;p&gt;当然上面栗子中的问题真的不算是个蚊子，其实是个伪装成蚊子的怪物，没有椭圆曲线的大炮，真的很难很难很难很难……杀死的。但是我的意思因该是清楚的，有很多理论是可以specialize到一些基础的应用上的，虽然这种specialization对于真正研究/学习这个理论的人来说是很trivial的。但是作为敲门砖、lead-in，用来吸（you）引（guai）门外的人，确是非常有效。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;所以我就想要启动这么一个“大炮打蚊子”的计划，希望很多有兴趣有时间有能力写这样的&lt;b&gt;中文&lt;/b&gt;文章的大大们能一起来写点东西。暂时的设想就是首先抛出一个“初等”的问题/现象，然后可以介绍“高端”的数学理论，最后落脚到如何用“高端”数学（大炮）解决“初等”问题（蚊子）。&lt;/p&gt;&lt;p&gt;当然这里的”初等“和”高端“都是相对概念，”初等“可以是初中生/高中生就能看懂的问题，也可以是（不同方向的）博士生能看懂的问题；”高端“既可以是research-level的理论，也可以是well-developed的可以写进（或者已经写进）教科书的理论。一个trivial的（用烂了的）栗子比如说通过计算图形面积/通过速度计算路程来科普（微）积分。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;目前的想法还很naive，可能有大大想来写但是会有很多疑问，我其实也不能保证能解答。我的想法是比如拉一个slack群，大家一起吧这个idea完善，然后一起来写作。包括我自己最近也很忙，未必能管理得来这个群和整个计划，所以可以搞个committee？Anyway，万事皆可商量。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Slack 群：&lt;/p&gt;&lt;a href=&quot;https://join.slack.com/t/mathisfunwritingplan/shared_invite/enQtMzE3NDQ1NjgyNjQzLTEyZDk1MjY5NWJlMzY5YjI3MjkzOTVlN2I5NDdjMjY1NGRjY2MwNGMyYjUyZjJiZWRjMTExMzk0OWM5MjYwNGY&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot;&gt;https://join.slack.com/t/mathisfunwritingplan/shared_invite/enQtMzE3NDQ1NjgyNjQzLTEyZDk1MjY5NWJlMzY5YjI3MjkzOTVlN2I5NDdjMjY1NGRjY2MwNGMyYjUyZjJiZWRjMTExMzk0OWM5MjYwNGY&lt;/a&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2018-02-20-33885192</guid>
<pubDate>Tue, 20 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>[4068] 闲谈世上最难的逻辑问题 2</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2016-12-16-24401988.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/24401988&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
Review：上次我们谈到，通过把一个statement &lt;equation&gt;Q&lt;/equation&gt;包装成&lt;equation&gt;P(Q)&lt;/equation&gt;再问God，就可以得到对&lt;equation&gt;Q&lt;/equation&gt;的正确判断，所以True和False神已经某种意义上都变成True神了。本来Random神也会在抛完硬币之后变成它们中的一个，所以也是某种意义上的True神，但是在Random神决定再也不当它们中的任何一个后，它就彻底不提供任何信息量了。那我们该怎么办呢？&lt;p&gt;注意：以下所有提问，均指用&lt;equation&gt;P&lt;/equation&gt;函数包装过后再提问，就是当我们说提问&lt;equation&gt;Q&lt;/equation&gt;的时候，实际上我们在问&lt;equation&gt;P(Q)&lt;/equation&gt;。&lt;br&gt;&lt;/p&gt;&lt;p&gt;我们把三个神标注成A、B、C，考虑问A神这样一个statement：“B是Random神”，会发生什么？&lt;/p&gt;&lt;p&gt;思考ing&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;思考ing&lt;br&gt;&lt;/p&gt;&lt;p&gt;公布答案：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;假如A是T/F神，B不是R神，那么A会告诉你：false&lt;/li&gt;&lt;li&gt;假如A是T/F神，B是R神，那么A会告诉你：true&lt;/li&gt;&lt;li&gt;假如A是R神，那么A会告诉你：false 或者 true&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;有人说，这有啥用啊？true和false都会出现，你还是啥都不知道啊&lt;/p&gt;&lt;p&gt;且慢，让我们仔细分析一下：&lt;/p&gt;&lt;p&gt;假如答案是true，那么只可能是&lt;/p&gt;&lt;ul&gt;&lt;li&gt;A是R神&lt;br&gt;&lt;/li&gt;&lt;li&gt;A是T/F神，B是R神&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;p&gt;无论哪种情况下，C神都不是R神！同理假如答案是false，那么可以得出B神一定不是R神！&lt;/p&gt;&lt;p&gt;所以无论怎样，你都可以确定某一位不是R神，接下来，只要对那位不是R神的神问两问题：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;谁是R神&lt;br&gt;&lt;/li&gt;&lt;li&gt;你是什么神&lt;br&gt;&lt;/li&gt;&lt;/ol&gt;&lt;br&gt;&lt;p&gt;就可以了。（具体怎么问 大家可以思考一下）&lt;/p&gt;&lt;br&gt;&lt;p&gt;更变态的版本：我们看到，上面的解决方案依赖两点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;你不能只问一个神&lt;br&gt;&lt;/li&gt;&lt;li&gt;你可以问同一个神两个问题&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;p&gt;那就自然想到，能不能给这些东西加上限制：&lt;/p&gt;&lt;p&gt;首先想到的限制是：能不能只提问一个神？而这个限制显然是不可能的，因为运气不好可能正好抽到只提问R神，那么无论你怎么发问都无法得出任何有效信息，此题无解。&lt;/p&gt;&lt;p&gt;那么第二个可能的限制是：能不能强制要求依次提问三个神（也即每次必须询问不同的神）？我们几个的naive想法是：不行，因为第一个问题只能确定0.5个神的身份（也即是其中一个神不是R神）。接下来我们必须利用这个神不是R神这一点来拷问得到所有信息。假如必须依次提问，可能出现两种情况：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;先问R神，再问T／F神，最后问F／T神。&lt;/li&gt;&lt;li&gt;先问T／F神，再问F／T神，最后问到了R神。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;第一种情况自然皆大欢喜，你从一个本来不能获得任何信息的R神那里获得了信息，所以绝对是可以完成任务的。但是第二种情况就有点无解了，最后一个问题没有办法给出更多的信息了。&lt;/p&gt;&lt;p&gt;一个具体的🌰如：A是T神，B是F神，C是R神。我们先问了A：B是R神吗？得到false回答，于是确定B不是R神，接下来问B：C是R神吗？（或者A是R神吗？），得到回答可以让我们确定C是R神，A和B是T／F神。但是最后一个问题要问C，而这种情况下我们是没有办法获得对A和B的信息。&lt;/p&gt;&lt;p&gt;大家也可以思考一下，说不定还是可以解的。&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2016-12-16-24401988</guid>
<pubDate>Fri, 16 Dec 2016 00:00:00 +0800</pubDate>
</item>
<item>
<title>[4068] 闲谈世上最难的逻辑问题</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2016-12-14-24358375.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/24358375&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
首先声明这并不是一片朋友圈文章，标题中的“世上最难”不是我说的，是wikipedia说的（见&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Hardest_Logic_Puzzle_Ever&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;The Hardest Logic Puzzle Ever&quot;&gt;The Hardest Logic Puzzle Ever&lt;/a&gt;）。&lt;p&gt;故事的开始是苦逼的博士狗们一起赶作业，然后&lt;a href=&quot;https://www.zhihu.com/people/75a2edc58ed3e8fd89df5ecf7f8f872d&quot; data-hash=&quot;75a2edc58ed3e8fd89df5ecf7f8f872d&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@尘锐案&quot; data-hovercard=&quot;p$b$75a2edc58ed3e8fd89df5ecf7f8f872d&quot;&gt;@尘锐案&lt;/a&gt; 突然就把这个东西搬了出来，然后大家瞬间两眼放光，纷纷抛弃了作业……当然主要的讨论都是&lt;a href=&quot;https://www.zhihu.com/people/055e67cff14ec9b20cceccf5649052e3&quot; data-hash=&quot;055e67cff14ec9b20cceccf5649052e3&quot; class=&quot;member_mention&quot; data-title=&quot;@Y. Huang&quot; data-editable=&quot;true&quot; data-hovercard=&quot;p$b$055e67cff14ec9b20cceccf5649052e3&quot;&gt;@Y. Huang&lt;/a&gt; 和&lt;a href=&quot;https://www.zhihu.com/people/75a2edc58ed3e8fd89df5ecf7f8f872d&quot; data-hash=&quot;75a2edc58ed3e8fd89df5ecf7f8f872d&quot; class=&quot;member_mention&quot; data-editable=&quot;true&quot; data-title=&quot;@尘锐案&quot; data-hovercard=&quot;p$b$75a2edc58ed3e8fd89df5ecf7f8f872d&quot;&gt;@尘锐案&lt;/a&gt; 进行的，我只是听懂并且理解了他们的做法，不过实在是很有意思，所以记录一下：&lt;/p&gt;&lt;h2&gt;1.问题&lt;/h2&gt;&lt;p&gt;问题的是这样的：世上存在三个神，分别是True，False和Random。其中&lt;/p&gt;&lt;ul&gt;&lt;li&gt;T神只说真话&lt;/li&gt;&lt;li&gt;F神只说假话&lt;/li&gt;&lt;li&gt;R神每次在听完问题后，抛一枚硬币来决定说真话还是说假话&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;它们现在就在你面前，但是你不知道哪个神是哪个神。你有三次机会来试探，每次机会你可以说出一个Statement，并找其中一位神来给出判断（true/false）。 神总是能听懂你的语言，并给出按照它设定的回答，但是它会用自己的语言来回答，它会回答X或Y。你知道其中一个代表true，另一个代表false，但是并不知道哪个代表哪个。&lt;/p&gt;&lt;p&gt;问题来了：你能在用完三次机会后，判断出三位神各自的身份吗？&lt;/p&gt;&lt;br&gt;&lt;p&gt;下面是答案👇&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;u&gt;先仔细考虑之后，再看答案！&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;br&gt;&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;/p&gt;&lt;p&gt;下面是答案👇&lt;/p&gt;&lt;h2&gt;2.答案&lt;/h2&gt;&lt;p&gt;答案是：可以。&lt;/p&gt;&lt;br&gt;&lt;p&gt;甚至我们可以做到更强：每次都可以随机问一个神（In particular，可以做到每次都问同一个神，或者依次问完所有神）&lt;br&gt;&lt;/p&gt;&lt;p&gt;事实上，我们有如下定理&lt;/p&gt;&lt;p&gt;定理：对于任意一个Statement &lt;equation&gt;Q&lt;/equation&gt;，存在一个Statement&lt;equation&gt;P(Q)&lt;/equation&gt;，使得任意一位神对&lt;equation&gt;P(Q)&lt;/equation&gt;给出的判断，在我们自己给定的翻译下，都是对&lt;equation&gt;Q&lt;/equation&gt;正确的判断。&lt;/p&gt;&lt;p&gt;而这个&lt;equation&gt;P(Q)&lt;/equation&gt;的存在性，是我们反推出来的。当时的情况是：&lt;a href=&quot;https://www.zhihu.com/people/055e67cff14ec9b20cceccf5649052e3&quot; data-hash=&quot;055e67cff14ec9b20cceccf5649052e3&quot; class=&quot;member_mention&quot; data-title=&quot;@Y. Huang&quot; data-editable=&quot;true&quot; data-hovercard=&quot;p$b$055e67cff14ec9b20cceccf5649052e3&quot;&gt;@Y. Huang&lt;/a&gt;不知道从哪里知道了有这个定理，于是我(ta)们(yi)一(ge)起(ren)把这个&lt;equation&gt;P(Q)&lt;/equation&gt;推导了出来。&lt;/p&gt;&lt;p&gt;事实上，考虑如下的一个图：&lt;equation&gt;Q\rightarrow P(Q)\rightarrow^{\text{God}} \{X,Y\}\rightarrow^I \{T,F\}&lt;/equation&gt;。这里，God箭头表示神给出了判断，&lt;equation&gt;I&lt;/equation&gt;是我们自己对神的语言的解释，我们希望最后这个复合函数给出了&lt;equation&gt;Q&lt;/equation&gt;的判断，也就是说，我们希望如下的复合是一个恒等映射&lt;/p&gt;&lt;equation&gt;\{T,F\}\rightarrow^P \{T,F\}\rightarrow^{\text{God}} \{X,Y\}\rightarrow^I \{T,F\}&lt;/equation&gt;&lt;p&gt;所以我们有&lt;equation&gt;I\circ \text{God }\circ P =\text{id}&lt;/equation&gt;，我们对God函数唯一知道的事情是：它是一个双射。也就是说，它一定会把&lt;equation&gt;T&lt;/equation&gt;(true)映射到&lt;equation&gt;X,Y&lt;/equation&gt;中的一个，然后把&lt;equation&gt;F&lt;/equation&gt;(false)映射到另一个。所以我们可以写下如下等式：&lt;equation&gt;P=\text{God}^{-1}\circ I^{-1}&lt;/equation&gt;&lt;/p&gt;&lt;p&gt;我们好像几乎做完了（因为找到了&lt;equation&gt;P&lt;/equation&gt;的表达式），但是又好像什么都没做（&lt;equation&gt;\text{God}^{-1}&lt;/equation&gt;是个什么鬼！）&lt;/p&gt;&lt;p&gt;我们作如下观察：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;equation&gt;I&lt;/equation&gt;是我们&lt;b&gt;自己选择&lt;/b&gt;的解释，所以我们可以给出自己的规定，比如：&lt;equation&gt;I(X)=F,I(Y)=T&lt;/equation&gt;。也就是说，God说X，我们就认为它说False；God说Y，我们就认为它说True。&lt;br&gt;&lt;/li&gt;&lt;li&gt;假如&lt;equation&gt;I\circ \text{God }\circ P &lt;/equation&gt;把&lt;equation&gt;T&lt;/equation&gt;映射到&lt;equation&gt;T&lt;/equation&gt;，那么它已经是个恒等映射了。因为每一步都是双射，而一共只有两个元素，只要一个元素对，另一个元素就一定是正确的。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;所以我们只需要&lt;equation&gt;\text{God}\circ P(T)=I^{-1}(T)=Y&lt;/equation&gt;，下面是睁大眼睛的时刻：&lt;/p&gt;&lt;p&gt;假如&lt;equation&gt;P(T)&lt;/equation&gt;是true statement， 也即&lt;equation&gt;P(T)=T&lt;/equation&gt;，我们有如下等价&lt;/p&gt;&lt;equation&gt;P(T)\Leftrightarrow P(T)=T \Leftrightarrow \text{God}(P(T))=\text{God}(T) \Leftrightarrow Y=\text{God}(T)&lt;/equation&gt;&lt;br&gt;&lt;p&gt;所以！&lt;equation&gt;P(T)&lt;/equation&gt;这个statement就是在说&lt;equation&gt;\text{God}(T)=Y&lt;/equation&gt;，翻译一下就是：你对“truth”的判断是&lt;equation&gt;Y&lt;/equation&gt;。&lt;/p&gt;&lt;p&gt;我们来考虑一下真值表，假设神的语言是&lt;equation&gt;X&lt;/equation&gt;代表true，&lt;equation&gt;Y&lt;/equation&gt;代表false&lt;/p&gt;&lt;ul&gt;&lt;li&gt;假如是True神，那么对它来说： truth的判断是&lt;equation&gt;X&lt;/equation&gt;。所以我们的statement是假的，从而它要说&lt;equation&gt;Y&lt;/equation&gt;。经过我们的解释函数&lt;equation&gt;I&lt;/equation&gt;，我们得到了回答&lt;equation&gt;T&lt;/equation&gt;。&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;li&gt;假如是False神，那么对它来说：truth的判断是&lt;equation&gt;Y&lt;/equation&gt;。所以我们的statement是真的，从而它要说&lt;equation&gt;Y&lt;/equation&gt;。经过我们的解释函数&lt;equation&gt;I&lt;/equation&gt;，我们得到了回答&lt;equation&gt;T&lt;/equation&gt;。&lt;/li&gt;&lt;p&gt;现在我们可以把&lt;equation&gt;T&lt;/equation&gt;换成我们想要的任何statement &lt;equation&gt;Q&lt;/equation&gt;了。&lt;/p&gt;&lt;p&gt;比如，&lt;equation&gt;Q=&lt;/equation&gt;你是True神&lt;/p&gt;&lt;p&gt;延续上面的语言设定（&lt;equation&gt;X&lt;/equation&gt; for ture，&lt;equation&gt;Y&lt;/equation&gt; for false），那么我们问神的statement是：你对“你是True神”的判断是&lt;equation&gt;Y&lt;/equation&gt;，然后&lt;/p&gt;&lt;ul&gt;&lt;li&gt;假如是True神，那么&lt;equation&gt;Q=T&lt;/equation&gt;，根据我们上面的分析，我们可以得到&lt;equation&gt;T&lt;/equation&gt;的回答，注意这个&lt;equation&gt;T&lt;/equation&gt;是针对&lt;equation&gt;Q&lt;/equation&gt;的判断，所以我们知道这个神就是True神&lt;/li&gt;&lt;li&gt;假如是False神，那么&lt;equation&gt;Q=F&lt;/equation&gt;，所以它对&lt;equation&gt;Q&lt;/equation&gt;的判断是&lt;equation&gt;X&lt;/equation&gt;。再看我们的statement，发现我们的statement也是假的，所以它要说反话，从而给出&lt;equation&gt;X&lt;/equation&gt;的回答，而我们的翻译（&lt;b&gt;注意这里是&lt;equation&gt;I&lt;/equation&gt;函数而不是上面的语言设定&lt;/b&gt;）说&lt;equation&gt;X&lt;/equation&gt;代表false，所以这个不是True神&lt;/li&gt;&lt;li&gt;假如是Random神，那么&lt;equation&gt;Q=F&lt;/equation&gt;。假如它选择说假话，那么和False神一样的推到给出它的回答是&lt;equation&gt;X&lt;/equation&gt;；假如它选择说真话，那么它对&lt;equation&gt;Q&lt;/equation&gt;的判断是&lt;equation&gt;Y&lt;/equation&gt;，从而我们的statement是对的，所以它会说&lt;equation&gt;X&lt;/equation&gt;。但是解释函数告诉我们，这意味着&lt;equation&gt;Q&lt;/equation&gt;是假的，所以这个也不是True神！&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我们看到，只有True神会给出true的回答，其余都是false，所以接下来我们只要一个个问就行了。&lt;/p&gt;&lt;br&gt;&lt;p&gt;Remark：我们可以看到，我们的提问方式保证了不仅仅可以无视问的是哪位神（因为总是可以得到正确的回答），而且不依赖神的语言！即使说神互相之间的语言也可以是不一样的，比如True神对true说&lt;equation&gt;X&lt;/equation&gt;，Random神对false说&lt;equation&gt;X&lt;/equation&gt;，而我们可能两个神都会问到，甚至用同一个解释函数&lt;equation&gt;I&lt;/equation&gt;去解释它们的回答，我们仍然可以得到正确的答案！&lt;/p&gt;&lt;br&gt;&lt;p&gt;Generalized Problem：上述问题中，Random神是在回答问题前，选择接受True神或者False神的设定，再作回答。可以看到我们的答案完全可以忽略Random神，因为当它抛完硬币后，它就被归到True神或者False神的情况里。所以呢，Random神很不高心，现在它要秀一下存在感：它决定通过抛硬币来决定它的回答（而不是回答方式）！&lt;/p&gt;&lt;p&gt;也就是说，每次Random神给出的判断完全就是抛硬币的结果，而和你问什么完全没有关系。它完全不给出任何信息量。现在还是三次机会问三个神，请问：你还可以找到一个方法区分这三位神吗？&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2016-12-14-24358375</guid>
<pubDate>Wed, 14 Dec 2016 00:00:00 +0800</pubDate>
</item>
<item>
<title>Zero谈数学——对称函数和它的弟兄们（2）</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2016-11-21-23827725.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/23827725&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
上回说到，所有的对称函数弟兄们，都是被对称单项式&lt;equation&gt;m_\lambda&lt;/equation&gt;搞基搞出来的（大雾）。&lt;p&gt;那我们为什么还要研究&lt;equation&gt;e_\lambda&lt;/equation&gt;们呢？（&lt;equation&gt;e_\lambda&lt;/equation&gt;名字叫基本对称多项式）&lt;/p&gt;&lt;p&gt;很简单啊！你看它名字里都有个基了，这是不是预示着什么！&lt;/p&gt;&lt;p&gt;（预示着可以搞基？）&lt;/p&gt;&lt;p&gt;预示着这玩意儿其实也是一组（线性）基。证明大意是这样的：所有的满足&lt;equation&gt;|\lambda|\leq n&lt;/equation&gt;的&lt;equation&gt;e_\lambda&lt;/equation&gt;可以写成所有满足同样条件的&lt;equation&gt;m_\lambda&lt;/equation&gt;的线性组合，而这个矩阵是可逆的，所以我们可以反过来把&lt;equation&gt;m_\lambda&lt;/equation&gt;写成&lt;equation&gt;e_\lambda&lt;/equation&gt;的线性组合，所以……证毕&lt;/p&gt;&lt;p&gt;RMK：这里&lt;equation&gt;|\lambda|=\lambda_1+\lambda_2+\lambda_3+\cdots&lt;/equation&gt;也就是&lt;equation&gt;\lambda&lt;/equation&gt;这个不增序列的和，比如&lt;equation&gt;\lambda=(2,1,1) \Rightarrow |\lambda|=4&lt;/equation&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;第三者！&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;关于&lt;equation&gt;e_\lambda&lt;/equation&gt;的概况，差不多到这里就结束了，接下来要介绍它的一位好朋(ji)友&lt;equation&gt;h_\lambda&lt;/equation&gt;，也就是大名鼎鼎（并没有）的&lt;b&gt;完全齐次对称多项式（Complete Homogeneous Symmetric Polynomials）&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;equation&gt;h_\lambda&lt;/equation&gt;的定义和&lt;equation&gt;e_\lambda&lt;/equation&gt;很相似，还记得大明湖畔的夏……，哦不，&lt;equation&gt;e_{(2,1,1)}=e_2\cdot e_1 \cdot e_1&lt;/equation&gt;吗？一般来说，&lt;equation&gt;e_\lambda=e_{\lambda_1}\cdot e_{\lambda_2}\cdot e_{\lambda_3}\cdots&lt;/equation&gt; 对于&lt;equation&gt;h_\lambda&lt;/equation&gt;，完全就是一样的定义：&lt;equation&gt;h_\lambda=h_{\lambda_1}\cdot h_{\lambda_2}\cdot h_{\lambda_3}\cdots&lt;/equation&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;接下来，不是见证奇迹的时刻，因为……上面的定义其实啥用都没有，我们连&lt;equation&gt;h_1,h_2,\cdots&lt;/equation&gt;这些东西是啥都不知道！&lt;/p&gt;&lt;p&gt;再来一个定义，&lt;equation&gt;h_k&lt;/equation&gt;就是所有的次数等于&lt;equation&gt;k&lt;/equation&gt;的单项式的和&lt;/p&gt;&lt;p&gt;举个栗子：两次单项式有&lt;equation&gt;x_1^2,x_2^2,x_3^2,x_1x_2,x_2x_3,x_1x_3&lt;/equation&gt;，所以&lt;equation&gt;h_2=x_1^2+x_2^2+x_3^2+x_1x_2+x_2x_3+x_1x_3&lt;/equation&gt;。当然我这里只是写出了3个变量的特殊情形，实际上我们会考虑无穷多个变量的case。&lt;/p&gt;&lt;p&gt;Anyway，我们已经知道了三种对称多项式&lt;equation&gt;m_\lambda,e_\lambda,h_\lambda&lt;/equation&gt;了，而且我们知道前面两个是基，那第三个是不是呢？&lt;/p&gt;&lt;p&gt;其实，它也构成一组基，这个证明和证明&lt;equation&gt;e_\lambda&lt;/equation&gt;是一组基的证明完全一样。&lt;/p&gt;&lt;p&gt;我们已经有了三组基了！下面是不是该考虑怎么组CP的问题了！（大雾！！&lt;/p&gt;&lt;p&gt;其实冥冥之中，&lt;equation&gt;e_\lambda&lt;/equation&gt;和&lt;equation&gt;h_\lambda&lt;/equation&gt;的命运已经被紧紧相连，而&lt;equation&gt;m_\lambda&lt;/equation&gt;由于受不了这虐狗的现实，很快就将消失在以后的文章里（这难道不是作者强行规定的吗喂！）&lt;/p&gt;&lt;br&gt;在&lt;equation&gt;m_\lambda&lt;/equation&gt;离开之前，我们还有一件事情需要&lt;equation&gt;m_\lambda&lt;/equation&gt;来完成（对单身狗&lt;equation&gt;m_\lambda&lt;/equation&gt;造成无穷点伤害）：我们可以在对称函数上定义一种内积结构&lt;equation&gt;&amp;lt;-,-&amp;gt;&lt;/equation&gt;，具体为&lt;equation&gt;&amp;lt;h_\lambda,m_\mu&amp;gt;=\delta_{\lambda\mu}&lt;/equation&gt;&lt;p&gt;那么问题就来了：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;这就定义完了？这玩意儿真的是定义良好（well-defined）的吗？&lt;/li&gt;&lt;li&gt;为什么要这么定义？&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;回答：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;其实还没有，具体的描述如下：任何两个对称函数&lt;equation&gt;f&lt;/equation&gt;和&lt;equation&gt;g&lt;/equation&gt;都可以唯一的展开成&lt;equation&gt;h_\lambda&lt;/equation&gt;和&lt;equation&gt;m_\lambda&lt;/equation&gt;的线性组合，比如&lt;equation&gt;f=\sum_\lambda f_\lambda h_\lambda&lt;/equation&gt;和&lt;equation&gt;g=\sum_\mu g_\mu m_\mu&lt;/equation&gt;，那么&lt;equation&gt;&amp;lt;f,g&amp;gt;=\sum_\nu f_\nu g_\nu&lt;/equation&gt;&lt;/li&gt;&lt;li&gt;以后你就会发现这个东西有着很神奇的作用&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;回到&lt;equation&gt;e_\lambda&lt;/equation&gt;和&lt;equation&gt;h_\lambda&lt;/equation&gt;这对CP上，为什么它们之间有着很强烈的联系呢？&lt;/p&gt;&lt;p&gt;因为利用这俩东西，我们可以定义一个变换&lt;equation&gt;\omega&lt;/equation&gt;，具体作用就是&lt;equation&gt;\omega(e_\lambda)=h_\lambda&lt;/equation&gt;。可以证明，这个变换是个involution，也就说，作用两次就等于什么都没干。（就像电灯开关，拨动开关两次等于啥都没做）也就是所，&lt;equation&gt;\omega(h_\lambda)=e_\lambda&lt;/equation&gt;。&lt;/p&gt;&lt;p&gt;有了内积我们就会问（其实懒得问），什么是一组正交基？&lt;/p&gt;&lt;p&gt;有了这个involution我们会问（其实根本想不到要问），它的特征向量是谁？&lt;/p&gt;&lt;p&gt;带着这两个问题，很快我们会迎来新的朋友&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2016-11-21-23827725</guid>
<pubDate>Mon, 21 Nov 2016 00:00:00 +0800</pubDate>
</item>
<item>
<title>Zero谈数学——对称函数和它的弟兄们</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2016-04-15-20752661.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/20752661&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好久没有写专栏了，最近又开始学不下去了，所以来这里聊聊最近这一年学到的东西。这个系列的文章的起源来自于这个问题的回答：&lt;a href=&quot;https://www.zhihu.com/question/37470096/answer/94871693?from=profile_answer_card&quot; data-editable=&quot;true&quot; data-title=&quot;非常神奇的数学结论有哪些？ - zero 的回答&quot;&gt;非常神奇的数学结论有哪些？ - zero 的回答&lt;/a&gt; 老实说，对称函数的内容很乱也很杂，不像之前几篇文章，可以很哲学的说一些东西。而且我也不知道它有什么很贴近现实生活的应用，只能说这块内容本身很有意思吧。这几篇文章可能数学术语会比较多，而且我有必要默认一些基础的数学知识，所以对不住看不懂的各位了，有些东西实在没法三两句话解释。我想从三个不同的角度来引入这四个东西，从而使得他们的同构显得很神奇。我会尽量做到start from zero。&lt;/p&gt;&lt;h2&gt;你好，Symmetric Function&lt;/h2&gt;&lt;p&gt;回忆一下高中的时候，解析几何里有一个非常强力的工具，叫做维达定理（Vieta&#39;s theorem），具体来说，假如我们有一个方程&lt;equation&gt;x^2+bx+c=0&lt;/equation&gt;，它有两个根&lt;equation&gt;x_1,x_2&lt;/equation&gt;，那么它给出了根与系数之间的关系：&lt;equation&gt;x_1+x_2=-b,x_1x_2=c&lt;/equation&gt;。这使得我们在做解析几何的时候，可以简化一些计算。而很多人也知道，这个关系对任意次数的多项式都是对的，假如我们有一个n次的多项式&lt;equation&gt;x^n+a_1x^{n-1}+....+a_{n-1}x+a_n&lt;/equation&gt;，且有根&lt;equation&gt;x_1,x_2,...,x_n&lt;/equation&gt;，那么他们满足如下的方程：&lt;/p&gt;&lt;equation&gt;x_1+x_2+...+x_n=-a_1&lt;/equation&gt;&lt;br&gt;&lt;equation&gt;x_1x_2+x_2x_3+x_1x_3+...+x_{n-1}x_n=a_2&lt;/equation&gt;&lt;br&gt;&lt;p&gt;……&lt;/p&gt;&lt;equation&gt;x_1x_2....x_n=(-1)^na_n&lt;/equation&gt;&lt;br&gt;&lt;p&gt;仔细想一下，方程的根是没有顺序这一说的，所以当我们把他们称为&lt;equation&gt;x_1,x_2,...,x_n&lt;/equation&gt;的时候，我们完全可以给他们换个名字：把&lt;equation&gt;x_1&lt;/equation&gt;叫做&lt;equation&gt;x_3&lt;/equation&gt;，把&lt;equation&gt;x_2&lt;/equation&gt;叫做&lt;equation&gt;x_1&lt;/equation&gt;，把&lt;equation&gt;x_3&lt;/equation&gt;叫做&lt;equation&gt;x_2&lt;/equation&gt;，上面这组关系应该还是成立的。假如我们把上面这些多项式分别叫做&lt;equation&gt;e_1,e_2,...,e_n&lt;/equation&gt;，那么这个事实用数学表达式写下来就是&lt;equation&gt;e_i(x_1,x_2,x_3,x_4,...,x_n)=e_i(x_3,x_1,x_2,x_4,...,x_n)&lt;/equation&gt;。&lt;/p&gt;&lt;br&gt;&lt;p&gt;&lt;i&gt;用比较现代的数学语言说，就是这些多项式在置换群&lt;equation&gt;S_n&lt;/equation&gt;的作用下不变。&lt;/i&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;终于我们的主角登场了！对称函数，或者叫做Symmetric Function，简记为S.F.。上面说到的那些个&lt;equation&gt;e_i&lt;/equation&gt;们，就是所谓的对称函数。下面再给出一些对称函数的栗子：&lt;/p&gt;&lt;equation&gt;x_1x_2+x_2x_3+x_3x_1&lt;/equation&gt;&lt;br&gt;&lt;equation&gt;x_1^2x_2+x_2^2x_1&lt;/equation&gt;&lt;br&gt;&lt;equation&gt;x_1^3+x_1^2x_2+x_1x_2^2+x_2^3&lt;/equation&gt;&lt;br&gt;&lt;equation&gt;x_1^{100}+x_2^{100}+x_3^{100}+...+x_n^{100}&lt;/equation&gt;&lt;br&gt;&lt;p&gt;上面所有的栗子，你把&lt;equation&gt;x_i&lt;/equation&gt;们随意换来换去，得到的都是这个多项式本身。怎么构造一个对称多项式呢？我觉得最直白的想法，可能是这样的：首先随便写下一个单项式&lt;equation&gt;x_1^2x_2x_3&lt;/equation&gt;，然后我们就开始换下标：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;交换1和2，保持3不变，我们得到 &lt;equation&gt;x_2^2x_1x_3&lt;/equation&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;交换2和3，保持1不变，我们得到 &lt;equation&gt;x_1^2x_2x_3&lt;/equation&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;交换1和3，保持2不变，我们得到 &lt;equation&gt;x_3^2x_1x_2&lt;/equation&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;把1换成2，把2换成3，把3换成1，我们得到 &lt;equation&gt;x_2^2x_3x_1&lt;/equation&gt;&lt;br&gt;&lt;/li&gt;&lt;li&gt;把1换成3，把3换成2，把2换成1，我们得到 &lt;equation&gt;x_3^2x_2x_1&lt;/equation&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br&gt;&lt;p&gt;然后把所有的这些单项式收集起来，重复的只取一个， 我们得到了三个多项式&lt;equation&gt;x_1^2x_2x_3, x_2^2x_1x_3&lt;/equation&gt;和&lt;equation&gt;x_3^2x_1x_2&lt;/equation&gt;。把他们加起来，我们就得到了一个对称函数！不相信的同学可以自己检查一下。&lt;/p&gt;&lt;p&gt;为什么我们的方法可行呢？因为是我说的（划掉），因为我们已经把所有换&lt;equation&gt;x_i&lt;/equation&gt;的可能性都包括进多项式里了，你怎么换都不会跑出我们的多项式，所以自然就可以。这种由一个单项式出发，加入所有可能性得到的多项式，我们称为&lt;b&gt;对称单项式（Monomial Symmetric Functions)&lt;/b&gt;，用字母m代表。上面这个特殊的栗子，一般记为&lt;equation&gt;m_{(2,1,1)}&lt;/equation&gt;。为什么是&lt;equation&gt;(2,1,1)&lt;/equation&gt;而不是&lt;equation&gt;(9,8,5)&lt;/equation&gt;？因为这个多项式是由&lt;equation&gt;x_1^2x_2^1x_3^1&lt;/equation&gt;生成的，我们依次取各个&lt;equation&gt;x_i&lt;/equation&gt;的次数。那又有人问了，为啥不是&lt;equation&gt;(1,2,1)&lt;/equation&gt;或者&lt;equation&gt;(1,1,2)&lt;/equation&gt;。这个可以说是一个约定，我们总是取一个不增的序列来代表这个对称单项式。&lt;/p&gt;&lt;p&gt;注意到我们已经有了&lt;equation&gt;e_1,e_2,....&lt;/equation&gt;，我们也可以把这种对称多项式的定义扩展到一个序列上，比如刚刚的&lt;equation&gt;(2,1,1)&lt;/equation&gt;，定义&lt;equation&gt;e_{(2,1,1)}=e_2\cdot e_1\cdot e_1&lt;/equation&gt;。我们可以计算一下这个到底是个啥：&lt;equation&gt;e_{(2,1,1)}=(x_1x_2)(x_1+x_2)(x_1+x_2)=&lt;/equation&gt;你猜&lt;/p&gt;&lt;br&gt;&lt;p&gt;一般的，我们总用一个希腊字母来代表这么一个不减的序列，比如用&lt;equation&gt;\lambda&lt;/equation&gt;代表刚刚的&lt;equation&gt;(2,1,1)&lt;/equation&gt;，那么刚刚的那个多项式&lt;equation&gt;m_{(2,1,1)}&lt;/equation&gt;就记为&lt;equation&gt;m_{\lambda}&lt;/equation&gt;，刚刚的那个&lt;equation&gt;e_{(2,1,1)}&lt;/equation&gt;就记为&lt;equation&gt;e_\lambda&lt;/equation&gt;。&lt;/p&gt;&lt;p&gt;目前来说，&lt;equation&gt;m_\lambda&lt;/equation&gt;们是最重要的一批对称多项式。为啥咧？&lt;/p&gt;&lt;p&gt;想想多项式是啥？单项式的线性组合！&lt;/p&gt;&lt;p&gt;那对称多项式（对称函数）是啥？当然是对称单项式的线性组合啦！&lt;/p&gt;&lt;p&gt;上面这句类比不是空穴来风，对称单项式确实构成了对称函数空间的一组线性基（&lt;u&gt;*&lt;/u&gt;）！我们甚至可以尝试把我们的&lt;equation&gt;e_\lambda&lt;/equation&gt;写成这些对称单项式的线性组合。&lt;/p&gt;&lt;p&gt;比如&lt;equation&gt;e_{(1,1)}=2m_{(1,1)}+m_2&lt;/equation&gt;，又比如&lt;equation&gt;e_2=m_{(1,1)}&lt;/equation&gt;。好，我们已经验证了两个栗子了，都确实可以写成线性组合，所以你们有十足的理由相信我上面&lt;u&gt;*&lt;/u&gt;&lt;u&gt;这句话&lt;/u&gt;是对的。&lt;/p&gt;&lt;p&gt;Homework：想想&lt;u&gt;*&lt;/u&gt;&lt;u&gt;这句话&lt;/u&gt;为什么是对的？&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2016-04-15-20752661</guid>
<pubDate>Fri, 15 Apr 2016 00:00:00 +0800</pubDate>
</item>
<item>
<title>Zero谈数学——聊聊拓扑（3）</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2015-06-29-20090843.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/20090843&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
上回说到拓扑不变量这个玩意儿。它是个很重要的东西，因为它可以区分两个东西不同胚，那到底有哪些拓扑不变量呢？数学好玩的地方就在这里，有时候感觉数学很广阔，上来就是研究所有的拓扑空间，研究随便一个映射，所以你会觉得拓扑不变量是不是也成千上万？但是你仔细想想，让你描述篮球和救生圈的区别，你好像除了说洞不一样之外也没啥可说的了，剩下的都太难说了。数学家也是这么想的，所以拓扑不变量说到底，真的就只是数洞……&lt;p&gt;当然数学家这么高逼格的生物怎么会用洞这种low的词汇呢，他们新起了个名字，叫亏格（genus）。篮球木有洞，亏格为0；救生圈一个洞，亏格为1。&lt;/p&gt;&lt;p&gt;&lt;img src=&quot;https://pic3.zhimg.com/16e603c4c0bc6d9cfbd3cec8df2ac2c1_r.jpg&quot; data-rawwidth=&quot;320&quot; data-rawheight=&quot;81&quot;&gt;亏格为分别为5，3，2的曲面（图片来自&lt;a href=&quot;http://magician-magic.blogspot.com/&quot; data-editable=&quot;true&quot; data-title=&quot;magic&quot;&gt;magic&lt;/a&gt; 侵删）&lt;/p&gt;&lt;p&gt;那你不禁就会问了：就这么一个可怜的拓扑不变量，够用吗？&lt;/p&gt;&lt;p&gt;够！而且大大的够！&lt;/p&gt;&lt;p&gt;事实上，一个连通的可定向的二维闭曲面，它的拓扑分类由它的亏格完全决定！就是说俩连通的可定向的二维闭曲面，假如亏格一样，就存在同胚映射；反过来假如亏格不一样，就一定不同胚。&lt;/p&gt;&lt;p&gt;这就是著名的二维闭曲面分类定理（的一半）说的东西。非常让人惊讶但又很容易接受的事实：虽然曲面千变万化，但是居然就这么简单的分类了，而且肉眼可见，看起来一不一样，确实就是同不同胚。&lt;/p&gt;&lt;p&gt;&lt;i&gt;注：把两个篮球放在一起，互不接触，把这样一个整体称为一个曲面也是可以的，但是……这不闲得蛋疼么，因为很明显是俩东西么。要求连通性就是为了排除掉这种情况，俩篮球放一起还互不接触属于不连通的情况。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;可定向……这个不太好解释，这么理解，你能现实生活看到的都是可定向的，不可定向的栗子：克莱因瓶&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;i&gt;闭：就是不能在篮球上剪个洞，恩……&lt;/i&gt;&lt;/p&gt;&lt;p&gt;当然啦，严格的用数学工具描述洞不是那么easy的事情，为此我们需要介绍一点同伦理论&lt;/p&gt;&lt;p&gt;[你猜下次什么时候更新]&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2015-06-29-20090843</guid>
<pubDate>Mon, 29 Jun 2015 00:00:00 +0800</pubDate>
</item>
<item>
<title>Zero谈数学——聊聊拓扑（2）</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2015-06-28-20090763.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/20090763&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
为什么是开集？我想看完上一篇很多人都会有这样的疑问。很简单，我们关心连续性。&lt;p&gt;什么是连续性？假如有一点点高等数学的知识，我们知道一个映射连续，是说假如两个数&lt;equation&gt;x_1&lt;/equation&gt;和&lt;equation&gt;x_2&lt;/equation&gt;足够靠近，那么它们的函数值&lt;equation&gt;f(x_1)&lt;/equation&gt;和&lt;equation&gt;f(x_2)&lt;/equation&gt;也足够靠近。其实这句话可以用另一种语言表述，就是连续映射的逆&lt;equation&gt;f^{-1}&lt;/equation&gt;，总是把开集映射成开集。这两句话的等价性，让我们成功的从度量意义下描述连续性，变成了从拓扑意义下描述连续性（拓扑就是所有开集的集合）！所以值得我们稍微花点时间解释一下&lt;/p&gt;&lt;p&gt;注意：一个映射的逆不再是一个映射，因为可能存在多个点有相同的映射值。一个映射&lt;equation&gt;f&lt;/equation&gt;是指这么一个东西，你给它一个值&lt;equation&gt;x&lt;/equation&gt;，它给你一个值&lt;equation&gt;f(x)&lt;/equation&gt;。比如平方映射&lt;equation&gt;f(x)=x^2&lt;/equation&gt;，我们给它&lt;equation&gt;1&lt;/equation&gt;，它给出&lt;equation&gt;f(1)=1^2=1&lt;/equation&gt;；我们给它&lt;equation&gt;-1&lt;/equation&gt;，它给出&lt;equation&gt;f(-1)=(-1)^2=1&lt;/equation&gt;。那一个映射的逆呢？它是说我们有了值&lt;equation&gt;f(x)&lt;/equation&gt;，想知道哪些值&lt;equation&gt;x&lt;/equation&gt;，可以让我们得到&lt;equation&gt;f(x)&lt;/equation&gt;。比如刚刚平方映射的栗子，它的逆是&lt;equation&gt;f^{-1}(1)=\{-1,1\}&lt;/equation&gt;。&lt;/p&gt;&lt;br&gt;&lt;p&gt;你打开记事本，敲一下键盘的Q，屏幕上就有一个Q出现，这也是一种映射。因为一个输入对应&lt;b&gt;唯一一个&lt;/b&gt;输出。假如你按下Q，系统出来QW，那你会觉得键盘坏了，这时候就不能叫映射了。所以一个映射的逆往往不再是一个映射，比如刚刚的栗子，我们给它一个值&lt;equation&gt;1&lt;/equation&gt;，它给我们两个值&lt;equation&gt;1&lt;/equation&gt;和&lt;equation&gt;-1
&lt;/equation&gt;，这就没有什么唯一一个可言了。&lt;/p&gt;&lt;p&gt;假如我们给它一个集合&lt;equation&gt;A&lt;/equation&gt;，问哪些点被映射到了这个集合里来，我们就得到了&lt;b&gt;一个确定&lt;/b&gt;的集合&lt;equation&gt;f^{-1}(A)&lt;/equation&gt;。于是映射的逆可以看作一个从子集合到子集合的映射。比如我们刚刚的&lt;equation&gt;f&lt;/equation&gt;就满足&lt;equation&gt;f^{-1}((0,1))=(-1,0)\cup(0,1)&lt;/equation&gt;，再比如&lt;equation&gt;f^{-1}((1,2))=(-\sqrt2,-1)\cup(1,\sqrt2)&lt;/equation&gt;&lt;/p&gt;&lt;p&gt;我们再来看这句话：连续映射的逆，总是把开集映射成开集。（刚刚的平方映射就是一个栗子，大家可以手动验证一下它的逆是不是把开区间映成开区间）为什么这句话和一开始的“假如两个值足够靠近，那么它们的映射值也足够靠近”是一个意思呢？可以这么看，把映射值&lt;equation&gt;f(x_0)&lt;/equation&gt;的邻域&lt;equation&gt;U&lt;/equation&gt;（包含映射值的开集）取得足够小，用映射逆映回去，我们得到一个自变量&lt;equation&gt;x_0&lt;/equation&gt;的一个邻域&lt;equation&gt;V&lt;/equation&gt;（它包含&lt;equation&gt;x_0&lt;/equation&gt;而且是开集）。根据定义，邻域&lt;equation&gt;V&lt;/equation&gt;里的值都被映射到了&lt;equation&gt;f(x_0)&lt;/equation&gt;附近（即&lt;equation&gt;U&lt;/equation&gt;里）。足够靠近&lt;equation&gt;x_0&lt;/equation&gt;的点都在邻域&lt;equation&gt;V&lt;/equation&gt;里，都被映射到了&lt;equation&gt;f(x_0)&lt;/equation&gt;附近，而这句话，正好就是在说“假如两个值足够靠近，那么它们的映射值也足够靠近”。&lt;/p&gt;&lt;p&gt;从现在开始，记住连续等于开集的逆是开集。好，数学家们对连续的函数很在意。可是假如只给你两个由点组成的集合（比如一个是球面，一个是直线），和这两个点集的映射（把球面上每一点都映射到直线上同一点），你怎么判断这个映射连续？只要知道什么是开集，我就知道了什么是连续！这就解释了为什么是开集。&lt;br&gt;&lt;/p&gt;&lt;p&gt;再回到上次的栗子，我们知道任何空间都有两种拓扑，一个叫离散拓扑，一个叫平凡拓扑。这两个极端分子其实和连续性也很有关系：假如&lt;equation&gt;f:X\rightarrow Y&lt;/equation&gt;是一个拓扑空间&lt;equation&gt;X&lt;/equation&gt;到拓扑空间&lt;equation&gt;Y&lt;/equation&gt;的映射，则：&lt;/p&gt;&lt;p&gt;1、假如&lt;equation&gt;Y&lt;/equation&gt;取平凡拓扑，无论&lt;equation&gt;X&lt;/equation&gt;取什么拓扑，&lt;equation&gt;f&lt;/equation&gt;一定是连续的&lt;/p&gt;&lt;p&gt;2、假如&lt;equation&gt;X&lt;/equation&gt;取离散拓扑，无论&lt;equation&gt;Y&lt;/equation&gt;取什么拓扑，&lt;equation&gt;f&lt;/equation&gt;一定是连续的&lt;/p&gt;&lt;p&gt;这也从侧面反应了一个问题，叫做：这俩拓扑好像没什么卵用。其实确实有这个意思在里面：我们关心的是那种适中的拓扑，就是有一些比较好的映射是连续的，不太好的就不连续。&lt;/p&gt;&lt;p&gt;前面我们扯了很久的“映射的逆不是一个映射”，但是有一类很好的映射，它的逆还是映射，就是所谓的一一映射。这个从字面理解就好了：一一对应的映射嘛。&lt;equation&gt;f:X\rightarrow Y&lt;/equation&gt;是一一映射是说，假如&lt;equation&gt;X&lt;/equation&gt;中两个点不一样，那么它们映射过去在&lt;equation&gt;Y&lt;/equation&gt;中也不一样；对于&lt;equation&gt;Y&lt;/equation&gt;中每一个点，都有且仅有一个&lt;equation&gt;X&lt;/equation&gt;中的点映过去就是它。一个简单的栗子就是&lt;equation&gt;f(x)=x&lt;/equation&gt;，它是个一一映射。&lt;/p&gt;&lt;p&gt;这类映射好在那里呢？它的逆也是映射，所以我们可以谈这个逆映射的连续性。一旦一个一一映射&lt;equation&gt;f&lt;/equation&gt;，它自己连续，它的逆映射也连续，我们就管这样的&lt;equation&gt;f&lt;/equation&gt;叫同胚。（还记得（1）里说的同一个胚子做出来的同胚么，这就是它严格的数学定义）&lt;/p&gt;&lt;p&gt;其实你自习思考一下就知道了，拓扑空间的东西都是由拓扑（也就是开集）搞出来的。假如&lt;equation&gt;Y&lt;/equation&gt;上开集有诸如此类的性质，我们显然可以用&lt;equation&gt;f^{-1}&lt;/equation&gt;拉回到&lt;equation&gt;X&lt;/equation&gt;上看；现在又说&lt;equation&gt;f^{-1}:Y\rightarrow X&lt;/equation&gt;也是个连续映射，所以假如&lt;equation&gt;X&lt;/equation&gt;上开集有诸如此类的性质，我们又可以用&lt;equation&gt;(f^{-1})^{-1}=f&lt;/equation&gt;拉回到&lt;equation&gt;Y&lt;/equation&gt;上看。所以这俩空间的拓扑应该没啥太大区别，在哪儿研究问题都一样。所以同胚如此重要，因为俩空间同胚，基本上就是在说它们的拓扑是一样的，就是说它们作为拓扑空间是一个东西。&lt;br&gt;&lt;/p&gt;&lt;p&gt;事实上，看起来显然不是一个东西的（比如篮球和救生圈），它们之间确实是不可能建立同胚映射的（就是这样的同胚映射不存在）。而要证明这一点，就需要所谓的拓扑不变量。它的基本思想是：找一个东西，它在同胚映射下保持不变。比如救生圈中间有个洞，同胚映射过去应该也要有这么个洞，不可能变成篮球一样没有洞。这样的“洞”就是拓扑不变量。假如两个东西的拓扑不变量不一样，显然它们俩就不可能同胚了，就像性别都不一样的两个人不可能是同一个人一样。&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2015-06-28-20090763</guid>
<pubDate>Sun, 28 Jun 2015 00:00:00 +0800</pubDate>
</item>
<item>
<title>Zero谈数学——聊聊拓扑（1）</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2015-01-22-19940774.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/19940774&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;拓扑这两个字，对于没有学过数学的人来说应该是一个很陌生的词汇。就像流形一样，乍一听，完全摸不着头脑。这个小系列，我希望能谈一谈科普的拓扑和真实的数学上的拓扑的区别，看看数学家们是怎么神奇的从点和点之间的关系发展到“耳熟能详”的莫比乌斯带、克莱因瓶的。&lt;/p&gt;&lt;p&gt;“科普的拓扑”&lt;/p&gt;&lt;p&gt;拓扑，也称“橡皮泥几何学”。这个称呼其实很形象。在数学家眼里，带距离的叫几何，不带距离的，就是拓扑。所以数学家们常常也说几何的东西有某种“刚性”，而拓扑则相对“软”一点。&lt;/p&gt;&lt;p&gt;拓扑研究的物体，不关心长度。在拓扑学家眼里，假如忽略篮球的打气孔，一个篮球和一个乒乓球其实没区别，但是篮球和救生圈就很不一样。我想大家也能感受出它们的区别来，非要描述，可能会说，救生圈中间有个洞，篮球和乒乓球就没有。&lt;/p&gt;&lt;p&gt;拓扑学家干的事情其实没有很高大上，他们只是把简单的“洞”“不一样”，用数学的语言描述了出来。（当然历史肯定不是这样的）&lt;/p&gt;&lt;p&gt;拓扑关心的事情叫做同胚。这其实是个很形象的词：一块泥胚，你可以用手把它做成一个甜甜圈，也可以做成一个烟斗。烟斗和甜甜圈都是同一个泥胚在不撕裂的情况下捏出来的，所以叫做同胚，非常形象生动。&lt;/p&gt;&lt;p&gt;拓扑关心所谓的拓扑分类，同胚的东西在拓扑学家眼里就是一样的。这也就是那个著名的烟斗和甜甜圈的故事。&lt;/p&gt;&lt;br&gt;&lt;p&gt;“数学的拓扑”&lt;/p&gt;&lt;p&gt;数学的拓扑就枯燥很多了。甚至莫比乌斯带这样的物体都是很高级的东西，你需要学很多才能慢慢接触到这个东东。&lt;br&gt;&lt;/p&gt;&lt;br&gt;&lt;p&gt;首先我们要介绍一下，什么是拓扑。&lt;/p&gt;&lt;p&gt;拓扑是个数学概念，它不仅仅只是一个学科的名字。它的数学含义是，拓扑定义了一个空间内所有的开集。&lt;/p&gt;&lt;p&gt;学过一点数学的人可能会问：开集不是都定义好了么，比如实数轴上的开区间就是开集，闭区间就是闭集。拓扑怎么还“定义”开集？难道它还能指着闭区间说这是开集？&lt;/p&gt;&lt;p&gt;Exactly，拓扑就是个教你做人的……额不，教你什么是开集的东西。&lt;/p&gt;&lt;br&gt;&lt;p&gt;数学家最喜欢抽象和推广，从现实世界的一个两个抽象出1，2，3，从现实世界的几何抽象出欧式几何等等。拓扑就是一般开集概念的推广。数学家们想，凭什么我只能管开区间叫开集？我能不能管闭区间也叫开集？我能不能管左开右闭区间也叫开集？然后发现：好像没人说不可以啊，那我们就这么叫叫看，结果就叫出了拓扑学。&lt;/p&gt;&lt;br&gt;&lt;p&gt;既然啥都能叫开集，那我们显然不能狭隘的再用开区间的观点去看了，所以我们要从哲学意义重新讨论一下，什么是开集？&lt;/p&gt;&lt;p&gt;什么是开集？开集是用来描述点和点之间的亲疏关系的。假如两个点同时在很多个开集里，说明它俩离的比较近。就比如实数里的开区间，假如两个数离的比较近，感觉上有更多的开区间同时包含这两个数。你就想，长度大于1的开区间很有可能盖住0和1，但是长度大于10000的才有可能盖住0和10000，所以感觉上0和1应该更亲近一点。&lt;/p&gt;&lt;br&gt;&lt;p&gt;所以知道了拓扑，就知道了这个空间的开集（哲学的说，就知道了这里面点的亲疏关系）。以前，大家看到的是一片点，不分彼此。现在，我们有了拓扑，你就可以看到亲疏、远近了。是不是结构一下子就丰富起来了？&lt;/p&gt;&lt;p&gt;就像以前我们只有一班的名单，现在我们知道一班里每个人的之间的关系：张三和李四是好朋友，李四和赵六是死对头，这样我们就可以更合理的安排座位，管理班级了。所以有了拓扑，我们就可以干很多事情了！比如&lt;/p&gt;&lt;p&gt;有了拓扑，我们可以定义闭集、紧集。&lt;/p&gt;&lt;p&gt;有了拓扑，我们可以定义什么是一个集合的内部，什么是一个集合的闭包，什么是一个集合的边界。&lt;/p&gt;&lt;p&gt;有了拓扑，我们可以定义&lt;equation&gt;T_1&lt;/equation&gt;空间、&lt;equation&gt;T_2&lt;/equation&gt;空间、&lt;equation&gt;T_3&lt;/equation&gt;空间、&lt;equation&gt;T_4&lt;/equation&gt;空间以及&lt;equation&gt;C_1&lt;/equation&gt;和&lt;equation&gt;C_2&lt;/equation&gt;空间。&lt;/p&gt;&lt;p&gt;（而这些数学名词我几乎都不准备介绍）&lt;/p&gt;&lt;br&gt;&lt;p&gt;最后说几个拓扑的例子吧。首先是大家最熟悉的实数集，它上面的开集大家都很熟悉，就是开区间和它们的并们，这些集合组成这个空间的拓扑。这样的拓扑称为欧氏拓扑。&lt;/p&gt;&lt;p&gt;第二个是对于任何一个空间，我们定义它的拓扑里只有两个元素：全空间和空集。这个意思就是说，这个空间的子集假如是个开集，要么它是空集，要么它是全空间。我们可以看到这样的空间里，点和点之间都不分彼此，随便一个点的邻域（包含这个点的开集）只能是全空间。这样的拓扑称为平凡拓扑。&lt;/p&gt;&lt;p&gt;最后一个是对于任何一个空间，我们定义它的拓扑为所有的子集。意思是说，这个空间里任何一个子集，都是开集（包括全空间和空集）。这个空间里的点相互之间都很冷漠，因为我们总可以取 某个点本身 这个子集（注意，它是开集），这个子集作为这个点的邻域，它不含任何其他点。这样的拓扑称为离散拓扑。&lt;/p&gt;&lt;p&gt;如果说平凡拓扑是集体宿舍，那离散拓扑就是单身公寓。&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2015-01-22-19940774</guid>
<pubDate>Thu, 22 Jan 2015 00:00:00 +0800</pubDate>
</item>
<item>
<title>Zero谈数学——黎曼几何（3）</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2014-11-01-19882455.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/19882455&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
上回说到，测地线不一定是最短的，这是为什么呢？&lt;br&gt;&lt;p&gt;其实很简单，想象一下，你要从北京飞到上海，结果你先从北京飞到了北极，然后越过北极沿着经线继续飞到了南极，再越过南极回到上海。这条路径是大圆上的一段弧，自然是测地线，可是！假如你真这么干……你还说自己走的路最短……我就不做评价了……&lt;/p&gt;&lt;p&gt;测地线是局部最短的，但是局部最短的测地线有可能不存在。这次的例子在我们熟悉的二维欧氏空间里，想象有一个二维平面，你把原点抠掉了，然后在x轴正半轴上随便取一个点甲，在x轴负半轴上随便取一个点乙，你觉得连接甲乙最短的路径是啥？只能是x轴上经过零点的一条线段（以甲乙为端点），但是问题来了，原点被你抠掉了，这样的直线不存在，你只能在原点附近稍微绕个路，所以你没办法走最短的路径，你只能走一些长度非常非常非常非常非常接近最短长度的路径。&lt;/p&gt;&lt;p&gt;显然这样的流形我们很不喜欢，最短路径明明就在眼前，但就是不能走，这不是逼死强迫症么！我们希望对于任意两个点之间的最短路径，都被一条测地线实现，数学上称呼这种好的性质为完备性。&lt;/p&gt;&lt;p&gt;一个完备的黎曼流形，它的测地线可以随便无限伸长。比如我们的地球，你沿着赤道走，走啊走，走啊走，走到天荒地老，也走不到尽头……相信我，你走不到……&lt;/p&gt;&lt;p&gt;大家可能觉得，well，so far so good！我们以后就讨论完备的黎曼流形好了。但是，我们生活的空间不是那么美好的。按照爱因斯坦的广义相对论，整个时空其实是一个4维的流形，上面有一种特殊的度量叫做洛伦兹度量，在它上面我们也有测地线的概念，特别的有一类特殊的测地线是沿着时间这个轴的方向跑的。事实上可以证明这一类测地线不能无穷延伸，也就是说它反着走一定会在某个点终结！（注意：反方向有终点其实就是再说这条线有个起点）当每一条沿时间走的测地线都有起点的时候，我们有理由相信时间是有起点的，这就是大家为什么要提出大爆炸理论。&lt;/p&gt;&lt;p&gt;好了，你们可以回去声称自己知道什么是大爆炸了（对，我就是给物理学家添麻烦）&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2014-11-01-19882455</guid>
<pubDate>Sat, 01 Nov 2014 00:00:00 +0800</pubDate>
</item>
<item>
<title>扯一扯数学哲学</title>
<link>https://henix.github.io/feeds/zhuanlan.zerojz/2014-10-31-19881418.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/19881418&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
等有空了，计划好好读一读叶峰著的《二十世纪数学哲学——一个自然主义者的评述》，而在这之前，想先扯两句为什么我觉得数学哲学很有意思。&lt;p&gt;1、我们很小就知道1，2，3，4，……而且对于它们的认识是从1个苹果，2个香蕉抽象出来的。但是很快我们就知道其实自然数有无穷多个，从1开始往后数你一辈子都数不完的。可是，其实你一辈子能认识的东西是有限的，所以就算把所有你一辈子能见到的基本粒子全部算上，那也是一个有限的数N，so对于N+1这种数，请问它真的存在么？它不会是任何一个你能见到的东西的数量上的抽象，如果说存在决定意识，那数学里最基本的数字大部分都是空的，不是由存在决定的。很奇怪不是么？&lt;/p&gt;&lt;p&gt;2、数学几何里有个叫欧氏空间的东西，是个横平竖直的东西。我们声称这玩意儿是从现实生活中抽象出来的。问题在于，我们生活的其实是一个流形，最粗糙的看，地球也是个球，不是个平直的东西，那直线这些概念怎么来的？它们真的不是伪概念吗？仔细想想，人们从一个弯曲的空间抽象出直的概念，再从这些概念出发研究出我们的空间不是直的……真的不是循环论证吗喂！&lt;/p&gt;&lt;p&gt;3、想到再补充……&lt;/p&gt;&lt;br&gt;&lt;p&gt;大家可以脑洞大开一下~&lt;/p&gt;</description>
<author>zero</author>
<guid isPermaLink="false">2014-10-31-19881418</guid>
<pubDate>Fri, 31 Oct 2014 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
