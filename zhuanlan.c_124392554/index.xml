<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>Liu言杂记</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/</link>
<description></description>
<language>zh-cn</language>
<lastBuildDate>Fri, 14 Sep 2018 21:33:40 +0800</lastBuildDate>
<item>
<title>5÷2=6？——是的，模7意义下</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-09-14-44523169.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44523169&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7b9617c6b90e45794ebdc0cd58b06377_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;周4后5天是周几？4+5=9？&lt;/p&gt;&lt;p&gt;14时后过15个小时是几点？14+15=29？&lt;/p&gt;&lt;p&gt;7月再过6个月是几月？7+6=13？&lt;/p&gt;&lt;p&gt;……&lt;/p&gt;&lt;p&gt;其实人类早就在使用着“&lt;b&gt;模运算&lt;/b&gt;”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;首先需要引入“&lt;b&gt;同余&lt;/b&gt;”的概念：假设 &lt;equation&gt;a,b&lt;/equation&gt; 都是整数，如果 &lt;equation&gt;n&lt;/equation&gt; 是一个正整数，且存在整数 &lt;equation&gt;k&lt;/equation&gt; 使得 &lt;equation&gt;a-b=k\times n&lt;/equation&gt; ，&lt;b&gt;则称 &lt;equation&gt;a,b&lt;/equation&gt; 模 &lt;equation&gt;n&lt;/equation&gt; 同余，记作&lt;/b&gt; &lt;equation&gt;a\equiv b \pmod n&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;于是：&lt;/p&gt;&lt;p&gt;周4后5天是周2，因为 &lt;equation&gt;4+5=9\equiv 2\pmod 7&lt;/equation&gt; ，而且 &lt;equation&gt;0\leq2&amp;lt; 7&lt;/equation&gt; （认为周日是一周的开始）。&lt;/p&gt;&lt;p&gt;14时后过15个小时是5时，因为 &lt;equation&gt;14+15=29\equiv 5\pmod {24}&lt;/equation&gt; ，而且 &lt;equation&gt;0\leq 5&amp;lt; 24&lt;/equation&gt; （认为周日是一周的开始）。&lt;/p&gt;&lt;p&gt;7月再过6个月是几月，因为 &lt;equation&gt;7+6=13\equiv 1\pmod {12}&lt;/equation&gt; ，而且 &lt;equation&gt;0\leq 1&amp;lt; 12&lt;/equation&gt; （认为周日是一周的开始）。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;对于给定的正整数 &lt;equation&gt;n&lt;/equation&gt; ，如果我们将谈论的范围限制在 &lt;equation&gt;0\sim n-1&lt;/equation&gt; 之间，那么就可以建立起来“模加法”、“模减法”和“模乘法”。&lt;/p&gt;&lt;p&gt;例如 &lt;equation&gt;n=10&lt;/equation&gt; 时，就可以建立如下的运算表：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-df4ca159aa2dda1f06a0926bdd5b8929_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1309&quot; data-rawheight=&quot;429&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-df4ca159aa2dda1f06a0926bdd5b8929&quot; data-watermark-src=&quot;v2-c0bfe058570bdcf98d4d31f0edc66551&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;equation&gt;n=7&lt;/equation&gt; 时，可以建立如下的运算表：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c339ee8d69411dc4a6d072a407f3c9b4_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;969&quot; data-rawheight=&quot;315&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-c339ee8d69411dc4a6d072a407f3c9b4&quot; data-watermark-src=&quot;v2-abe861d3666931d7e7652b13917b1bb5&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;那么下面来看看，能不能进行“模除法”？例如 &lt;equation&gt;5\div 2 \equiv ?\pmod 7&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;我们这样来看，在实数的世界里，如果 &lt;equation&gt;x=5/2&lt;/equation&gt; ，那么就有 &lt;equation&gt;2\times x=5&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;类比地，在模7的运算的世界里，如果 &lt;equation&gt;y\equiv5/2\pmod 7&lt;/equation&gt; ，那么也应该有 &lt;equation&gt;2\times y\equiv5\pmod 7&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;（从上面的表来看，是有这样的值的：6。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-afba185cd41b5499edf54d6aac4f523e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;304&quot; data-rawheight=&quot;316&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-afba185cd41b5499edf54d6aac4f523e&quot; data-watermark-src=&quot;v2-504063d4c2637c002ffb3dfcd598e16a&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;）&lt;/p&gt;&lt;p&gt;进而，我们考虑这样一个问题 ： &lt;equation&gt;1\div 2 \equiv ?\pmod 7&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;如果可以找到 &lt;equation&gt;z\equiv1\div 2 \pmod 7&lt;/equation&gt; ，那么就可以令 &lt;equation&gt;y=5z\pmod 7&lt;/equation&gt; ，就一定有 &lt;equation&gt;2\times y\equiv2\times z\times5 \equiv1\times5\equiv5\pmod 7&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;（从上面的表来看，是有这样的值的：4。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c2a44f0b60a361f295723cb45037223e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;304&quot; data-rawheight=&quot;315&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-c2a44f0b60a361f295723cb45037223e&quot; data-watermark-src=&quot;v2-35db2edba27c2feef004d413d5f1ca50&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;）&lt;/p&gt;&lt;p&gt;一般来讲，对于给定的正整数 &lt;equation&gt;n&lt;/equation&gt; 和整数 &lt;equation&gt;a&lt;/equation&gt; ，如何寻找 &lt;equation&gt;z&lt;/equation&gt; 使得 &lt;equation&gt;1\div a\equiv z\pmod n&lt;/equation&gt; ——这个问题暂缓。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;下面我们来看看，是不是可以计算 &lt;equation&gt;4\div 2 \equiv ?\pmod {10}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;看看表，哦，有俩答案……麻烦……&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b47da89569973b86eef6e02e380a6d5e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;417&quot; data-rawheight=&quot;429&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-b47da89569973b86eef6e02e380a6d5e&quot; data-watermark-src=&quot;v2-098c2314cb715cf34a98b5be510233ab&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;那么 &lt;equation&gt;1\div 2 \equiv ?\pmod {10}&lt;/equation&gt; 呢？无解……&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c68ede5b29bdf4724f839a605580e127_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;417&quot; data-rawheight=&quot;429&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-c68ede5b29bdf4724f839a605580e127&quot; data-watermark-src=&quot;v2-297c650b77a8953c851a32c1eaaf1f44&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;好吧，看来&lt;b&gt;这时候的“除法”是不适于定义的&lt;/b&gt;——可能没有结果、可能结果不唯一，就仿佛 &lt;equation&gt;0\div0&lt;/equation&gt; 、 &lt;equation&gt;3\div0&lt;/equation&gt; 一样，“除以0”是无定义的。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;于是，现在我来分析：对于给定的正整数 &lt;equation&gt;n&lt;/equation&gt; 和整数 &lt;equation&gt;a&lt;/equation&gt; ，如何寻找 &lt;equation&gt;z&lt;/equation&gt; 使得 &lt;equation&gt;1\div a\equiv z\pmod n&lt;/equation&gt; 这个问题。&lt;/p&gt;&lt;p&gt;如果 &lt;equation&gt;1\div a\equiv z\pmod n&lt;/equation&gt; ，那么 &lt;equation&gt;1\equiv a\times z\pmod n&lt;/equation&gt; ，由定义就有：存在整数 &lt;equation&gt;k&lt;/equation&gt; 使得 &lt;equation&gt;z\times a+(-k)\times n=1&lt;/equation&gt; ——而这就是“&lt;b&gt;裴蜀等式&lt;/b&gt;”（见“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/32504576&quot;&gt;凑邮资问题&lt;/a&gt;”）。&lt;/p&gt;&lt;p&gt;于是，这样的整数 &lt;equation&gt;z&lt;/equation&gt; 存在&lt;b&gt;当且仅当 &lt;equation&gt;a,n&lt;/equation&gt; 互素&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;所以之前的&lt;equation&gt;1\div 2 \equiv ?\pmod 7&lt;/equation&gt; 有解而&lt;equation&gt;1\div 2 \equiv ?\pmod {10}&lt;/equation&gt; 无解。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;当 &lt;equation&gt;n&lt;/equation&gt; 是素数时候，&lt;equation&gt;1\sim n-1&lt;/equation&gt; 都与之互素，因此任一个 &lt;equation&gt;1\leq a\leq n-1&lt;/equation&gt; ，都存在某个 &lt;equation&gt;1\leq b \leq n-1&lt;/equation&gt; ，使得 &lt;equation&gt;a\times b\equiv 1\pmod n&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;这时称这个 &lt;equation&gt;b&lt;/equation&gt; 为“ &lt;equation&gt;a&lt;/equation&gt; 模 &lt;equation&gt;n&lt;/equation&gt; 的逆”，记作 &lt;equation&gt;b=a^{-1}\pmod n&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;（就类似于实数世界里面， &lt;equation&gt;3^{-1}=1/3&lt;/equation&gt; ， &lt;equation&gt;3\times3^{-1}=1&lt;/equation&gt; 。）&lt;/p&gt;&lt;p&gt;例如 &lt;equation&gt;n=7&lt;/equation&gt; 时， &lt;equation&gt;1=1^{-1}\pmod 7&lt;/equation&gt; ， &lt;equation&gt;4=2^{-1}\pmod 7&lt;/equation&gt; ， &lt;equation&gt;5=3^{-1}\pmod 7&lt;/equation&gt; ， &lt;equation&gt;2=4^{-1}\pmod 7&lt;/equation&gt; ， &lt;equation&gt;3=5^{-1}\pmod 7&lt;/equation&gt; ， &lt;equation&gt;6=6^{-1}\pmod 7&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;这时，计算 &lt;equation&gt;5\div 2 \equiv ?\pmod 7&lt;/equation&gt; ，事实上就是计算 &lt;equation&gt;5\times 2^{-1} \equiv 5\times 4\equiv 20\equiv6\pmod 7&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是有如下计算表：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1a4ad553f8112aa5999a90dd1b07d6a6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;303&quot; data-rawheight=&quot;315&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-1a4ad553f8112aa5999a90dd1b07d6a6&quot; data-watermark-src=&quot;v2-644f8e9a3f421a9c5fff7601a2375590&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;是的，前面的符号有些混乱，说法也不严谨。&lt;/p&gt;&lt;p&gt;事实上，前面是采用了“直观易懂”的叙述方式；而严谨表述应该使用“&lt;b&gt;剩余类&lt;/b&gt;”。&lt;/p&gt;&lt;p&gt;设 &lt;equation&gt;n&lt;/equation&gt; 是一个正整数，则整数集上的“模 &lt;equation&gt;n&lt;/equation&gt; 同余”关系是一个&lt;b&gt;等价关系&lt;/b&gt;。 &lt;equation&gt;A_i=\{x|x\equiv i \pmod n\}&lt;/equation&gt; ， &lt;equation&gt;0\leq i\leq n-1&lt;/equation&gt; ，则 &lt;equation&gt;π=\{A_0, A_1, …, A_{n-1}\}&lt;/equation&gt; 就是整数集&lt;/p&gt;&lt;p&gt;的一个划分。对于整数 &lt;equation&gt;x&lt;/equation&gt; ，用 &lt;equation&gt;\bar{x}&lt;/equation&gt; 或 &lt;equation&gt;\left[ x \right]&lt;/equation&gt; 表示 &lt;equation&gt;x&lt;/equation&gt; 所在的等价类，称作&lt;equation&gt;x&lt;/equation&gt; 所在的&lt;b&gt;剩余类&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;当 &lt;equation&gt;x\equiv y\pmod n&lt;/equation&gt; 时，有 &lt;equation&gt;\bar{x}=\bar{y}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;在剩余类上可以定义“加法”、“减法”、“乘法”。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;\bar{x}+\bar{y}=\overline {x+y}&lt;/equation&gt; ；&lt;/li&gt;&lt;li&gt;&lt;equation&gt;\bar{x}-\bar{y}=\overline {x-y}&lt;/equation&gt; ；&lt;/li&gt;&lt;li&gt;&lt;equation&gt;\bar{x}\times\bar{y}=\overline {x\times y}&lt;/equation&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;当 &lt;equation&gt;y&lt;/equation&gt; 与 &lt;equation&gt;n&lt;/equation&gt; 互素时，可以定义 &lt;equation&gt;\bar{y}^{-1}&lt;/equation&gt; ，并可以定义 &lt;equation&gt;\bar{x}\div\bar{y}=\bar {x}\times \bar{y}^{-1}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;实际上，这也就构成&lt;b&gt;有限域（finite&lt;/b&gt; &lt;b&gt;field）&lt;/b&gt;中的&lt;b&gt;素域（prime field）&lt;/b&gt;。&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-09-14-44523169</guid>
<pubDate>Fri, 14 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>“德·布鲁因”魔术</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-09-08-44064699.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44064699&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-c0b9be1e47ed1935eb58ca4916b66635_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;首先需要介绍一下“&lt;b&gt;切牌&lt;/b&gt;”的概念：将一摞扑克中上面的若干张放到一摞的最下面称作一次切牌：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9961e67fe74d4588fa9a250b54f6cf89_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;853&quot; data-rawheight=&quot;339&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9961e67fe74d4588fa9a250b54f6cf89&quot; data-watermark-src=&quot;v2-d7f6e9423c60b099273a33d3d1818eee&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;如果将纸牌视作一个循环序列（即最下面一张牌的“下1张”是顶端的一张），则&lt;b&gt;切牌并不改变纸牌之间的前后相邻关系&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;魔术师邀请5位丝毫不知情的观众参加；&lt;/p&gt;&lt;ul&gt;&lt;li&gt;拿出16张背面朝上的纸牌交给第1位观众；&lt;/li&gt;&lt;li&gt;请第1位观众随意地切牌任意多次后将这叠纸牌交给第2位观众；&lt;/li&gt;&lt;li&gt;第2位观众取走最上面的一张后将剩下的纸牌交给第3位；&lt;/li&gt;&lt;li&gt;第3位观众取走最上面的一张后将剩下的纸牌交给第4位；&lt;/li&gt;&lt;li&gt;第4位观众取走最上面的一张后将剩下的纸牌交给第5位；&lt;/li&gt;&lt;li&gt;第5位观众取走最上面的一张。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;魔术师（故弄玄虚后）请第2-5位观众中&lt;b&gt;取到红色花色纸牌者举一下手&lt;/b&gt;；&lt;/p&gt;&lt;p&gt;魔术师（再次故弄玄虚后）&lt;b&gt;道出&lt;/b&gt;第2-5位观众手中的纸牌。&lt;/p&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic3.zhimg.com/80/v2-a168ff90926104f9a5e74ac7f0e94e42_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/1021836188742791168&quot; data-name=&quot;“德·布鲁因”魔术&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;1021836188742791168&quot;&gt;&lt;/video&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;魔术揭秘&lt;/b&gt;&lt;/p&gt;&lt;p&gt;游戏的关键就在于16张纸牌排为一个&lt;b&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44034666&quot;&gt;德·布鲁因序列&lt;/a&gt;&lt;/b&gt;：红色表示1，黑色表示0。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a6f34228991c80dde59eea6cf6757642_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;371&quot; data-rawheight=&quot;332&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-a6f34228991c80dde59eea6cf6757642&quot; data-watermark-src=&quot;v2-3f78a137e7c23c23738ddba34bff66b6&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;之后关键点在于：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;观众1的&lt;b&gt;切牌并不会改变&lt;/b&gt;这个循环的德·布鲁因序列；&lt;/li&gt;&lt;li&gt;而连续4个“红/黑”组合是&lt;b&gt;唯一&lt;/b&gt;的，所以对应的4张纸牌是&lt;b&gt;可以唯一确定&lt;/b&gt;的。例如下图就是观众2345都是“红红红红”&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9b8eee20405992538afdcabdcfb6a9c2_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;371&quot; data-rawheight=&quot;332&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9b8eee20405992538afdcabdcfb6a9c2&quot; data-watermark-src=&quot;v2-e05cf49563e65620a459c053f9f514e6&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;下面是一个小技巧：纸牌的点数可以采用一些便于记忆的方法。&lt;/p&gt;&lt;p&gt;例如，用红色表示1，黑色表示0后，所有的16种序列就可以列在下表中：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-02f99f452320bf4ff6bdd52971b5fcc6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;691&quot; data-rawheight=&quot;425&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-02f99f452320bf4ff6bdd52971b5fcc6&quot; data-watermark-src=&quot;v2-ed19368a204b2c6f7ec7cd6376ade64f&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;使用第1位表示花色：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5b709107b6737f5d8d72c748fe15b695_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;691&quot; data-rawheight=&quot;426&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-5b709107b6737f5d8d72c748fe15b695&quot; data-watermark-src=&quot;v2-a4ad41add9ce41ce78060917d4bde0cf&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;使用后三位的二进制值表示的值再加1m，作为牌的点数，于是每个序列就对应一张牌：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-14b709e4e795eac36dac6a5aa667a1cc_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;688&quot; data-rawheight=&quot;424&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-14b709e4e795eac36dac6a5aa667a1cc&quot; data-watermark-src=&quot;v2-3333283a2a37c911875fc655ee644689&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然后将牌拍成一圈，以该张牌开始的4位序列就是该张牌对应的序列：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ebe377e95c3814937a1b325eaa4fd617_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1057&quot; data-rawheight=&quot;429&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-ebe377e95c3814937a1b325eaa4fd617&quot; data-watermark-src=&quot;v2-cda269a04b4baccb51d4aeb3429726aa&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是只要记住了规则和德·布鲁因序列，这个魔术就变得简单了：&lt;/p&gt;&lt;p&gt;“第2-5位观众中取到红色花色纸牌者举一下手”事实上说明了4位序列，继而魔术师可以得到之后的三个序列，也就可以道出（计算出）四张牌。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;例如下述情形：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-9a9e6202704d1bef6473c403bb83288e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;443&quot; data-rawheight=&quot;200&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9a9e6202704d1bef6473c403bb83288e&quot; data-watermark-src=&quot;v2-b94af14ce2dc43307873969d7a5aa72f&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;第2位观众和第5位观众拿到红色牌，因此第2位观众开始的序列是0101，之后的3个序列分别是：1010、0100和1001。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-03e77012b21bae7379dfbba10eae4bc2_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;412&quot; data-rawheight=&quot;358&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-03e77012b21bae7379dfbba10eae4bc2&quot; data-watermark-src=&quot;v2-215f7f0fe499b661d2dbe379ed426798&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;得到：&lt;/p&gt;&lt;p&gt;第2位观众手中的牌是♠6；&lt;/p&gt;&lt;p&gt;第3位观众手中的牌是♡3；&lt;/p&gt;&lt;p&gt;第4位观众手中的牌是♠5；&lt;/p&gt;&lt;p&gt;第5位观众手中的牌是♡2。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;这里介绍的实际上是一个充分简化的版本，更复杂情况和更多技巧的介绍可参考：(美)珀西•迪亚科尼斯、葛立恒著，汪晓勤、黄友初译，《魔法数学：大魔术的数学灵魂》，上海科技教育出版社，2015.8）。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-704d9000d57e9026b0c8c7247ec7a033_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;412&quot; data-rawheight=&quot;589&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-704d9000d57e9026b0c8c7247ec7a033&quot; data-watermark-src=&quot;v2-c151a36a95e7ee20957059a451297faf&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-09-08-44064699</guid>
<pubDate>Sat, 08 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>德·布鲁因（de Bruijn）有向图和德·布鲁因序列</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-09-08-44034666.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/44034666&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-768aa806b2d179f06be37dd93bf696e7_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;在上一篇文章“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/43960965&quot;&gt;存储器轮&lt;/a&gt;”中，曾经引入了两个图： &lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fa4ced3add12bfb8984a67d6459a7f67_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;845&quot; data-rawheight=&quot;574&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-fa4ced3add12bfb8984a67d6459a7f67&quot; data-watermark-src=&quot;v2-8ae7a1926681a31c6ac6cd87dbaa2c1e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;事实上，这样的图的顶点集是 &lt;equation&gt;V=\{x_1x_2... x_n|x_i\in\{0, 1\}，i=1, 2, ..., n\}&lt;/equation&gt; ，从任意顶点 &lt;equation&gt;x_1x_2... x_n&lt;/equation&gt; 到2个其他顶点 &lt;equation&gt;x_2...x_n0&lt;/equation&gt; 和 &lt;equation&gt;x_2...x_n1&lt;/equation&gt; 分别各有一条有向边，它们称作&lt;b&gt;德•布鲁因（de Bruijn）有向图&lt;/b&gt; &lt;equation&gt;B(2, n)&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;equation&gt;B(2, n)&lt;/equation&gt; 还有其他两种等价定义。&lt;/p&gt;&lt;p&gt;&lt;b&gt;定义2：&lt;/b&gt; &lt;equation&gt;B(2, n)&lt;/equation&gt; 的顶点集合定义为 &lt;equation&gt;V=\{0, 1, ..., 2^n-1\}&lt;/equation&gt; ，有向边集合定义为 &lt;equation&gt;E=\{(x, y)|y\equiv2x(\bmod 2^n)或y\equiv2x+1(\bmod 2^n)\}&lt;/equation&gt; 。（它和之前定义的等价性是明显的）&lt;/p&gt;&lt;p&gt;例如上述两图等价于下图：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5bd0be321d2dab41b618a789c85820d8_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;754&quot; data-rawheight=&quot;476&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-5bd0be321d2dab41b618a789c85820d8&quot; data-watermark-src=&quot;v2-2441463dd7e3502e3f3386d6700cd81e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;介绍定义3之前需要先有向图上的“线图”：若在有向图 &lt;equation&gt;D&lt;/equation&gt; 中有两条有向边 &lt;equation&gt;(u, v)&lt;/equation&gt; 和 &lt;equation&gt;(v, w)&lt;/equation&gt; ，则在新的图 &lt;equation&gt;L(D)&lt;/equation&gt; 中画一条从代表边 &lt;equation&gt;(u, v)&lt;/equation&gt; 的顶点到代表边 &lt;equation&gt;(v, w)&lt;/equation&gt; 的顶点的有向边（如下图所示）。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-03b2418258970e8d9b9a09f54c8b35b0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1025&quot; data-rawheight=&quot;214&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-03b2418258970e8d9b9a09f54c8b35b0&quot; data-watermark-src=&quot;v2-ea81729517811c62d3e5a80c7c55730e&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;得到的 &lt;equation&gt;L(D)&lt;/equation&gt; 就称作 &lt;equation&gt;D&lt;/equation&gt; 的&lt;b&gt;线图（line graph）&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;例如下图上的线图就是下图下：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9a31c97de1772d42ab4e552dfc403055_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;568&quot; data-rawheight=&quot;409&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9a31c97de1772d42ab4e552dfc403055&quot; data-watermark-src=&quot;v2-1dfd2ef3ae55991717e01490c70e0d5f&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;定义3：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;(1) 定义 &lt;equation&gt;B(2, 1)&lt;/equation&gt; 如下图所示：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9dbd1b57149f9dffa2f27de373cf5c2f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;405&quot; data-rawheight=&quot;100&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9dbd1b57149f9dffa2f27de373cf5c2f&quot; data-watermark-src=&quot;v2-45d8139706fb0232b829e5530d2a9268&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;(2) &lt;equation&gt;n\geq2&lt;/equation&gt; 时， &lt;equation&gt;B(2, n)&lt;/equation&gt; 为 &lt;equation&gt;B(2, n-1)&lt;/equation&gt; 的线图，即 &lt;equation&gt;B(2, n)=L(B(2, n-1))&lt;/equation&gt; ，在 &lt;equation&gt;B(2, n-1)&lt;/equation&gt; 中由顶点 &lt;equation&gt;x_1x_2...x_n&lt;/equation&gt; 指向顶点 &lt;equation&gt;x_2...x_nx_{n+1}&lt;/equation&gt; 的有向边在 &lt;equation&gt;B(2, n)&lt;/equation&gt; 中命名为顶点 &lt;equation&gt;x_1x_2...x_nx_{n+1}&lt;/equation&gt; 。（例如 &lt;equation&gt;B(2, 2)&lt;/equation&gt; 如下图左所示， &lt;equation&gt;B(2, 3)&lt;/equation&gt; 如下图右所示）&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-0d07be00c3f781a424141cbe21225cc0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;809&quot; data-rawheight=&quot;432&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-0d07be00c3f781a424141cbe21225cc0&quot; data-watermark-src=&quot;v2-45fc3b90e5abb5b5567d4437a5ebfef2&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;由 &lt;equation&gt;B(2, n)&lt;/equation&gt; 中欧拉回路得到的0-1串称作长度 &lt;equation&gt;2^n&lt;/equation&gt; 的&lt;b&gt;德·布鲁因（de Bruijn）序列&lt;/b&gt;。例如由下图左得到长度16的德·布鲁因序列1111011001010000。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9e4670d59cd994b0d3834a087686fdb6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;860&quot; data-rawheight=&quot;438&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9e4670d59cd994b0d3834a087686fdb6&quot; data-watermark-src=&quot;v2-6816b822bd218a1fab6cb0330b34d2d3&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;长度 &lt;equation&gt;2^n&lt;/equation&gt; 的德·布鲁因序列还有其他的构造方法，举例如下。&lt;/p&gt;&lt;p&gt;&lt;b&gt;其他方法1：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;令 &lt;equation&gt;m=2^{n-1}&lt;/equation&gt; ，第一行写下 &lt;equation&gt;m&lt;/equation&gt; 个“1”和 &lt;equation&gt;m&lt;/equation&gt; 个“0”，第二行写下 &lt;equation&gt;m&lt;/equation&gt; 个“10”， &lt;equation&gt;n=3&lt;/equation&gt; 的情况如下图所示：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-803384dd95818e925d01bb044c88def7_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;319&quot; data-rawheight=&quot;273&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-803384dd95818e925d01bb044c88def7&quot; data-watermark-src=&quot;v2-ee9c83b03561ee6358066995a2f5bc47&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;上一行编号和“1”或“0”之间的映射关系为： &lt;equation&gt;f(i)=1，f(m+i)=0，1\leq i\leq m&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;之后将第一行和第二行的“1”自左而右依次一一相连、将第一行和第二行的“0”也自左而右依次一一相连。连线实际上构成了位置编号的置换 &lt;equation&gt;p(i)=2i-1，p(m+i)=2i，1\leq i\leq m&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;equation&gt;n=3&lt;/equation&gt; 的情况如下图所示：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-6102635816ba638c9589f466387ca596_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;319&quot; data-rawheight=&quot;273&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-6102635816ba638c9589f466387ca596&quot; data-watermark-src=&quot;v2-3d22387b1f390c0fc6e91a498dfcd995&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;将这个置换写成轮换的乘积的形式（每个轮换中最小的数值是递增的，且每个轮换都满足其中最小数值在第一个位置）。自左而右逐个写出各个轮换中数值对应第一行各个位置的“1”或“0”，则得到有 &lt;equation&gt;2^n&lt;/equation&gt; 个元素的德·布鲁因序列。&lt;/p&gt;&lt;p&gt;&lt;equation&gt;n=3&lt;/equation&gt; 的情况如下图所示：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8553267c3d7f3a844cf33a86e00841c0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;319&quot; data-rawheight=&quot;273&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-8553267c3d7f3a844cf33a86e00841c0&quot; data-watermark-src=&quot;v2-2450e84997e7f291afcf9c1e17388c53&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;置换分解为轮换的乘积后，符合要求的表示为(1)(235)(476)(8)，对应的序列为 &lt;equation&gt;f(1)f(2)f(3)f(5)f(4)f(7)f(6)f(8)=11101000&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;equation&gt;n=2&lt;/equation&gt; 时如下图所示，置换分解为轮换的乘积后，符合要求的表示为(1)(23)(4)，对应的序列为 &lt;equation&gt;f(1)f(2)f(3)f(4)=1100&lt;/equation&gt; 。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-bca9e4176e89c0ff2be2aed05418411e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;168&quot; data-rawheight=&quot;271&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;equation&gt;n=4&lt;/equation&gt; 时的情况如下图所示。置换分解为轮换的乘积后，符合要求的表示为(1)(2, 3, 5, 9)(4, 7, 13, 10)(6, 11)(8, 15, 14, 12)(16)，对应的序列为 &lt;equation&gt;f(1)f(2)f(3)f(5)f(9)f(4)f(7)f(13)f(10)f(6)f(11)f(8)f(15)f(14)f(12)f(16)=1111011001010000&lt;/equation&gt; 。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-026d4e86bc662b3b9b3d986cde975133_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;622&quot; data-rawheight=&quot;255&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-026d4e86bc662b3b9b3d986cde975133&quot; data-watermark-src=&quot;v2-7844c8b7343e9ac09d7d9e49b04ac7c4&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;b&gt;其他方法2：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;马丁（M.A.Martin）1934证明了以下贪婪算法对所有的 &lt;equation&gt;n\geq2&lt;/equation&gt; 都可以构造出一个长度 &lt;equation&gt;2^n&lt;/equation&gt; 的德·布鲁因序列：&lt;/p&gt;&lt;p&gt;1. 写出 &lt;equation&gt;n&lt;/equation&gt; 个0构成序列开始的 &lt;equation&gt;n&lt;/equation&gt; 项；&lt;/p&gt;&lt;p&gt;2. 如果在序列尾部添加一个1后，和前 &lt;equation&gt;n-1&lt;/equation&gt; 项相连构成已经出现过的长为 &lt;equation&gt;n&lt;/equation&gt; 的0-1子串，则在序列尾部添加一个0；否则在序列尾部添加一个1。&lt;/p&gt;&lt;p&gt;3. 序列若还不够 &lt;equation&gt;2^n&lt;/equation&gt; 项，则返回步骤2；否则序列就是一个长度 &lt;equation&gt;2^n&lt;/equation&gt; 的德·布鲁因序列。&lt;/p&gt;&lt;p&gt;&lt;equation&gt;n=3&lt;/equation&gt; 时算法过程的情况如下表所示：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ffdb8550934f114a0bb18102ab25c110_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;848&quot; data-rawheight=&quot;380&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-ffdb8550934f114a0bb18102ab25c110&quot; data-watermark-src=&quot;v2-31750571fc7f063ce7ba630533e32fec&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;equation&gt;n= 4&lt;/equation&gt; 时算法过程的情况如下表所示：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-01d75279892dc5345a0a40c25c503576_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;848&quot; data-rawheight=&quot;547&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-01d75279892dc5345a0a40c25c503576&quot; data-watermark-src=&quot;v2-897f8c411a422f08dce28adb04b49970&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;德·布鲁因有向图在并行计算的网络拓扑方面得到了很多研究和应用。&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-09-08-44034666</guid>
<pubDate>Sat, 08 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>存储器轮</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-09-08-43960965.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/43960965&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-13300e09dbd1806d6aee103a32ed77de_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;考虑如下图所示，由4个0和4个1组成的一个圆形排列：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6c726270f8852e1aca60da8605c08e84_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;454&quot; data-rawheight=&quot;453&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-6c726270f8852e1aca60da8605c08e84&quot; data-watermark-src=&quot;v2-4f23871c907949f807d031abd752f3ba&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;每次顺时针连续读三个数字的话，一共有8种方法（8个开始位置）。&lt;/p&gt;&lt;p&gt;上图所示的情况延内侧弧线读出的是010，而延外侧弧线读出的是101。&lt;/p&gt;&lt;p&gt;而这8种读法就恰好包含了所有长度为3的0-1序列：（依次是）010、101、011、111、110、111、100、000（下一次又回到了010）。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-ec6c49aa93054d980d5c8a0157b40ad6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2146&quot; data-rawheight=&quot;1019&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-ec6c49aa93054d980d5c8a0157b40ad6&quot; data-watermark-src=&quot;v2-745aecf0d8dac0c2f7686f57a78002ca&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是这个圆周可以描述所有8个3位0-1串，而仅需要8位0-1数字。&lt;/p&gt;&lt;p&gt;我们称其为（3位）&lt;b&gt;存储器轮&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;下面我们将这个问题一般化：能否将&lt;b&gt;若干个&lt;/b&gt;二进制数字0或1排列成圆，使得所有的相邻的 &lt;equation&gt;n&lt;/equation&gt; 元组（即指顺时针连续读 &lt;equation&gt;n&lt;/equation&gt; 个数字）包括所有的 &lt;equation&gt;2^n&lt;/equation&gt; 个 &lt;equation&gt;n&lt;/equation&gt; 位二进制序列&lt;b&gt;一次且仅一次&lt;/b&gt;?&lt;/p&gt;&lt;hr&gt;&lt;p&gt;我们首先分析一些基本结果：&lt;/p&gt;&lt;p&gt;&lt;b&gt;问题1：&lt;/b&gt;上面提到的“&lt;b&gt;若干个&lt;/b&gt;”到底是多少个？&lt;/p&gt;&lt;p&gt;&lt;b&gt;回答1：&lt;/b&gt; &lt;equation&gt;2^n&lt;/equation&gt; 个。&lt;/p&gt;&lt;p&gt;考虑&lt;equation&gt;2^n&lt;/equation&gt; 个 &lt;equation&gt;n&lt;/equation&gt; 位二进制序列的第一位，一定是在彼此不同的位置，而且恰好填满圆周。&lt;/p&gt;&lt;p&gt;&lt;b&gt;问题2：&lt;/b&gt;这 &lt;equation&gt;2^n&lt;/equation&gt; 个0或1中，有多少个0？多少个1？&lt;/p&gt;&lt;p&gt;&lt;b&gt;回答2：&lt;/b&gt;各有 &lt;equation&gt;2^{n-1}&lt;/equation&gt; 个。&lt;/p&gt;&lt;p&gt;考虑 &lt;equation&gt;2^n&lt;/equation&gt; 个 &lt;equation&gt;n&lt;/equation&gt; 位二进制序列的第一位，一定是一半0一半1，于是圆周上也一定是一半0一半1。&lt;/p&gt;&lt;p&gt;&lt;b&gt;问题3：&lt;/b&gt;能否将 &lt;equation&gt;2^{n-1}&lt;/equation&gt; 个0和 &lt;equation&gt;2^{n-1}&lt;/equation&gt; 个1排列成圆，使得所有的相邻的 &lt;equation&gt;n&lt;/equation&gt; 元组（即指顺时针连续读 &lt;equation&gt;n&lt;/equation&gt; 个数字）包括所有的 &lt;equation&gt;2^n&lt;/equation&gt; 个 &lt;equation&gt;n&lt;/equation&gt; 位二进制序列&lt;b&gt;一次且仅一次&lt;/b&gt;?&lt;br&gt;&lt;b&gt;分析3 （方法1）&lt;/b&gt;：&lt;/p&gt;&lt;p&gt;以 &lt;equation&gt;n=3&lt;/equation&gt; 为例，考虑“相邻”的两个三元组，必然是“&lt;i&gt;xyz&lt;/i&gt;”和“&lt;i&gt;yzw&lt;/i&gt;”的形式。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-df2c0e17d4a84dc27cdcfd516b53af7d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;376&quot; data-rawheight=&quot;392&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-df2c0e17d4a84dc27cdcfd516b53af7d&quot; data-watermark-src=&quot;v2-147d876fa0bcfd602bd81a1d5ff8b30c&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是，就把每一个三元组都作为顶点（一共有8个顶点），在具有“&lt;i&gt;xyz&lt;/i&gt;”和“&lt;i&gt;yzw&lt;/i&gt;”形式的两个顶点之间，从顶点&lt;i&gt;xyz&lt;/i&gt;到顶点&lt;i&gt;yzw&lt;/i&gt;引一条有向边，形成如下图所示的一个有向图：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d4c00e940c554ee96743d57cf544d113_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;319&quot; data-rawheight=&quot;398&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-d4c00e940c554ee96743d57cf544d113&quot; data-watermark-src=&quot;v2-d9d187af0fd37e39ff6e57440c0ae7f5&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;之后在图中寻找&lt;b&gt;哈密尔顿回路&lt;/b&gt;（定义参看&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29282544&quot;&gt;格雷码与超立方体的哈密尔顿回路&lt;/a&gt;）即可。&lt;/p&gt;&lt;p&gt;例如下图所示的哈密尔顿回路&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-081ab5558ec5df1989388e50d2ef5478_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;320&quot; data-rawheight=&quot;397&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-081ab5558ec5df1989388e50d2ef5478&quot; data-watermark-src=&quot;v2-b14fe85042d07c9bfb2241cc7bd82d2f&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;它就是  &lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9b36509df47593795dd00206b780589a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;509&quot; data-rawheight=&quot;402&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-9b36509df47593795dd00206b780589a&quot; data-watermark-src=&quot;v2-b4944632648bd507b5fc12c9ac481b81&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是，形成如下图的三位存储器轮。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d5dc58bdabb0b2d8d5f50cd74a4d9473_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;444&quot; data-rawheight=&quot;453&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-d5dc58bdabb0b2d8d5f50cd74a4d9473&quot; data-watermark-src=&quot;v2-6a54be38d90517612e68ef9d0fec04e5&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;问题3-1：&lt;/b&gt; &lt;equation&gt;n=4&lt;/equation&gt; 时，是否存在四位存储器轮？&lt;/p&gt;&lt;p&gt;&lt;b&gt;分析3-1（方法1）&lt;/b&gt;：如果沿用之前的方法，那么图将是——&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e833789dc054300b107361dc114fe57a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;846&quot; data-rawheight=&quot;687&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-e833789dc054300b107361dc114fe57a&quot; data-watermark-src=&quot;v2-d0a2cc823226c5aed89f9fb0b058c66a&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;在“哈密尔顿回路的构造又缺乏有效算法”的前提下（涉及到&quot;P=NP?&quot;问题），至少我个人不认为上图中寻找哈密尔顿回路是一个愉快的任务。当 &lt;equation&gt;n\geq5&lt;/equation&gt; 时候，我就连图都不想画了。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;进而，必须（只好）寻找其他思路：&lt;/p&gt;&lt;p&gt;&lt;b&gt;问题3：&lt;/b&gt;能否将 &lt;equation&gt;2^{n-1}&lt;/equation&gt; 个0和 &lt;equation&gt;2^{n-1}&lt;/equation&gt; 个1排列成圆，使得所有的相邻的 &lt;equation&gt;n&lt;/equation&gt; 元组（即指顺时针连续读 &lt;equation&gt;n&lt;/equation&gt; 个数字）包括所有的 &lt;equation&gt;2^n&lt;/equation&gt; 个 &lt;equation&gt;n&lt;/equation&gt; 位二进制序列&lt;b&gt;一次且仅一次&lt;/b&gt;? &lt;/p&gt;&lt;p&gt;&lt;b&gt;分析3 （方法2）&lt;/b&gt;：1946年，古德（I.J.Good）在一篇关于数论的论文中，使用不同的数学模型解决了这个问题。&lt;/p&gt;&lt;p&gt;以 &lt;equation&gt;n=3&lt;/equation&gt; 为例，将三元组&lt;i&gt;xyz&lt;/i&gt;作为顶点 “&lt;i&gt;xy&lt;/i&gt;” 到顶点 “&lt;i&gt;yz&lt;/i&gt;” 的有向边。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-33899fcb4ce7a27b03029b34f1d6b2fe_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;218&quot; data-rawheight=&quot;94&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-33899fcb4ce7a27b03029b34f1d6b2fe&quot; data-watermark-src=&quot;v2-fdc0907954635db3679b50649705b922&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;考虑“相邻”的两个三元组，必然是“&lt;i&gt;xyz&lt;/i&gt;”和“&lt;i&gt;yzw&lt;/i&gt;”的形式，将用顶点“&lt;i&gt;yz&lt;/i&gt;”连接。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-7e20289205328af05c2eba3b7e689067_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;239&quot; data-rawheight=&quot;196&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-7e20289205328af05c2eba3b7e689067&quot; data-watermark-src=&quot;v2-e7d0c894b6d3f912cf7851b1702f39f7&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是，这时，就形成一个与前述不同的有向图：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d2ee35f1f06c637a9ce986c9c40a991f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;331&quot; data-rawheight=&quot;510&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-d2ee35f1f06c637a9ce986c9c40a991f&quot; data-watermark-src=&quot;v2-9b2b0e381e9730005dd15fc36a89a8c6&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;因为它所有顶点的入度都等于出度，所以它是一个&lt;b&gt;有向欧拉图&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;其中一条欧拉回路是：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-96728e9b6ee8dd84827651f749f9f535_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;455&quot; data-rawheight=&quot;402&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-96728e9b6ee8dd84827651f749f9f535&quot; data-watermark-src=&quot;v2-1f960b2a66c0e8450cb14f1a06756e6b&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;得到同样的存储器轮。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;equation&gt;n=4&lt;/equation&gt; 时，下左图中存在欧拉回路（下中图所示），由之可以得到下右图所示的四位存储器轮。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-cceb98b7b54ac7ee70dc0be8c652e29c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1305&quot; data-rawheight=&quot;574&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-cceb98b7b54ac7ee70dc0be8c652e29c&quot; data-watermark-src=&quot;v2-06b4fbddfc5347fd3d3a9642d9125772&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;当 &lt;equation&gt;n\geq3&lt;/equation&gt; 时（ &lt;equation&gt;n=1,2&lt;/equation&gt; 的情况手绘都可以得到存储器轮），问题就转换为在一个&lt;b&gt;有向图中寻找欧拉回路&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;而有向图存在欧拉回路的充要条件是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;有向图连通；&lt;/li&gt;&lt;li&gt;每个顶点的入度等于出度。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;于是我们就来看看我们构造出来的图是否满足这两个条件——&lt;/p&gt;&lt;p&gt;(1) 在任意两个顶点 &lt;equation&gt;a_1a_2…a_{n-1}&lt;/equation&gt; 和 &lt;equation&gt;b_1b_2…b_{n-1}&lt;/equation&gt; 之间，是否存在道路？&lt;/p&gt;&lt;p&gt;答案是&lt;b&gt;肯定&lt;/b&gt;的。&lt;/p&gt;&lt;p&gt;我们可以这样做：&lt;/p&gt;&lt;p&gt;将 &lt;equation&gt;a_1a_2…a_{n-1}&lt;/equation&gt; 和 &lt;equation&gt;b_1b_2…b_{n-1}&lt;/equation&gt; 连着写下来，&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-742885cd83b376deef8de20c8a684905_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;463&quot; data-rawheight=&quot;61&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;再使用一个大小为 &lt;equation&gt;n-1&lt;/equation&gt; 的“窗口”从左一直走到右，&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-545e10ec9433097091bf7dfb345fdcba_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;466&quot; data-rawheight=&quot;331&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-545e10ec9433097091bf7dfb345fdcba&quot; data-watermark-src=&quot;v2-b890bbef7da3e67162874ceefa5c0042&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;就得到了顶点 &lt;equation&gt;a_1a_2…a_{n-1}&lt;/equation&gt; 和 &lt;equation&gt;b_1b_2…b_{n-1}&lt;/equation&gt; 之间的有向道路。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-94bf0e127da0d978d49262cf23c51647_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;735&quot; data-rawheight=&quot;210&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-94bf0e127da0d978d49262cf23c51647&quot; data-watermark-src=&quot;v2-beeb380f4e9bad2bb85c4c725a47ef68&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;(2)  每个顶点的&lt;b&gt;入度和出度都是2&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;考察某个顶点“xy…zw” ，由图的构造方法很容易得到它有2条入边和2条出边。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8eae52b526a44ca171031c63e4f6463a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;540&quot; data-rawheight=&quot;207&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-8eae52b526a44ca171031c63e4f6463a&quot; data-watermark-src=&quot;v2-100eae5340c27d920c48dbe320a4e4a4&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;因此所有顶点的入度和出度都等于2。&lt;/p&gt;&lt;p&gt;由以上二者可以得到：&lt;b&gt;该图是欧拉图，每一条欧拉回路对应一个存储器轮。 &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-09-08-43960965</guid>
<pubDate>Sat, 08 Sep 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>汉诺塔杂谈（六）——变体之“循环移动”</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-06-03-36124436.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36124436&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0526c4c14869c7ff79bb6efd32e77b9d_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;（抱歉更新速度很慢，因为学生的毕业季有很多事情要处理。）&lt;/p&gt;&lt;p&gt;所谓“循环移动” 就是在原始的汉诺塔问题（参看“&lt;a href=&quot;http://zhuanlan.zhihu.com/p/36075202&quot;&gt;汉诺塔杂谈（一）&lt;/a&gt;”）上增加一个要求：&lt;/p&gt;&lt;p&gt;设A柱、B柱、C柱（及A柱）构成一个顺时针方向的三角形，&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6a9f4cb7f4ce28b6f69ec9e9a5e5ecc8_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;489&quot; data-rawheight=&quot;488&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-6a9f4cb7f4ce28b6f69ec9e9a5e5ecc8&quot; data-watermark-src=&quot;v2-aab6711aa2ae182ac9b4399572636321&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;所有的移动&lt;b&gt;必须&lt;/b&gt;是顺时针方向，即只能：或从A柱到B柱；或从B柱到C柱；或从C柱到A柱（如下图所示）。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-db5228c95b545529e80cc12221708662_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;791&quot; data-rawheight=&quot;326&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-db5228c95b545529e80cc12221708662&quot; data-watermark-src=&quot;v2-e7aed970707b8adc67d90611be0a53ae&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;目标是将原来都处于A柱的 &lt;equation&gt;n&lt;/equation&gt; 个盘子都移到C柱。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-41f52f9e8b39c61386c4b5224999fe48_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;832&quot; data-rawheight=&quot;477&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-41f52f9e8b39c61386c4b5224999fe48&quot; data-watermark-src=&quot;v2-fff2f0aa5a63bf6473330520910c2a32&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;只有1个盘子时，那么需要两步：1号盘A→B、1号盘B→C。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;有2个盘子时，那么需要将2号盘从A“移到”（不止一步）C，就必须先后经历将2号盘从A移到B、将2号盘从B移到C。&lt;/p&gt;&lt;p&gt;而要将2号盘从A移到B，就得先&lt;b&gt;把1号盘从A移到C&lt;/b&gt;；要将2号盘从B移到C，就得先&lt;b&gt;把1号盘再从C移到A&lt;/b&gt;；最后再把1号盘从A移到C。&lt;/p&gt;&lt;p&gt;但是这时要注意的是：&quot;把1号盘从A移到C&quot;和“把1号盘再从C移到A”是&lt;b&gt;不同&lt;/b&gt;的问题！！！通俗地讲，前者是要“跨过”B柱的、是不“相邻”的移动，而后者则不然。&lt;/p&gt;&lt;p&gt;所以，有2个盘子时，可以采用下表方式分析（写的有点粗略，应该能看懂吧= =），黄色部分可以看作类似原问题的子问题，而粉色部分和黄色部分是不同的。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e23badcddf7753f58ae54fc514ab42de_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;484&quot; data-rawheight=&quot;352&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-e23badcddf7753f58ae54fc514ab42de&quot; data-watermark-src=&quot;v2-9d0c032a2d925d932d4f0ce5a736ac53&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;更一般性地讲，有 &lt;equation&gt;n&lt;/equation&gt; 个盘子时，要采用如下的移动步骤：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;先将A柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到C柱上（这是一个类似于自己的子问题）;&lt;/li&gt;&lt;li&gt;接着将最大的盘子（ &lt;equation&gt;n&lt;/equation&gt; 号）从A柱移到B柱；&lt;/li&gt;&lt;li&gt;之后再将C柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到A柱上（注意，这不是一个类似于自己的子问题！！！）；&lt;/li&gt;&lt;li&gt;接着将最大的盘子（ &lt;equation&gt;n&lt;/equation&gt; 号）从B柱移到C柱；&lt;/li&gt;&lt;li&gt;最后再将A柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到C柱上（这还是一个类似于自己的子问题）。&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7991a9e345fa0f33270da29cf720300e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;348&quot; data-rawheight=&quot;296&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-7991a9e345fa0f33270da29cf720300e&quot; data-watermark-src=&quot;v2-dd98fc7dcd9beb4f5da12bd94be39699&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;因此我们需要定义一个“附属问题”：设所有的移动&lt;b&gt;必须&lt;/b&gt;是顺时针方向，即只能：或从A柱到B柱；或从B柱到C柱；或从C柱到A柱。目标是将原来都处于A柱的 &lt;equation&gt;n&lt;/equation&gt; 个盘子都移到B柱。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-db751b3e5363a942c259f9419510f198_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;832&quot; data-rawheight=&quot;477&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-db751b3e5363a942c259f9419510f198&quot; data-watermark-src=&quot;v2-86dfac592428192b10c0b28c8fef0c78&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;可以分析这时的解法是：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;先将A柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到C柱上;&lt;/li&gt;&lt;li&gt;接着将最大的盘子（ &lt;equation&gt;n&lt;/equation&gt; 号）从A柱移到B柱；&lt;/li&gt;&lt;li&gt;之后再将C柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到B柱上。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;如果用表格表示的话就是：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-002985ab7a279d1c469e17c62ee53827_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;348&quot; data-rawheight=&quot;188&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-002985ab7a279d1c469e17c62ee53827&quot; data-watermark-src=&quot;v2-011c3cd220dc4b4b267b25e3d86a9dc4&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;下面来计算移动步数：&lt;/p&gt;&lt;p&gt;假设最初的“循环移动”问题的解法的步数为 &lt;equation&gt;G(n)&lt;/equation&gt; ，而“循环移动”问题的“附属问题”解法的步数为 &lt;equation&gt;F(n)&lt;/equation&gt;。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-326fb43211415615d43a4dcc9af4a514_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1827&quot; data-rawheight=&quot;477&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-326fb43211415615d43a4dcc9af4a514&quot; data-watermark-src=&quot;v2-e39edf8d63afbc7d78f986d871ac9a94&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;则由解法描述有：&lt;/p&gt;&lt;p&gt;&lt;equation&gt; \begin{equation} \left\{ \begin{aligned} G(n)&amp;amp;=G(n-1)+1+F(n-1)+1+G(n-1)\\ F(n)&amp;amp;=G(n-1)+1+G(n-1)\\ \end{aligned} \right. \end{equation}&lt;/equation&gt; ， &lt;equation&gt;G(1)=2&lt;/equation&gt; ， &lt;equation&gt;F(1)=1&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;我将采用两种方法来求解。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;（一） 基于“2阶常系数线性齐次递推关系”的解法。&lt;/p&gt;&lt;p&gt;将 &lt;equation&gt;F(n)&lt;/equation&gt; 代入 &lt;equation&gt;G(n)&lt;/equation&gt; ，得到：&lt;/p&gt;&lt;p&gt;&lt;equation&gt; \begin{equation} \begin{aligned} G(n)&amp;amp;=2G(n-1)+F(n-1)+2\\ &amp;amp;=2G(n-1)+(2G(n-2)+1)+2\\ &amp;amp;=2G(n-1)+2G(n-2)+3 \end{aligned} \end{equation}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;之后类似于“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36075202&quot;&gt;汉诺塔杂谈（一）&lt;/a&gt;”和“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36124427&quot;&gt;汉诺塔杂谈（五）——变体之“临近移动”&lt;/a&gt;”的方法，处理一下常数“3”：令 &lt;equation&gt;g(n)=G(n)+1&lt;/equation&gt; ，则得到 &lt;equation&gt;g(n)=2g(n-1)+2g(n-2) &lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;——这就是一个“&lt;b&gt;2阶常系数线性齐次递推关系&lt;/b&gt;”：&lt;/p&gt;&lt;p&gt;假设序列 &lt;equation&gt;a(n)&lt;/equation&gt; 满足递推关系 &lt;equation&gt;a(n)=c_1a(n-1)+c_2a(n-2)&lt;/equation&gt; ，其中 &lt;equation&gt;c_1,c_2&lt;/equation&gt; 为已知常数，又 &lt;equation&gt;a(0),a(1)&lt;/equation&gt; 均已知（或者&lt;equation&gt;a(1),a(2)&lt;/equation&gt; 均已知，可由递推关系逆推出 &lt;equation&gt;a(0)&lt;/equation&gt; ）。&lt;/p&gt;&lt;p&gt;称 &lt;equation&gt;x^2-c_1x-c_2=0&lt;/equation&gt; 为该递推关系的特征方程，假设它的两个根为 &lt;equation&gt;\alpha,\beta&lt;/equation&gt; （允许 &lt;equation&gt;\alpha=\beta&lt;/equation&gt; 情况，即为二重根）。&lt;/p&gt;&lt;p&gt;可以很容易验证 &lt;equation&gt;a(n)=(\alpha+\beta)a(n-1)-(\alpha \times \beta)a(n-2)&lt;/equation&gt; ，及 &lt;equation&gt;a(n)-\alpha\times a(n-1)=\beta\times(a(n-1)-\alpha\times a(n-2))&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;递推可以得到：&lt;/p&gt;&lt;p&gt;&lt;equation&gt; \begin{equation} \begin{aligned} a(n)-\alpha\times a(n-1) &amp;amp;=\beta(a(n-1)-\alpha\times a(n-2))\\ &amp;amp;=\beta^2(a(n-2)-\alpha\times a(n-3))\\ &amp;amp;=\dots\\ &amp;amp;=\beta ^{n-1}(a(1)-\alpha\times a(0)) \end{aligned} \end{equation} &lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;由此再使用&lt;b&gt;倒推法&lt;/b&gt;得到： &lt;/p&gt;&lt;p&gt;&lt;equation&gt;a(n)-\alpha^na(0)=(\beta^{n-1}+\alpha\beta^{n-2}+\alpha^2\beta^{n-3}+...+\alpha^{n-1})(a(1)-\alpha\times a(0))&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是&lt;/p&gt;&lt;ul&gt;&lt;li&gt;当 &lt;equation&gt;\alpha\neq\beta&lt;/equation&gt; 时， &lt;equation&gt;a(n)-\alpha^na(0)=\frac{{{\alpha }^{n}}-{{\beta }^{n}}}{\alpha -\beta }(a(1)-\alpha\times a(0))&lt;/equation&gt; ，即 &lt;equation&gt;{a(n)}=\frac{\left( {{a}_{1}}-\beta {{a}_{0}} \right)}{\alpha -\beta }{{\alpha }^{n}}+\frac{\left( {{a}_{1}}-\alpha {{a}_{0}} \right)}{\beta -\alpha }{{\beta }^{n}}&lt;/equation&gt; ；&lt;/li&gt;&lt;li&gt;当 &lt;equation&gt;\alpha=\beta&lt;/equation&gt; 时， &lt;equation&gt;a(n)-\alpha^na(0)=n\times\alpha^{n-1}\times(a(1)-\alpha\times a(0))&lt;/equation&gt; ，即 &lt;equation&gt;a(n)=a(0)\times\alpha^n+(a(1)-\alpha\times a(0))×n×\alpha^{n-1}&lt;/equation&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;回到递推关系 &lt;equation&gt;g(n)=2g(n-1)+2g(n-2)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;特征方程为 &lt;equation&gt;x^2-2x-2=0&lt;/equation&gt; ，两个特征根为 &lt;equation&gt;\alpha,\beta=1\pm\sqrt{3}&lt;/equation&gt; ， &lt;equation&gt;g(1)=G(1)+1=3&lt;/equation&gt; ， &lt;equation&gt;g(2)=G(2)+1=8&lt;/equation&gt; ，可逆推得到 &lt;equation&gt;g(0)=1&lt;/equation&gt; 。解得&lt;/p&gt;&lt;p&gt;&lt;equation&gt;g(n)=\frac{3+2\sqrt{3}}{6}(1+\sqrt{3})^n+\frac{3-2\sqrt{3}}{6}(1-\sqrt{3})^n&lt;/equation&gt; ，即得 &lt;equation&gt;G(n)=g(n)-1&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;（二） 基于“矩阵递推关系”的解法。&lt;/p&gt;&lt;p&gt;假设 &lt;equation&gt;X(n)=\left( \begin{matrix} G(n)\\ F(n)\end{matrix}\right)&lt;/equation&gt; ， &lt;equation&gt;A=\left( \begin{matrix} 2 &amp;amp;&amp;amp; 1\\ 2 &amp;amp;&amp;amp; 0\\ \end{matrix}\right)&lt;/equation&gt; ， &lt;equation&gt;B=\left( \begin{matrix} 2\\ 1\end{matrix}\right)&lt;/equation&gt; 。则得到矩阵递推关系：&lt;/p&gt;&lt;p&gt;&lt;equation&gt;X(n)=A\times X(n-1)+B&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;可以进一步递推得到&lt;/p&gt;&lt;p&gt;&lt;equation&gt; \begin{equation} \begin{aligned} X(n) &amp;amp;=AX(n-1)+B\\ &amp;amp;=A(AX(n-2)+B)+B=A^2X(n-2)+AB+B\\ &amp;amp;=A^2(AX(n-3)+B)+AB+B=A^3X(n-3)+A^2B+AB+B\\ &amp;amp;=\dots\\ &amp;amp;=A^nX(0)+(A^{n-1}+A^{n-2}+\dots+A+I)B \end{aligned} \end{equation}&lt;/equation&gt; ，&lt;/p&gt;&lt;p&gt;其中 &lt;equation&gt;I&lt;/equation&gt; 是单位矩阵。&lt;/p&gt;&lt;p&gt;下面介绍一般性解法：&lt;/p&gt;&lt;p&gt;（首先我们假设 &lt;equation&gt;A&lt;/equation&gt; 可以对角化，否则可以使用Jordan分解，过程类似，但是复杂点儿）&lt;/p&gt;&lt;ul&gt;&lt;li&gt;假设&lt;equation&gt;A&lt;/equation&gt; 可以对角化为 &lt;equation&gt;A=P\Lambda P^{-1}&lt;/equation&gt; ，那么 &lt;equation&gt;A^n=P\Lambda^nP^{-1}&lt;/equation&gt; ；&lt;/li&gt;&lt;li&gt;注意到 &lt;equation&gt;(A-I)(A^{n-1}+A^{n-2}+\dots+A+I)=A^n-I&lt;/equation&gt; ，于是如果 &lt;equation&gt;A-I&lt;/equation&gt; 可逆的话，则 &lt;equation&gt;(A^{n-1}+A^{n-2}+\dots+A+I)=(A-I)^{-1}(A^n-I)&lt;/equation&gt; ；&lt;/li&gt;&lt;li&gt;综合这两者，得到 &lt;equation&gt;X(n) =P\Lambda^nP^{-1}X(0)+(A-I)^{-1}(P\Lambda^nP^{-1}-I)B&lt;/equation&gt; 。 &lt;/li&gt;&lt;/ul&gt;&lt;p&gt;回到具体问题， &lt;equation&gt;\left( \begin{matrix} 2 &amp;amp;&amp;amp; 1\\ 2 &amp;amp;&amp;amp; 0\\ \end{matrix}\right)=A=P\Lambda P^{-1} &lt;/equation&gt; ，其中 &lt;equation&gt;P=\left( \begin{matrix} \frac{1-\sqrt{3}}{2} &amp;amp;&amp;amp; \frac{1+\sqrt{3}}{2}\\ 1 &amp;amp;&amp;amp; 1\\ \end{matrix}\right)&lt;/equation&gt; ， &lt;equation&gt;\Lambda=\left( \begin{matrix} 1-\sqrt{3} &amp;amp;&amp;amp; 0\\ 0 &amp;amp;&amp;amp; 1+\sqrt{3}\\ \end{matrix}\right)&lt;/equation&gt; ， &lt;equation&gt;P^{-1}=\left( \begin{matrix} -\frac{1}{\sqrt{3}} &amp;amp;&amp;amp; \frac{1}{6}\left(3+\sqrt{3}\right)\\ \frac{1}{\sqrt{3}} &amp;amp;&amp;amp; \frac{1}{6}\left(3-\sqrt{3}\right)\\ \end{matrix}\right)&lt;/equation&gt; ， &lt;equation&gt;(A-I)^{-1}=\left( \begin{matrix} \frac{1}{3} &amp;amp;&amp;amp; \frac{1}{3}\\ \frac{2}{3} &amp;amp;&amp;amp; -\frac{1}{3}\\ \end{matrix}\right)&lt;/equation&gt; ，由 &lt;equation&gt;X(1)=\left( \begin{matrix} G(1)\\ F(1)\end{matrix}\right)=\left( \begin{matrix} 2\\ 1\end{matrix}\right)&lt;/equation&gt; 可以逆推得到 &lt;equation&gt;X(0)=\left( \begin{matrix} 0\\ 0\end{matrix}\right)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;代入 &lt;equation&gt;X(n) =P\Lambda^nP^{-1}X(0)+(A-I)^{-1}(P\Lambda^nP^{-1}-I)B&lt;/equation&gt; ，整理得到 &lt;/p&gt;&lt;p&gt;&lt;equation&gt;X(n) =\left( \begin{matrix}\frac{2+\sqrt{3}}{2\sqrt{3}}(1+\sqrt{3})^n-\frac{2-\sqrt{3}}{2\sqrt{3}}(1-\sqrt{3})^n-1\\ \frac{1+\sqrt{3}}{2\sqrt{3}}(1+\sqrt{3})^n-\frac{1-\sqrt{3}}{2\sqrt{3}}(1-\sqrt{3})^n-1\end{matrix}\right)&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;最后看一下“汉诺塔图”，此时变成了有向图，红色有向边形成了解：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-c845bb4464375b56cf2d908e5a90427f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;275&quot; data-rawheight=&quot;230&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-c845bb4464375b56cf2d908e5a90427f&quot; data-watermark-src=&quot;v2-024dd9c4657a7762d28b41044de998b9&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a617a0be01cfe6ef6f99693efb5f6930_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;678&quot; data-rawheight=&quot;542&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-a617a0be01cfe6ef6f99693efb5f6930&quot; data-watermark-src=&quot;v2-350c0303affcfdbcb3ad14a6c8f62eb0&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-47a710c4c06f1b30b1ff8ed8a0d6bdf1_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;608&quot; data-rawheight=&quot;592&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-47a710c4c06f1b30b1ff8ed8a0d6bdf1&quot; data-watermark-src=&quot;v2-55f40071e54694ef721b9a994c55e91b&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-06-03-36124436</guid>
<pubDate>Sun, 03 Jun 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>汉诺塔杂谈（五）——变体之“临近移动”</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-05-03-36124427.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36124427&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-30399b246c2f580896fabf9447fe8a8a_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;所谓“临近移动” 就是在原始的汉诺塔问题（参看“&lt;a href=&quot;http://zhuanlan.zhihu.com/p/36075202&quot;&gt;汉诺塔杂谈（一）&lt;/a&gt;”）上增加一个要求：不允许A柱与C柱之间的直接转移，即每次只能移动到中间柱B或从中间柱B移出（如下图所示）。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-854c1c66bd236d0a70c32bb9d9e86cd7_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;790&quot; data-rawheight=&quot;307&quot; data-watermark=&quot;watermark&quot; data-original-src=&quot;v2-854c1c66bd236d0a70c32bb9d9e86cd7&quot; data-watermark-src=&quot;v2-8d16d39a983858e963e936956143cd5d&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;只有1个盘子时，那么需要两步：1号盘A→B、1号盘B→C。&lt;/p&gt;&lt;p&gt;有2个盘子时，那么需要将2号盘从A“移到”（不止一步）C，就必须先后经历将2号盘从A移到B、将2号盘从B移到C。&lt;/p&gt;&lt;p&gt;而要将2号盘从A移到B，就得先把1号盘从A移到C；要将2号盘从B移到C，就得先把1号盘再从C移到A。&lt;/p&gt;&lt;p&gt;更一般性地讲，有 &lt;equation&gt;n&lt;/equation&gt; 个盘子时，要采用如下的移动步骤：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;先将A柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到C柱上（这是一个类似于自己的子问题）;&lt;/li&gt;&lt;li&gt;接着将最大的盘子（ &lt;equation&gt;n&lt;/equation&gt; 号）从A柱移到B柱；&lt;/li&gt;&lt;li&gt;之后再将C柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到A柱上（这又是一个类似于自己的子问题）；&lt;/li&gt;&lt;li&gt;接着将最大的盘子（ &lt;equation&gt;n&lt;/equation&gt; 号）从B柱移到C柱；&lt;/li&gt;&lt;li&gt;最后再将A柱上的 &lt;equation&gt;1\sim n-1&lt;/equation&gt; 号盘子移到C柱上（这还是一个类似于自己的子问题）。&lt;/li&gt;&lt;/ol&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-7667a1f718e87cfd3d85d536747428f8_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;743&quot; data-rawheight=&quot;548&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;用 &lt;equation&gt;G(n)&lt;/equation&gt; 表示移动 &lt;equation&gt;n&lt;/equation&gt; 个圆盘所需要的步数。则可得到递推关系 &lt;equation&gt;G(n)=G(n-1)+1+G(n-1)+1+G(n-1)=3G(n-1)+2&lt;/equation&gt; ， &lt;equation&gt;G(1)=2&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;可以类似“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36075202&quot;&gt;汉诺塔杂谈（一）&lt;/a&gt;”，使用&lt;b&gt;倒推法&lt;/b&gt;求解 &lt;equation&gt;G(n)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;下面介绍另一种方法：&lt;/p&gt;&lt;p&gt;假设 &lt;equation&gt;g(n)=G(n)+1&lt;/equation&gt; ，则得到 &lt;equation&gt;g(n)=3g(n-1)&lt;/equation&gt; ， &lt;equation&gt;g(1)=3&lt;/equation&gt; 。于是形成了一个等比数列，很容易地得到 &lt;equation&gt;g(n)=3^n&lt;/equation&gt; ，即 &lt;equation&gt;G(n)=3^n-1&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;实际上之前“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36075202&quot;&gt;汉诺塔杂谈（一）&lt;/a&gt;”中的 &lt;equation&gt;T(n)=2T(n-1)+1&lt;/equation&gt; ， &lt;equation&gt;T(1)=1&lt;/equation&gt; 也可使用k类似方法：令 &lt;equation&gt;t(n)=T(n)+1&lt;/equation&gt; ，则有 &lt;equation&gt;t(n)=2t(n-1)&lt;/equation&gt; ， &lt;equation&gt;t(1)=2&lt;/equation&gt; 。也是一个等比数列，很容易得到 &lt;equation&gt;g(n)=3^n&lt;/equation&gt; ，即 &lt;equation&gt;G(n)=3^n-1&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;如果从&lt;/p&gt;&lt;p&gt;1&lt;/p&gt;&lt;p&gt;1&lt;/p&gt;&lt;p&gt;1&lt;/p&gt;&lt;p&gt;2&lt;/p&gt;&lt;p&gt;3&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-05-03-36124427</guid>
<pubDate>Thu, 03 May 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>汉诺塔杂谈（四）——汉诺塔与格雷码</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-04-30-36124395.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36124395&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-2e08829f48cfaa96aca03148d173111a_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;由&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29254973&quot;&gt;格雷码&lt;/a&gt;也可以得到 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔的非递归算法：&lt;/p&gt;&lt;p&gt;对于有 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔问题，按序写出所有&lt;i&gt;n&lt;/i&gt;位格雷码，自左而右标记为第 &lt;equation&gt;n&lt;/equation&gt; 位、第 &lt;equation&gt;n-1&lt;/equation&gt; 位、…第2位、第1位。第 &lt;equation&gt;i(1\leq i\leq2^n-1)&lt;/equation&gt; 个格雷码和第 &lt;equation&gt;i+1&lt;/equation&gt; 个格雷码的差异的位数号，即表示第 &lt;equation&gt;i&lt;/equation&gt; 步移动的盘子的号码。&lt;/p&gt;&lt;p&gt;类似于“&lt;a href=&quot;http://zhuanlan.zhihu.com/p/36085324&quot;&gt;汉诺塔杂谈（三）——非递归算法&lt;/a&gt;”中所述：  &lt;/p&gt;&lt;ul&gt;&lt;li&gt;对于其他磁盘，总是有唯一的移动可能性。&lt;/li&gt;&lt;li&gt;对于最小的盘子而言，总是有两种移动的可能性——若 &lt;equation&gt;n&lt;/equation&gt; 为偶数，最小的盘子的移动次序是A→B→C→A→…；若 &lt;equation&gt;n&lt;/equation&gt; 为奇数，按顺时针方向依次摆放A→C→B→A→…。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;equation&gt;n=4&lt;/equation&gt; 的情况如下表所示：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-beeb61b6f29384e851b315c60649a2e2_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;817&quot; data-rawheight=&quot;589&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;而从一个 &lt;equation&gt;n&lt;/equation&gt; （ &lt;equation&gt;n\geq1&lt;/equation&gt; ）位格雷码 &lt;equation&gt;G_nG_{n-1}…G_2G_1&lt;/equation&gt; 也可以得出当前 &lt;equation&gt;n&lt;/equation&gt; 个盘子在3个柱的分布情况：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_n=0&lt;/equation&gt; 表示&lt;i&gt;n&lt;/i&gt;号盘子在A柱， &lt;equation&gt;G_n=1&lt;/equation&gt; 表示&lt;i&gt;n&lt;/i&gt;号盘子在C柱；&lt;/li&gt;&lt;li&gt;&lt;equation&gt;G_{n-1}=0&lt;/equation&gt; 表示 &lt;equation&gt;n-1&lt;/equation&gt; 号盘子在 &lt;equation&gt;n&lt;/equation&gt; 号盘子在上面， &lt;equation&gt;G_{n-1}=1&lt;/equation&gt; 表示 &lt;equation&gt;n-1&lt;/equation&gt; 号盘子在B柱；&lt;/li&gt;&lt;li&gt;&lt;equation&gt;G_k=0&lt;/equation&gt; 表示 &lt;equation&gt;k&lt;/equation&gt; （ &lt;equation&gt;1\leq k\leq n-2&lt;/equation&gt; ）号盘子在 &lt;equation&gt;k+1&lt;/equation&gt; 号盘子上面， &lt;equation&gt;G_k=1&lt;/equation&gt; 表示 &lt;equation&gt;k&lt;/equation&gt; 号盘子不在 &lt;equation&gt;k+1&lt;/equation&gt; 号盘子上面，此时确定 &lt;equation&gt;k&lt;/equation&gt; 号盘子的位置的方法是：计算 &lt;equation&gt;G_nG_{n-1}…G_{k+2}&lt;/equation&gt; 对应的普通二进制编码的十进制数值 &lt;equation&gt;m&lt;/equation&gt; ，之后查询下表。&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1e6a9589c1333aa44727fe27a4fece0d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;438&quot; data-rawheight=&quot;358&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;例如： &lt;equation&gt;n=6&lt;/equation&gt; ，格雷码为 &lt;equation&gt;G_6G_5G_4G_3G_2G_1=101101&lt;/equation&gt; （十进制值为54）。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_6=1&lt;/equation&gt; ，故而6号盘子在C柱；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d32b8ff1019c053d4e3eaa4badfade9f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;459&quot; data-rawheight=&quot;107&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_5=0&lt;/equation&gt; ，5号盘子在6号盘子上面，也在C柱；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-77d8cc42dd3784d12d1901b3066e7fc5_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;459&quot; data-rawheight=&quot;155&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_4=1&lt;/equation&gt; ，4号盘子不在5号盘子上面，6+4为偶数， &lt;equation&gt;G_6=1&lt;/equation&gt; 代表的十进制数为1， &lt;equation&gt;1\equiv1 \pmod 3&lt;/equation&gt; ，查上表知4号盘子在A柱；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e798b2a98f29e392e51e50f217e7e01e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;459&quot; data-rawheight=&quot;203&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_3=1&lt;/equation&gt; ，3号盘子不在4号盘子上面，6+3为奇数， &lt;equation&gt;G_6G_5=10&lt;/equation&gt; 代表的十进制数为2， &lt;equation&gt;2\equiv2 \pmod 3&lt;/equation&gt; ，查上表知3号盘子在B柱；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-f3c231e9769af5e09b4b300937b88ef0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;458&quot; data-rawheight=&quot;251&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_2=0&lt;/equation&gt; ，2号盘子在3号盘子上面，2号盘子也在B柱；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-09d310f85c49c8e088d3322021f84357_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;458&quot; data-rawheight=&quot;299&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;G_1=1&lt;/equation&gt; ，1号盘子不在2号盘子上面，6+1为奇数， &lt;equation&gt;G_6G_5G_4G_3=1011&lt;/equation&gt; 代表的十进制数为13， &lt;equation&gt;13\equiv1\pmod 3&lt;/equation&gt; ，查上表知1号盘子在A柱。&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-11c7446aa11fe84972deba9e441de173_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;458&quot; data-rawheight=&quot;347&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;而后自下而上观察该表即得到6个盘子在3个柱上的位置&lt;/p&gt;&lt;hr&gt;&lt;p&gt;最后回到汉诺塔图（&lt;a href=&quot;http://zhuanlan.zhihu.com/p/36090187&quot;&gt;汉诺塔杂谈（二）——汉诺塔图&lt;/a&gt;），如果用1代替&lt;i&gt;A&lt;/i&gt;、用2代替&lt;i&gt;B&lt;/i&gt;、用3代替&lt;i&gt;C&lt;/i&gt;，则可得到下图。沿最长简单道路可以得到 &lt;equation&gt;n&lt;/equation&gt; 位3维“格雷码”（加引号的原因是首尾不相邻）。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e1dbefad3b3427616a0cdb2b77d0568f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;834&quot; data-rawheight=&quot;401&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-811fef67511aab37d6d9e63166f50a0c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;550&quot; data-rawheight=&quot;399&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;而要得到真正的 &lt;equation&gt;n&lt;/equation&gt; 位3维格雷码的话，方法就是将最长道路“下方的两个小三角形”的边水平翻转180°后再添加一条边即得图中的一条哈密尔顿回路（参看“&lt;a href=&quot;http://zhuanlan.zhihu.com/p/36090187&quot;&gt;汉诺塔杂谈（二）——汉诺塔图&lt;/a&gt;”），依次经过的顶点就构成了真正的 &lt;equation&gt;n&lt;/equation&gt; 位3维格雷码。&lt;/p&gt;&lt;p&gt;以 &lt;equation&gt;n=3&lt;/equation&gt; 为例，如下图所示。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d64fa295307e44c73481d1f71fc96e63_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1302&quot; data-rawheight=&quot;414&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-04-30-36124395</guid>
<pubDate>Mon, 30 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>汉诺塔杂谈（三）——非递归算法</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-04-28-36085324.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36085324&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-771ff3541309ad53a07e06cd86964f32_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;下面介绍 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔的非递归算法：&lt;/p&gt;&lt;p&gt;&lt;b&gt;1.&lt;/b&gt; 将三根柱子按顺序排成品字型，若 &lt;equation&gt;n&lt;/equation&gt; 为偶数，按顺时针方向依次摆放A、B、C；若 &lt;equation&gt;n&lt;/equation&gt; 为奇数，按顺时针方向依次摆放A、C、B。&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.&lt;/b&gt; 把圆盘1从现在的柱子移动到顺时针方向的下一根柱。&lt;/p&gt;&lt;p&gt;&lt;b&gt;3.&lt;/b&gt; 接着，把另外两根柱上可以移动的圆盘移动到新的柱上（事实上只有唯一的选择）。&lt;/p&gt;&lt;p&gt;&lt;b&gt;4.&lt;/b&gt; 如果没有达到目标要求，则返回步骤2。&lt;/p&gt;&lt;p&gt;例如下图是 &lt;equation&gt;n=3&lt;/equation&gt; 的情况：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-48daff50d79be9eb853d9843a1fecc40_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1401&quot; data-rawheight=&quot;506&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2e2450672ed733d05302c40022eadf60_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1386&quot; data-rawheight=&quot;506&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e5b834c987ca7ab2857d47d5c75b7468_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1464&quot; data-rawheight=&quot;506&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9a80b4387a06118e7f1cdaaa583e4806_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1469&quot; data-rawheight=&quot;506&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;由二进制也可以得到 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔的非递归算法：&lt;/p&gt;&lt;p&gt;对于有 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔问题，按序写出所有 &lt;equation&gt;n&lt;/equation&gt; 位普通二进制码 &lt;equation&gt;B_nB_{n-1}…B_2B_1&lt;/equation&gt; ，自左而右标记为第 &lt;equation&gt;n&lt;/equation&gt; 位、第 &lt;equation&gt;n-1&lt;/equation&gt; 位、…第2位、第1位。则 &lt;equation&gt;\min(k|i=B_nB_{n-1}…B_2B_1，B_k=1)&lt;/equation&gt; 表示第 &lt;equation&gt;i&lt;/equation&gt; 步移动 &lt;equation&gt;k&lt;/equation&gt; 号盘子。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;对于最小的盘子而言，总是有两种移动的可能性。若 &lt;equation&gt;n&lt;/equation&gt; 为偶数，最小的盘子的移动次序是A→B→C→A→…；若 &lt;equation&gt;n&lt;/equation&gt; 为奇数，最小的盘子的移动次序是A→C→B→A→…。&lt;/li&gt;&lt;li&gt;对于其他盘子，总是有唯一的移动可能性。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;equation&gt;n=4&lt;/equation&gt; 的情况见下表。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bf997e85836935b43312efb0ea0796c3_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;820&quot; data-rawheight=&quot;587&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;在&lt;i&gt;Mathematica&lt;/i&gt;中有一个函数“&lt;b&gt;IntegerExponent&lt;/b&gt;”，官方的帮助给出的说明是：&lt;/p&gt;&lt;blockquote&gt;IntegerExponent[n, b] gives the highest power of b that divides n. &lt;/blockquote&gt;&lt;p&gt;就是返回能整除 &lt;equation&gt;n&lt;/equation&gt; 的（大于1的整数） &lt;equation&gt;b&lt;/equation&gt; 的最高次幂。例如：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-840e57a1b25bde0b945565a254c95259_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;199&quot; data-rawheight=&quot;46&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;说明 &lt;equation&gt;3^3|432&lt;/equation&gt; 而 &lt;equation&gt;3^4 \nmid 432&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是在&lt;i&gt;Mathematica&lt;/i&gt;中，输入“&lt;b&gt;IntegerExponent [Range[2^n - 1], 2] + 1&lt;/b&gt;” 可以得到 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔问题依次移动的盘子的号码。&lt;/p&gt;&lt;p&gt;例如：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-ed5b19953a0864904050c95e3407778d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;316&quot; data-rawheight=&quot;46&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;具体移动方法同前。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;由格雷码也可以得到一个非递归算法，这部分内容我将放在下一篇中介绍。&lt;/p&gt;&lt;p&gt;此外，假设 &lt;equation&gt;m&lt;/equation&gt; 的二进制表示为 &lt;equation&gt;B_nB_{n-1}…B_2B_1&lt;/equation&gt; ，则可以由 &lt;equation&gt;B_nB_{n-1}…B_2B_1&lt;/equation&gt; 得到移动 &lt;equation&gt;m&lt;/equation&gt; 步后 &lt;equation&gt;n&lt;/equation&gt; 个盘子在3个柱的分布情况，这一部分也将在下一篇中介绍。&lt;/p&gt;&lt;p&gt;（注意到格雷码与普通二进制码的转换关系，则可以将 &lt;equation&gt;m&lt;/equation&gt; 的二进制表示转换为 &lt;equation&gt;m&lt;/equation&gt; 对应的格雷码）。&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-04-28-36085324</guid>
<pubDate>Sat, 28 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>汉诺塔杂谈（二）——汉诺塔图</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-04-26-36090187.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36090187&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-028105406e39917bfaa413fdcfe2b347_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;考虑 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔问题，称一种“各个盘子在三个柱上的一种合法放置”为一个“状态”，用一个{A, B, C}上长度为 &lt;equation&gt;n&lt;/equation&gt; 的字符串表示当前状态，串中的第 &lt;equation&gt;i&lt;/equation&gt; 项表示第 &lt;equation&gt;n+1-i&lt;/equation&gt; 个盘子所在的柱子标号（就是从大到小写下各个盘子所在的柱子名儿）。&lt;/p&gt;&lt;p&gt;例如：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-86862cc1123c801eb27e4c5825e0d34e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1714&quot; data-rawheight=&quot;761&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;将状态作为图中的顶点，如果经过一次合法的移动可以将状态X变化到状态Y，则在顶点X和顶点Y之间连一条无向边，可以得到 &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔的无向图。 &lt;equation&gt;n=1\sim6&lt;/equation&gt; 时对应的图如下列所示（后三者隐去顶点文字）：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1ca894d5443f740831ba46139698620c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;865&quot; data-rawheight=&quot;510&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9e3ecb6193bdf5b779cb505dbe12f853_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;763&quot; data-rawheight=&quot;542&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-5c7f933eaaab526df98ea22a518c91b2_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;707&quot; data-rawheight=&quot;555&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-597aae93c40dc5cd47b60b8e85d94cb7_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;697&quot; data-rawheight=&quot;551&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1deec5508c8ab5d7e6c2f9b32432c561_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;697&quot; data-rawheight=&quot;552&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8a00a4da6015f5254fb1f35176d3d755_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;697&quot; data-rawheight=&quot;552&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;从直观上可以看出，上述图的“上下相邻两图”之间具有“相似性”—— &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔的无向图由三个 &lt;equation&gt;n-1&lt;/equation&gt; 个盘子的汉诺塔的无向图“垒”成。例如：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-828952954e61d9e6c6646736f49855cf_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;832&quot; data-rawheight=&quot;551&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;下面考察汉诺塔的无向图中&lt;b&gt;从“左下角”顶点“&lt;i&gt;AA&lt;/i&gt;…&lt;i&gt;AA&lt;/i&gt;”到“右下角”顶点“&lt;i&gt;CC&lt;/i&gt;…&lt;i&gt;CC&lt;/i&gt;”&lt;/b&gt;的道路，每条简单道路都是汉诺塔的一个移动过程。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-de9e58d29cccbd8bc50a562dc7dbc7c0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;414&quot; data-rawheight=&quot;395&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;从直观上看，这些道路中最短者就是“&lt;i&gt;AA&lt;/i&gt;…&lt;i&gt;AA&lt;/i&gt;”到顶点“&lt;i&gt;CC&lt;/i&gt;…&lt;i&gt;CC&lt;/i&gt;”的“直线”，也就是“三角形的边”。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-cdce1385d8694d8c6859732d76ba190d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;792&quot; data-rawheight=&quot;447&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4f2c618471e5cdab9fc83295eddef9b6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;703&quot; data-rawheight=&quot;555&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;这时最短道路的长度就是 &lt;equation&gt;2^n-1&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;而 &lt;equation&gt;n=1,2&lt;/equation&gt; 时，汉诺塔图的最长的简单道路则如下图所示。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8734d18f303991474770c2bfbae1c73a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;793&quot; data-rawheight=&quot;471&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;上右图可以分为&lt;i&gt;AA&lt;/i&gt;→&lt;i&gt;AC&lt;/i&gt;、&lt;i&gt;AC&lt;/i&gt;→&lt;i&gt;BC&lt;/i&gt;、&lt;i&gt;BC&lt;/i&gt;→&lt;i&gt;BA&lt;/i&gt;、&lt;i&gt;BA&lt;/i&gt;→&lt;i&gt;CA&lt;/i&gt;、&lt;i&gt;CA&lt;/i&gt;→&lt;i&gt;CC&lt;/i&gt;五段，其中&lt;i&gt;AA&lt;/i&gt;→&lt;i&gt;AC&lt;/i&gt;、&lt;i&gt;BC&lt;/i&gt;→&lt;i&gt;BA&lt;/i&gt;、&lt;i&gt;CA&lt;/i&gt;→&lt;i&gt;CC&lt;/i&gt;与上左图类似。&lt;/p&gt;&lt;p&gt;同样地，下左图由三次上右图拼接而成，下右图也可由三次下左图拼接而成，这也体现了一种&lt;b&gt;“相似性”&lt;/b&gt;。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8eb41c7eb2c8ec38109b5a8122c934da_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1413&quot; data-rawheight=&quot;558&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;equation&gt;n=4,5,6&lt;/equation&gt; 时汉诺塔图的最长的简单道路也同样体现了这种“相似性”。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1aa7419dd9459e6c8a25c8280d076584_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1414&quot; data-rawheight=&quot;584&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;hr&gt;&lt;p&gt;推而广之，根据这种“相似性”。可以使用归纳法证明，对于任意的 &lt;equation&gt;n\geq1&lt;/equation&gt; ， &lt;equation&gt;n&lt;/equation&gt; 个盘子的汉诺塔的无向图中：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;有 &lt;equation&gt;3^n&lt;/equation&gt; 个顶点；&lt;/li&gt;&lt;li&gt;有 &lt;equation&gt;3(3^n-1)/2&lt;/equation&gt; 条边；&lt;/li&gt;&lt;li&gt;顶点“&lt;i&gt;AA&lt;/i&gt;…&lt;i&gt;AA&lt;/i&gt;”到顶点“&lt;i&gt;CC&lt;/i&gt;…&lt;i&gt;CC&lt;/i&gt;”的最短道路长度为 &lt;equation&gt;2^n-1&lt;/equation&gt; （也即汉诺塔问题最少移动数）；&lt;/li&gt;&lt;li&gt;顶点“&lt;i&gt;AA&lt;/i&gt;…&lt;i&gt;AA&lt;/i&gt;”到顶点“&lt;i&gt;CC&lt;/i&gt;…&lt;i&gt;CC&lt;/i&gt;”的最长简单道路是图中的一条哈密顿道路（定义参考“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29282544&quot;&gt;格雷码与超立方体的哈密尔顿回路&lt;/a&gt;”），因此长度是 &lt;equation&gt;3^n-1&lt;/equation&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;之前，称顶点“&lt;i&gt;AA&lt;/i&gt;…&lt;i&gt;AA&lt;/i&gt;”到顶点“&lt;i&gt;CC&lt;/i&gt;…&lt;i&gt;CC&lt;/i&gt;”的最长简单道路是图中的一条哈密尔顿道路，那么图中是否存在哈密尔顿回路？&lt;/p&gt;&lt;p&gt;答案是肯定的——将最长道路“下方的两个小三角形”的边水平翻转180°后再添加一条边即得图中的一条哈密尔顿回路。例如：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-1189db0a932252e4d15095835cc31588_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1414&quot; data-rawheight=&quot;555&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;再如：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-f2ef8db0c6a95a664e4bab6bd68e22fc_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1279&quot; data-rawheight=&quot;408&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-04-26-36090187</guid>
<pubDate>Thu, 26 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>汉诺塔杂谈（一）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-04-25-36075202.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36075202&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-928c2e7b1e1a19f50cce37834fa2d528_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;法国数学家卢卡斯（Edouard Lucas）在1883年提出了一个数学游戏：&lt;/p&gt;&lt;p&gt;传说在世界中心贝拿勒斯（在印度北部）的圣庙里，一块黄铜板上有三根宝石柱。印度教的主神大梵天在创造世界的时候，在其中一根柱上从下到上地穿好了由大到小的64片金盘。大梵天命令僧侣们将圆盘从下面&lt;b&gt;开始按大小顺序重新摆放在另一根柱子上&lt;/b&gt;，并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。&lt;/p&gt;&lt;p&gt;预言说——当这些盘子移动完毕时，世界就将在一声霹雳中消灭，而梵塔、庙宇和众生也都将&lt;b&gt;同归于尽，尘归尘，土归土&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这个传说又称作&lt;b&gt;梵天寺之塔问题(Tower of Brahma puzzle)&lt;/b&gt;，而且有若干变体：其一是寺院的地点位于越南河内，因此该问题也常被称作“&lt;b&gt;河内塔&lt;/b&gt;”或“&lt;b&gt;汉诺塔（Tower of Hanoi）&lt;/b&gt;”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;下面考虑该问题的一般形式：假设有 &lt;equation&gt;n&lt;/equation&gt; 个圆盘，最初自下而上、自大而小地穿在A柱上（如下图所示），每次按规则移动一个圆盘，最终将所有圆盘移动到C柱上。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-62f8246d7a1c955f1b7206171cca14ce_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;673&quot; data-rawheight=&quot;243&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;先考虑最简单的情况：&lt;/p&gt;&lt;p&gt;(1) 只有一个盘子，那么问题太简单了，下图就好。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1574981681e9b1c5971ecf53048389c1_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;736&quot; data-rawheight=&quot;305&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;(2) 只有两个盘子，下图把所有可能的移动方法逐一画出，&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-949b608938fa8fc600e12dd0b7130902_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;696&quot; data-rawheight=&quot;602&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然后的话，就枚举吧，得到解法是：1(A)→B、&lt;b&gt;2(A)→C&lt;/b&gt;、1(B)→C。&lt;/p&gt;&lt;p&gt;观察到其中第二步是&lt;b&gt;必须&lt;/b&gt;的。&lt;/p&gt;&lt;p&gt;(3) 有3个盘子的话，那么一定需要把3号盘子从A移到C：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0a36561f7262126e684822ced267017b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;791&quot; data-rawheight=&quot;235&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;而要这么做的话，1和2不能“挡3号盘子的路”，所以必须是下述情况：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bb9905a9e5c8e6dccdaad98c72841163_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;791&quot; data-rawheight=&quot;235&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然后，下图左，然后，下图右。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-dd903772a247c87e0ba6bc4a9c60239c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1674&quot; data-rawheight=&quot;239&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;回到该问题的一般形式，注意到：其中最大的盘子位于A柱的最底部，而要将其移动到C柱，&lt;b&gt;必须&lt;/b&gt;先将A柱上所有其他盘子移到B柱上（这是一个类似于自己的子问题）；接着将最大的盘子从A柱移到C柱，之后不必再管它；最后再将刚才移到B柱上的盘子移到C柱上（这又是一个子问题）。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c9c7a57c0b53404142ad05d8d52d39eb_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;535&quot; data-rawheight=&quot;264&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;于是得到&lt;b&gt;递归&lt;/b&gt;算法，其形式化描述为：&lt;/p&gt;&lt;p&gt;&lt;b&gt;Hanoi&lt;/b&gt; (&lt;b&gt;&lt;i&gt;n&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;source&lt;/b&gt;, &lt;b&gt;dest&lt;/b&gt;, &lt;b&gt;by&lt;/b&gt;)&lt;/p&gt;&lt;p&gt;&lt;b&gt;Imput: &lt;/b&gt;圆盘数&lt;i&gt;n&lt;/i&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;1.&lt;/b&gt; &lt;b&gt;If &lt;/b&gt;(&lt;i&gt;n&lt;/i&gt;=1) &lt;b&gt;then&lt;/b&gt; &lt;/p&gt;&lt;p&gt;&lt;b&gt;1.1.&lt;/b&gt;  &lt;b&gt;Print &lt;/b&gt;(Move disk from source to dest) &lt;/p&gt;&lt;p&gt;&lt;b&gt;2.&lt;/b&gt; &lt;b&gt;Else &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.1.&lt;/b&gt; &lt;b&gt;Hanoi &lt;/b&gt;(&lt;i&gt;n&lt;/i&gt;-1, source, by, dest)&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.2.&lt;/b&gt; &lt;b&gt;Print&lt;/b&gt; (Move disk from source to dest)&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.3.&lt;/b&gt; &lt;b&gt;Hanoi &lt;/b&gt;(&lt;i&gt;n&lt;/i&gt;-1, by, dest, source)&lt;/p&gt;&lt;p&gt;下面是我写的Prolog语言的代码：&lt;/p&gt;&lt;code lang=&quot;prolog&quot;&gt;?-hanoi(4).

hanoi(N) :- 	
	move(N,left,middle,right),
	write(&quot; &quot;),nl.

move(1,A,_,C) :- inform(A,C), !.
move(N,A,B,C) :- 
	N1:= N - 1,			%注意这里的赋值
	move(N1,A,C,B),
	inform(A,C),
	move(N1,B,A,C).

inform(Loc1, Loc2):-
	write(&quot;Move disk from &quot;),
	write(Loc1),
	write(&quot; to &quot;),
	write(Loc2), nl.&lt;/code&gt;&lt;hr&gt;&lt;p&gt;用 &lt;equation&gt;T(n)&lt;/equation&gt; 表示移动 &lt;equation&gt;n&lt;/equation&gt; 个圆盘所需要的步数。根据算法先把前面 &lt;equation&gt;n-1&lt;/equation&gt; 个盘子转移到&lt;i&gt;B&lt;/i&gt;上；然后把第 &lt;equation&gt;n&lt;/equation&gt; 个盘子转到&lt;i&gt;C&lt;/i&gt;上；最后再一次将&lt;i&gt;B&lt;/i&gt;上的 &lt;equation&gt;n-1&lt;/equation&gt; 个盘子转移到&lt;i&gt;C&lt;/i&gt;上。得到递推关系 &lt;equation&gt;T(n)=2T(n-1)+1&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;为求解 &lt;equation&gt;T(n)=2T(n-1)+1&lt;/equation&gt; ， &lt;equation&gt;T(1)=1&lt;/equation&gt; 。可使用&lt;b&gt;倒推法&lt;/b&gt;：&lt;/p&gt;&lt;p&gt;&lt;equation&gt;T(n) = 2T(n-1)+1&lt;/equation&gt;  &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2(2T(n-2)+1)+1 =2\times 2T(n-2)+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2\times2(2T(n-3)+1)+2+1 = 2^3T(n-3)+2^2+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= \dots\dots&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2^{n-1}T(1)+2^{(n-1)-1}+…+2^2+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2^{n-1}+2^{(n-1)-1}+…+2^2+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2^n-1&lt;/equation&gt; &lt;/p&gt;&lt;hr&gt;&lt;p&gt;回到最初的汉诺塔问题，要将64片金盘重新摆放在另一根柱子上，最少需要 &lt;equation&gt;2^{64}-1&lt;/equation&gt; 步，即使僧侣每秒钟移动一步而且每次移动都是正确的方法，那么也需要 &lt;equation&gt;5.8\times 10^{11} &lt;/equation&gt; 年，即&lt;b&gt;5千多亿年&lt;/b&gt;！&lt;/p&gt;&lt;p&gt;所以这时候用马三立老先生在《情绪与健康》中的一句台词来说就是——“&lt;b&gt;别害怕，好好活着，没关系！&lt;/b&gt;”。&lt;/p&gt;&lt;a href=&quot;http://www.iqiyi.com/w_19rraelfpt.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-263556889c427c2803b0f944cee3b28f&quot; data-image-width=&quot;120&quot; data-image-height=&quot;160&quot; data-image-size=&quot;120x160&quot;&gt;动漫相声马三立 王凤山 《情绪与健康》&lt;/a&gt;&lt;p&gt;（目前只能找到这个卡通的）1：31时候马老的台词。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-04-25-36075202</guid>
<pubDate>Wed, 25 Apr 2018 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
