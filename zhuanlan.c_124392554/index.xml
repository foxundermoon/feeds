<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>Liu言杂记</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/</link>
<description></description>
<language>zh-cn</language>
<lastBuildDate>Thu, 26 Apr 2018 01:23:23 +0800</lastBuildDate>
<item>
<title>汉诺塔杂谈（一）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-04-25-36075202.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/36075202&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-928c2e7b1e1a19f50cce37834fa2d528_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;法国数学家卢卡斯（Edouard Lucas）在1883年提出了一个数学游戏：&lt;/p&gt;&lt;p&gt;传说在世界中心贝拿勒斯（在印度北部）的圣庙里，一块黄铜板上有三根宝石柱。印度教的主神大梵天在创造世界的时候，在其中一根柱上从下到上地穿好了由大到小的64片金盘。大梵天命令僧侣们将圆盘从下面&lt;b&gt;开始按大小顺序重新摆放在另一根柱子上&lt;/b&gt;，并且规定，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘。&lt;/p&gt;&lt;p&gt;预言说——当这些盘子移动完毕时，世界就将在一声霹雳中消灭，而梵塔、庙宇和众生也都将&lt;b&gt;同归于尽，尘归尘，土归土&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;这个传说又称作&lt;b&gt;梵天寺之塔问题(Tower of Brahma puzzle)&lt;/b&gt;，而且有若干变体：其一是寺院的地点位于越南河内，因此该问题也常被称作“&lt;b&gt;河内塔&lt;/b&gt;”或“&lt;b&gt;汉诺塔（Tower of Hanoi）&lt;/b&gt;”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;下面考虑该问题的一般形式：假设有 &lt;equation&gt;n&lt;/equation&gt; 个圆盘，最初自下而上、自大而小地穿在A柱上（如下图所示），每次按规则移动一个圆盘，最终将所有圆盘移动到C柱上。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-62f8246d7a1c955f1b7206171cca14ce_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;673&quot; data-rawheight=&quot;243&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;先考虑最简单的情况：&lt;/p&gt;&lt;p&gt;(1) 只有一个盘子，那么问题太简单了，下图就好。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1574981681e9b1c5971ecf53048389c1_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;736&quot; data-rawheight=&quot;305&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;(2) 只有两个盘子，下图把所有可能的移动方法逐一画出，&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-949b608938fa8fc600e12dd0b7130902_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;696&quot; data-rawheight=&quot;602&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然后的话，就枚举吧，得到解法是：1(A)→B、&lt;b&gt;2(A)→C&lt;/b&gt;、1(B)→C。&lt;/p&gt;&lt;p&gt;观察到其中第二步是&lt;b&gt;必须&lt;/b&gt;的。&lt;/p&gt;&lt;p&gt;(3) 有3个盘子的话，那么一定需要把3号盘子从A移到C：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0a36561f7262126e684822ced267017b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;791&quot; data-rawheight=&quot;235&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;而要这么做的话，1和2不能“挡3号盘子的路”，所以必须是下述情况：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bb9905a9e5c8e6dccdaad98c72841163_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;791&quot; data-rawheight=&quot;235&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然后，下图左，然后，下图右。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-dd903772a247c87e0ba6bc4a9c60239c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1674&quot; data-rawheight=&quot;239&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;回到该问题的一般形式，注意到：其中最大的盘子位于A柱的最底部，而要将其移动到C柱，&lt;b&gt;必须&lt;/b&gt;先将A柱上所有其他盘子移到B柱上（这是一个类似于自己的子问题）；接着将最大的盘子从A柱移到C柱，之后不必再管它；最后再将刚才移到B柱上的盘子移到C柱上（这又是一个子问题）。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c9c7a57c0b53404142ad05d8d52d39eb_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;535&quot; data-rawheight=&quot;264&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;hr&gt;&lt;p&gt;于是得到&lt;b&gt;递归&lt;/b&gt;算法，其形式化描述为：&lt;/p&gt;&lt;p&gt;&lt;b&gt;Hanoi&lt;/b&gt; (&lt;b&gt;&lt;i&gt;n&lt;/i&gt;&lt;/b&gt;, &lt;b&gt;source&lt;/b&gt;, &lt;b&gt;dest&lt;/b&gt;, &lt;b&gt;by&lt;/b&gt;)&lt;/p&gt;&lt;p&gt;&lt;b&gt;Imput: &lt;/b&gt;圆盘数&lt;i&gt;n&lt;/i&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;1.&lt;/b&gt; &lt;b&gt;If &lt;/b&gt;(&lt;i&gt;n&lt;/i&gt;=1) &lt;b&gt;then&lt;/b&gt; &lt;/p&gt;&lt;p&gt;&lt;b&gt;1.1.&lt;/b&gt;  &lt;b&gt;Print &lt;/b&gt;(Move disk from source to dest) &lt;/p&gt;&lt;p&gt;&lt;b&gt;2.&lt;/b&gt; &lt;b&gt;Else &lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.1.&lt;/b&gt; &lt;b&gt;Hanoi &lt;/b&gt;(&lt;i&gt;n&lt;/i&gt;-1, source, by, dest)&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.2.&lt;/b&gt; &lt;b&gt;Print&lt;/b&gt; (Move disk from source to dest)&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.3.&lt;/b&gt; &lt;b&gt;Hanoi &lt;/b&gt;(&lt;i&gt;n&lt;/i&gt;-1, by, dest, source)&lt;/p&gt;&lt;p&gt;下面是我写的Prolog语言的代码：&lt;/p&gt;&lt;code lang=&quot;prolog&quot;&gt;?-hanoi(4).

hanoi(N) :- 	
	move(N,left,middle,right),
	write(&quot; &quot;),nl.

move(1,A,_,C) :- inform(A,C), !.
move(N,A,B,C) :- 
	N1:= N - 1,			%注意这里的赋值
	move(N1,A,C,B),
	inform(A,C),
	move(N1,B,A,C).

inform(Loc1, Loc2):-
	write(&quot;Move disk from &quot;),
	write(Loc1),
	write(&quot; to &quot;),
	write(Loc2), nl.&lt;/code&gt;&lt;hr&gt;&lt;p&gt;用 &lt;equation&gt;T(n)&lt;/equation&gt; 表示移动 &lt;equation&gt;n&lt;/equation&gt; 个圆盘所需要的步数。根据算法先把前面 &lt;equation&gt;n-1&lt;/equation&gt; 个盘子转移到&lt;i&gt;B&lt;/i&gt;上；然后把第 &lt;equation&gt;n&lt;/equation&gt; 个盘子转到&lt;i&gt;C&lt;/i&gt;上；最后再一次将&lt;i&gt;B&lt;/i&gt;上的 &lt;equation&gt;n-1&lt;/equation&gt; 个盘子转移到&lt;i&gt;C&lt;/i&gt;上。得到递推关系 &lt;equation&gt;T(n)=2T(n-1)+1&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;为求解 &lt;equation&gt;T(n)=2T(n-1)+1&lt;/equation&gt; ， &lt;equation&gt;T(1)=1&lt;/equation&gt; 。可使用&lt;b&gt;倒推法&lt;/b&gt;：&lt;/p&gt;&lt;p&gt;&lt;equation&gt;T(n) = 2T(n-1)+1&lt;/equation&gt;  &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2(2T(n-2)+1)+1 =2\times 2T(n-2)+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2\times2(2T(n-3)+1)+2+1 = 2^3T(n-3)+2^2+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= \dots\dots&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2^{n-1}T(1)+2^{(n-1)-1}+…+2^2+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2^{n-1}+2^{(n-1)-1}+…+2^2+2+1&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;= 2^n-1&lt;/equation&gt; &lt;/p&gt;&lt;hr&gt;&lt;p&gt;回到最初的汉诺塔问题，要将64片金盘重新摆放在另一根柱子上，最少需要 &lt;equation&gt;2^{64}-1&lt;/equation&gt; 步，即使僧侣每秒钟移动一步而且每次移动都是正确的方法，那么也需要 &lt;equation&gt;5.8\times 10^{11} &lt;/equation&gt; 年，即&lt;b&gt;5千多亿年&lt;/b&gt;！&lt;/p&gt;&lt;p&gt;所以这时候用马三立老先生在《情绪与健康》中的一句台词来说就是——“&lt;b&gt;别害怕，好好活着，没关系！&lt;/b&gt;”。&lt;/p&gt;&lt;a href=&quot;http://www.iqiyi.com/w_19rraelfpt.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-263556889c427c2803b0f944cee3b28f&quot; data-image-width=&quot;120&quot; data-image-height=&quot;160&quot; data-image-size=&quot;120x160&quot;&gt;动漫相声马三立 王凤山 《情绪与健康》&lt;/a&gt;&lt;p&gt;（目前只能找到这个卡通的）1：31时候马老的台词。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-04-25-36075202</guid>
<pubDate>Wed, 25 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>麻花辫（Braid）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-04-12-35562657.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35562657&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-5072cf6924656d70d0501e0f4f594b1c_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;题图来自网络，纪念我在Street Fighter中最喜欢的角色——有着&lt;b&gt;麻花辫&lt;/b&gt;的满天飞的“叉子”。&lt;/p&gt;&lt;p&gt;题图暂时没有追溯到最初来源（即版权所有者），若有侵权烦请告知，本人立即删除。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;“&lt;b&gt;你那美丽的麻花辫/缠呀缠住我心田/叫我日夜地想念/那段天真的童年&lt;/b&gt;”&lt;/p&gt;&lt;p&gt;——郑智化《麻花辫子》&lt;/p&gt;&lt;a href=&quot;http://bd.kuwo.cn/yinyue/270025?from=baidu&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot;&gt;麻花辫子-郑智化-单曲-酷我音乐-好音质用酷我&lt;/a&gt;&lt;hr&gt;&lt;p&gt;麻花辫是一种发型，把头发分成三股交叉扎起来像麻花样的辫子：&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;1. 把头发分成三股；
2. 把最左边（右边）一股头发从上面压到中间一股和右边（左边）一股之间（下图(1)、(3)）；
3. 如果还需要继续编辫子则再把最（右边）一股头发的头发从上面压到中间一股和左边（右边）一股之间（下图(2)、(4)）；
4. 如果还需要继续编辫子则返回步骤2。
5. 最后头发编完，用头绳（或皮筋、绑线带、铁丝、包装绳、米线、502等）扎住（下图(5)）。&lt;/code&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-117e598c6593f122df4d2b043c726f91_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;893&quot; data-rawheight=&quot;559&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;video id=&quot;None&quot; data-swfurl=&quot;&quot; poster=&quot;https://pic3.zhimg.com/80/v2-374148a725e43319794084c7edeae3b2_b.jpg&quot; data-sourceurl=&quot;https://www.zhihu.com/video/967520392194236416&quot; data-name=&quot;&quot; data-video-id=&quot;&quot; data-video-playable=&quot;true&quot; data-lens-id=&quot;967520392194236416&quot;&gt;&lt;/video&gt;&lt;p&gt;但为什么无论古今中外，编麻花辫的方法如此单一，都是上述操作序列不断重复（或者左右镜像）？&lt;/p&gt;&lt;hr&gt;&lt;p&gt;要分析这个问题，先从最简单的入手：&lt;/p&gt;&lt;p&gt;（一）头发只分为一股，梳为&lt;b&gt;马尾辫&lt;/b&gt;即可。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;（二）次简单的：如果头发只分为两股，则&lt;b&gt;只有下图所示一种编辫子方式&lt;/b&gt;（或者左右镜像），实际上就是&lt;b&gt;搓麻绳&lt;/b&gt;的方法。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-63d996e8f37bb7d0e96ce1d3370dcbbe_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;570&quot; data-rawheight=&quot;328&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;这是为什么呢？&lt;/p&gt;&lt;p&gt;再在这个问题中讨论最简单情况——头发只分为两股时交叉0次或1次，如下图所示，三种情况分别记为 &lt;equation&gt;e&lt;/equation&gt; 、 &lt;equation&gt;a&lt;/equation&gt; 和 &lt;equation&gt;b&lt;/equation&gt; 。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9ab372dc0bf0ab2ea244ea4d2fbbb3b6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;530&quot; data-rawheight=&quot;553&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;下面来看交叉至多2次的情况，如下图所示是上图的9种组合形式，采用◦表示“上下连接”。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f0cfa85a07c4799444427b06409ca994_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;943&quot; data-rawheight=&quot;360&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;然后拉一拉、拽一拽、抻一抻、抖一抖，会发现：&lt;/p&gt;&lt;p&gt;&lt;equation&gt;e\circ e=e&lt;/equation&gt; 、 &lt;equation&gt;e\circ a=a&lt;/equation&gt; 、 &lt;equation&gt;e\circ b=b&lt;/equation&gt; 、 &lt;equation&gt;a\circ e=a&lt;/equation&gt; 、 &lt;equation&gt;b\circ e=b&lt;/equation&gt; 、 &lt;equation&gt;a\circ b=e&lt;/equation&gt; 、 &lt;equation&gt;b\circ a=e&lt;/equation&gt; 。因此可以将“◦”视作 &lt;equation&gt;G&lt;/equation&gt; 上的可交换的运算，其中 &lt;equation&gt;G&lt;/equation&gt; ={所有由 &lt;equation&gt;e&lt;/equation&gt; 、 &lt;equation&gt;a&lt;/equation&gt; &lt;i&gt;、&lt;/i&gt; &lt;equation&gt;b&lt;/equation&gt; 组成的有限长度的串，字符之间的连接表示“◦”}。&lt;/p&gt;&lt;p&gt;于是，只要有“ &lt;equation&gt;a\circ b&lt;/equation&gt; ”就可以“消去”、只要有“ &lt;equation&gt;b\circ a&lt;/equation&gt; ”也可以“消去”。例如： &lt;equation&gt;aeabbaaebaa= ae(ab)(ba)ae(ba)a &lt;/equation&gt; 等同于 &lt;equation&gt; a^3&lt;/equation&gt; ，可参看下图：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-33e943c6518395571172f985416635a0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;328&quot; data-rawheight=&quot;619&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是，“两股辫子”或者就是 &lt;equation&gt;e&lt;/equation&gt; 、或者就是连续的 &lt;equation&gt;a&lt;/equation&gt; 、或者就是连续的 &lt;equation&gt;b&lt;/equation&gt; ，得到 &lt;equation&gt;G=\{e\}∪\{a^i|i\in\mathbb{Z^+}\}∪\{b^i|i\in\mathbb{Z^+}\} =\{a^i|i\in\mathbb{Z}\}&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;equation&gt;=\{\dots,a^{-3}=b^3,a^{-2}=b^2,a^{-1}=b,a^{0}=e,a^1,a^2,a^3,\dots\}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;【用“群”的语言就是： &lt;equation&gt;(G, \circ)&lt;/equation&gt; 构成一个群，其中 &lt;equation&gt;e&lt;/equation&gt; 是单位元、 &lt;equation&gt;a&lt;/equation&gt; 和 &lt;equation&gt;b&lt;/equation&gt; 互为逆。事实上 &lt;equation&gt;G&lt;/equation&gt; 是一个循环群，生成元是 &lt;equation&gt;a&lt;/equation&gt; 或 &lt;equation&gt;b&lt;/equation&gt; 。】&lt;/p&gt;&lt;p&gt;其中 &lt;equation&gt;a^i&lt;/equation&gt; 中 &lt;equation&gt;i&lt;/equation&gt; 的正负就对应“编麻绳”的两种（对称）方式， &lt;equation&gt;i=0&lt;/equation&gt; 时就是“不编”。&lt;/p&gt;&lt;p&gt;也就是说，&lt;b&gt;两股头发时，或者不编，或者必然是“编麻绳”&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;下面我们来看三股头发的情形：&lt;/p&gt;&lt;p&gt;最简单的情况（交叉0次或1次）有5种情况：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-cccafe5a6d70962e0e12862e36a70311_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;930&quot; data-rawheight=&quot;286&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;依然令 &lt;equation&gt; G &lt;/equation&gt; ={所有由 &lt;equation&gt;e&lt;/equation&gt; 、 &lt;equation&gt;a&lt;/equation&gt; &lt;i&gt;、&lt;/i&gt; &lt;equation&gt;a^{-1}&lt;/equation&gt; &lt;i&gt;、&lt;/i&gt; &lt;equation&gt;b&lt;/equation&gt; &lt;i&gt;、&lt;/i&gt; &lt;equation&gt;b^{-1}&lt;/equation&gt; 组成的有限长度的串，字符之间的连接表示“ &lt;equation&gt;\circ&lt;/equation&gt; ”}。&lt;/p&gt;&lt;p&gt;【 &lt;equation&gt;(G, \circ)&lt;/equation&gt; 同样构成一个群。】&lt;/p&gt;&lt;p&gt;下面来分析头发分为三股时，“&lt;b&gt;通常意义上的美观&lt;/b&gt;”的辫子会是什么样子，考察“辫子”其实也就是考察 &lt;equation&gt;G&lt;/equation&gt; 中的一个有限长度的串 &lt;equation&gt;S&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;（一）首先假定 &lt;equation&gt;S&lt;/equation&gt; 中不会连续出现“ &lt;equation&gt;a\circ a^{-1}&lt;/equation&gt; ”、“ &lt;equation&gt;a^{-1}\circ a&lt;/equation&gt; ”、“ &lt;equation&gt;b\circ b^{-1}&lt;/equation&gt; ”和“ &lt;equation&gt;b^{-1}\circ b&lt;/equation&gt; ”（否则可以拉一拉、拽一拽、抻一抻、抖一抖而“消去”）。&lt;/p&gt;&lt;p&gt;（二）为了辫子的美观，尽量避免出现 &lt;equation&gt;a^2&lt;/equation&gt; 、 &lt;equation&gt;(a-1)^2&lt;/equation&gt; 、 &lt;equation&gt;b^2&lt;/equation&gt; 或  &lt;equation&gt;(b-1)^2&lt;/equation&gt; 的情况（否则会出现“一边单股，另一边搓麻绳”的情况）：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-7506bf2433b656d7ac04f15f4aeec316_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;421&quot; data-rawheight=&quot;243&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;（三）由前两个假设可知，没有两个 &lt;equation&gt;b&lt;/equation&gt; 或 &lt;equation&gt;b^{-1}&lt;/equation&gt; 相连、也没有两个 &lt;equation&gt;a&lt;/equation&gt; 或 &lt;equation&gt;a^{-1}&lt;/equation&gt; 相连，所以“&lt;b&gt;通常意义上的美观&lt;/b&gt;”的辫子应该是 &lt;equation&gt;b&lt;/equation&gt; 或 &lt;equation&gt;b^{-1}&lt;/equation&gt; 、 &lt;equation&gt;a&lt;/equation&gt; 或 &lt;equation&gt;a^{-1}&lt;/equation&gt; 交错形成的有限长度的串。&lt;/p&gt;&lt;p&gt;而后，可以验证：&lt;/p&gt;&lt;p&gt;&lt;equation&gt;aba^{-1} = ba^{-1}b^{-1}&lt;/equation&gt; ，&lt;/p&gt;&lt;p&gt;&lt;equation&gt;ab^{-1}a^{-1} = bab^{-1}&lt;/equation&gt; ，&lt;/p&gt;&lt;p&gt;&lt;equation&gt;a^{-1}ba = b^{-1}a^{-1}b&lt;/equation&gt; &lt;i&gt;，&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;equation&gt;a^{-1}b^{-1}a = b^{-1}ab&lt;/equation&gt; &lt;i&gt;，&lt;/i&gt;&lt;/p&gt;&lt;p&gt;&lt;equation&gt;ab^{-1}a = b^{-1}ab^{-1}&lt;/equation&gt; ，&lt;/p&gt;&lt;p&gt;&lt;equation&gt;a^{-1}ba^{-1} = ba^{-1}b&lt;/equation&gt; &lt;i&gt;。&lt;/i&gt;&lt;/p&gt;&lt;p&gt;例如，对于“ &lt;equation&gt;a^{-1}b^{-1}a = b^{-1}ab&lt;/equation&gt; ”，可以参看下图，其中左图和中图实质上都是右图。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b3935203780568bc4a38d86eef1cf799_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;727&quot; data-rawheight=&quot;356&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;于是可以得到：&lt;/p&gt;&lt;p&gt;&lt;equation&gt;abab^{-1} = a(ab^{-1}a^{-1}) = a^2b^{-1}a^{-1}&lt;/equation&gt;   ——  （出现了 &lt;equation&gt;a^2&lt;/equation&gt; ）；&lt;/p&gt;&lt;p&gt;&lt;equation&gt;aba^{-1}b = a(a^{-1}ba^{-1}) = ba^{-1}&lt;/equation&gt;   ——  （串的长度缩短）；&lt;/p&gt;&lt;p&gt;&lt;equation&gt;aba^{-1}b^{-1} = a(aba^{-1}) = a^2ba^{-1}&lt;/equation&gt;   ——  （出现了 &lt;equation&gt;a^2&lt;/equation&gt; ）；&lt;/p&gt;&lt;p&gt;……&lt;/p&gt;&lt;p&gt;例如下图表示 &lt;equation&gt;b^{-1}a^{-1}ba^{-1} = a^{-1}baa^{-1} = a^{-1}b&lt;/equation&gt; ，其中左图和中图实质上都是右图。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-72f719dad055a9128250e89ff5e8a3ea_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;831&quot; data-rawheight=&quot;413&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;p&gt;最终可以得到 &lt;equation&gt;\{a^{i_1}b{j_1}a^{i_2} b^{j_2},b^{j_1}a^{i_1}b^{j_2}a^{i_2}, i_k, j_k= \pm1\}&lt;/equation&gt; 共32个元素（串）中，除了 &lt;equation&gt;\{abab, a^{-1}b^{-1}a^{-1}b^{-1}, baba, b^{-1}a^{-1}b^{-1}a^{-1}\}&lt;/equation&gt; 外，其他28个串或者（等价地）将会出现 &lt;equation&gt;a^2&lt;/equation&gt; 、 &lt;equation&gt;b^2&lt;/equation&gt; 、 &lt;equation&gt;(a^{-1})^2&lt;/equation&gt; 和 &lt;equation&gt;(b^{-1})^2&lt;/equation&gt; 的情况；或者串可以化简变短。&lt;/p&gt;&lt;p&gt;综合上述讨论，可以看出，如果编辫子中的“交叉”数至少是4的话（在现实中，这是一个合理的条件），“通常意义上的美观”的辫子就是 &lt;equation&gt;\{(ab)^n, (ab)^na, (ba)^n, (ba)^nb, (a^{-1}b^{-1})^n, (a^{-1}b^{-1})^na^{-1}, (b^{-1}a^{-1})^n, (b^{-1}a^{-1})^nb^{-1}, n\geq 2\}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;通俗地讲就是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;equation&gt;a&lt;/equation&gt; 、 &lt;equation&gt;b&lt;/equation&gt; 交替出现的串——对应之前描述的编麻花辫方法（或者左右镜像方法）；或者是&lt;/li&gt;&lt;li&gt;&lt;equation&gt;a^{-1}&lt;/equation&gt; 、 &lt;equation&gt;b^{-1}&lt;/equation&gt; 交替出现的串——对应之前描述的编麻花辫方法的前后翻转（也即将“压住另一股头发”改为“被另一股头发压住”，本质上没有区别，但是在“编”辫子时会感觉不顺手）。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;所以，无论古今中外，编&lt;b&gt;“通常意义上的美观”麻花辫的方法只能如此单一&lt;/b&gt;！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;最后，辫子群在&lt;b&gt;公钥密码学&lt;/b&gt;中具有非常重要的地位和价值，只是它不适于在这个专栏介绍了——现在世面上密码学的教材介绍椭圆曲线密码体制（ECC）的都不算多，更何况辫群密码体制。&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-04-12-35562657</guid>
<pubDate>Thu, 12 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>基于模运算的校验码（们）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-03-17-34592759.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34592759&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d6d2c98e18208f7e38c046147c2d202f_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;内容&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;“条形码”&lt;/li&gt;&lt;li&gt;国际标准书号ISBN&lt;/li&gt;&lt;li&gt;第二代身份证&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;h2&gt;“条形码”&lt;/h2&gt;&lt;p&gt;通常讲的“条形码”，源头是&lt;b&gt;UPC（universal product code，商品统一代码）&lt;/b&gt;。这是由美国的乔·伍德兰德（Joe Woodland）和贝尼·西尔佛（Beny Silver）两位工程师研究出来的，最初他们用条形码表示食品项目并研制相应的识别系统设备。1949年获得了美国的专利。UPC码共有A、B、C、D、E等五种版本（就不详细列出了）。&lt;/p&gt;&lt;p&gt;我国目前常用的条形码实际上是&lt;b&gt;EAN（European Article Number）&lt;/b&gt;条码。&lt;/p&gt;&lt;p&gt;EAN条码是欧洲的国际物品编码协会（International Article&lt;br&gt;Numbering Association）制定的一种条码，在UPC-A标准的基础上建立。EAN条码符号有标准版和缩短版两种，标准版由13位数字构成，又称为EAN-13码，缩短版表示8位数字构成，又称为EAN-8码。两种条码的最后一位为校验位，由前面的12位或7位数字计算得出。我国于1991年加入EAN组织。&lt;/p&gt;&lt;p&gt;（题图就是一种食品的EAN-13码）&lt;/p&gt;&lt;p&gt;EAN-13码由前缀码、生产厂商代码（厂商识别码）、商品项目代码和校验码组成。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;前缀码是国际EAN组织标识各会员组织的代码，我国为690-695；&lt;/li&gt;&lt;li&gt;变长的生产厂商代码是EAN编码组织分配给厂商的代码；&lt;/li&gt;&lt;li&gt;商品项目代码由厂商自行编码；&lt;/li&gt;&lt;li&gt;校验码，只有一位，取值范围从0到9，目的是校验代码的正确性。计算方法是用1分别乘以EAN-13的前12位(位数从左到右为1到12）中的奇数位，用3乘以偶数位，二者求和得到结果&lt;i&gt;S&lt;/i&gt;，然后校验码为 &lt;equation&gt;(10-S)(\mod 10)&lt;/equation&gt; 。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;换言之用1分别乘以EAN-13的所有奇数位(位数从左到右为1到13），用3乘以全部偶数位，二者的和是10的倍数。&lt;/p&gt;&lt;p&gt;例如：某产品的条形码的前12位是694 021189000，那么按照下图可以计算出来最后一位为4。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7028868d5c141d7bd6622fab464616b6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;853&quot; data-rawheight=&quot;110&quot;&gt;&lt;hr&gt;&lt;h2&gt;新版国际标准书号ISBN-13&lt;/h2&gt;&lt;p&gt;为什么叫做“新版”呢？是因为ISO于1972年颁布了ISBN国际标准，2007年1月1日前，ISBN由10位数字组成。而2007年1月1日起，实行新版ISBN。&lt;/p&gt;&lt;p&gt;新版国际标准书号（International Standard Book&lt;br&gt;Number）号码由13位数字组成，并以四个连接号或四个空格加以分割，每组（共5组）数字都有固定的含义。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;第一组：978或979；&lt;/li&gt;&lt;li&gt;第二组：国家、语言或区位代码（例如中国大陆为“978-7”表示汉语）；&lt;/li&gt;&lt;li&gt;第三组：表示出版社代码，由各国家或地区的国际标准书号分配中心，分配给各个出版社；&lt;/li&gt;&lt;li&gt;第四组：书序码，是该出版物的代码，由出版社具体给出；&lt;/li&gt;&lt;li&gt;第五组：校验码，只有一位，计算方法与EAN-13相同。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;例如：我觉得有一本很好的书，ISBN是978-7-302-32015-？。其中，&lt;/p&gt;&lt;ul&gt;&lt;li&gt;978-7表示汉语；&lt;/li&gt;&lt;li&gt;302表示出版社为“清华大学出版社”；&lt;/li&gt;&lt;li&gt;32015为图书的代码；&lt;/li&gt;&lt;li&gt;9+8+3+2+2+1=25，3(7+7+0+3+0+5)=66，于是校验码为(10-(25+66))(mod 10)=9。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;所以这本写得很好的书的完整的ISBN是：978-7-302-32015-9。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;第二代居民身份证&lt;/h2&gt;&lt;p&gt;1984年4月6日国务院发布《中华人民共和国居民身份证试行条例》，并且开始颁发第一代居民身份证。2004年3月29日起，中国大陆正式开始为居民换发第二代居民身份证。&lt;/p&gt;&lt;p&gt;第二代居民身份证的编码方法是：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-fb4b13a3ea93f61171ab54297adccc47_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;768&quot; data-rawheight=&quot;137&quot;&gt;&lt;ul&gt;&lt;li&gt;前1、2位数字表示所在省（直辖市、自治区）的代码（例如北京市为11）&lt;/li&gt;&lt;li&gt;第3、4位数字表示所在地级市（自治州）的代码&lt;/li&gt;&lt;li&gt;第5、6位数字表示所在区（县、自治县、县级市）的代码&lt;/li&gt;&lt;li&gt;第7-14位数字表示出生年月日&lt;/li&gt;&lt;li&gt;第15、16位数字表示所在地的派出所的代码&lt;/li&gt;&lt;li&gt;第17位数字表示性别，奇数表示男性，偶数表示女性&lt;/li&gt;&lt;li&gt;第18位数字是校检码（由前17位计算得来）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;校检码的计算方法符合ISO/IEC 7064:2003：&lt;/p&gt;&lt;p&gt;为表述的方便性，将身份证的18位数自左而右记作 &lt;equation&gt;K_{17}, K_{16},…, K_1, K_0&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;1.&lt;/b&gt; 将前17位数分别乘以不同的系数。从左至右前17位的系数（ &lt;equation&gt;W_{17}, W_{16},…, W_1, W_0&lt;/equation&gt; ）分别为：7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2。&lt;/p&gt;&lt;p&gt;——可以看出 &lt;equation&gt;W_i = 2^i (\mod 11)&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;&lt;b&gt;2.&lt;/b&gt; 将这17个数字和系数相乘的结果累加后模11求余；&lt;/p&gt;&lt;p&gt;&lt;b&gt;3.&lt;/b&gt; 余数0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10分别对应（相当于下述公式中的函数 &lt;equation&gt;f&lt;/equation&gt; ）的校验码为1, 0, X, 9, 8, 7, 6, 5, 4, 3, 2。&lt;/p&gt;&lt;p&gt;——即校验码与余数的和模11余1，X代表10。（这是因为10在罗马数字中表示作X）。&lt;/p&gt;&lt;p&gt;这个计算方法使用公式表示就是： &lt;equation&gt;K_0=f\left( \sum_{i=1}^{17}{K_i\times W_i\mod 11} \right)=\left(12- \sum_{i=1}^{17}{K_i\times W_i} \right)\mod 11&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是， &lt;equation&gt; \sum_{i=0}^{17}{K_i\times W_i} \equiv 1(\mod 11)&lt;/equation&gt; ，即 &lt;equation&gt; \sum_{i=0}^{17}{K_i\times 2^i} \equiv 1(\mod 11)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;例如：一个（虚拟）的身份证号的前17位为11010420180915195，最后一位校验码的计算过程是：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-259411bd0473937b28a8ed6e1bf46583_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;831&quot; data-rawheight=&quot;161&quot;&gt;&lt;p&gt;&lt;equation&gt;\left( \sum_{i=1}^{17}{K_i\times W_i\mod 11} \right)=\left( 241 \mod 11 \right)=10&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;再通过查表即得校验码是2：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-67a85c93d4be2c67c9f1f6e6dab40c08_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;814&quot; data-rawheight=&quot;92&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;（一）&lt;/b&gt;第二代身份证的验证码可以&lt;b&gt;发现1个字符的错误&lt;/b&gt;——&lt;/p&gt;&lt;p&gt;假设某个 &lt;equation&gt;K_j&lt;/equation&gt; 被错抄成 &lt;equation&gt;K&#39;_j &lt;/equation&gt; ，那么计算错误的身份证的 &lt;equation&gt;\left( \sum_{i=0,i\ne j}^{17}{K_i\times 2^i+K&#39;_j\times 2^j} \right)\mod 11&lt;/equation&gt; 。它和正确的校验和 &lt;equation&gt;\left( \sum_{i=0}^{17}{K_i\times 2^i\mod 11} \right)=1&lt;/equation&gt; 相比，差异为 &lt;equation&gt;\left( K&#39;_j-K_j \right)\times 2^j&lt;/equation&gt; 。由于2和 &lt;equation&gt;\left( K&#39;_j-K_j \right)&lt;/equation&gt; 都与素数11矛盾，因此 &lt;equation&gt;\left( K&#39;_j-K_j \right)\times 2^j\mod 11\ne 0&lt;/equation&gt; ，于是 &lt;equation&gt;\left( \sum_{i=1,i\ne j}^{17}{K_i\times 2^i+K&#39;_j\times 2^j} \right)\mod 11\ne 0&lt;/equation&gt; ，不能通过校验。&lt;/p&gt;&lt;p&gt;&lt;b&gt;（二）&lt;/b&gt;第二代身份证的验证码可以&lt;b&gt;纠正1个已知位置的错误&lt;/b&gt;——&lt;/p&gt;&lt;p&gt;假设某个 &lt;equation&gt;K_j&lt;/equation&gt; 被错抄成 &lt;equation&gt;K&#39;_j &lt;/equation&gt; ，那么计算错误的身份证的校验和为 &lt;equation&gt;\left( \sum_{i=1,i\ne j}^{17}{K_i\times 2^i+K&#39;_j\times 2^j} \right)\mod 11\ne 1&lt;/equation&gt;  。可以通过 &lt;equation&gt;K_j=\left( K&#39;_j-\left( \sum_{i=0,i\ne j}^{17}{K_i\times 2^i+K&#39;_j\times 2^j-1} \right)\times 6^j \right)\mod 11&lt;/equation&gt; 计算恢复出正确的 &lt;equation&gt;K_j&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;（三）&lt;/b&gt;第二代身份证的验证码可以&lt;b&gt;发现2个相邻字符的颠倒错误&lt;/b&gt;——&lt;/p&gt;&lt;p&gt;假设某个 &lt;equation&gt;K_j&lt;/equation&gt; 和被 &lt;equation&gt;K_{j+1}&lt;/equation&gt; 抄颠倒，那么错误的身份证的校验和 &lt;equation&gt;\left( \sum_{i=0,i\ne j,i\ne j+1}^{17}{K_i\times 2^i+K_{j+1}\times 2^j+K_j\times 2^{j+1}} \right)\mod 11&lt;/equation&gt; 。它和正确的校验和 &lt;equation&gt;\left( \sum_{i=0}^{17}{K_i\times 2^i\mod 11} \right)=1&lt;/equation&gt; 相比，差异为 &lt;equation&gt;\left( K_j-K_{j+1} \right)\times \left( 2^{j+1}-2^j \right)\mod 11=\left( K_j-K_{j+1} \right)\times 2^j\mod 11&lt;/equation&gt; 。由于2和 &lt;equation&gt;\left( K_j-K_{j+1} \right)&lt;/equation&gt; 都与素数11矛盾，因此 &lt;equation&gt;\left( K_j-K_{j+1} \right)\times 2^j\mod 11\ne 0&lt;/equation&gt; ，于是 &lt;equation&gt;\left( \sum_{i=0,i\ne j,i\ne j+1}^{17}{K_i\times 2^i+K_{j+1}\times 2^j+K_j\times 2^{j+1}} \right)\mod 11\ne 0&lt;/equation&gt; ，不能通过校验。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;最后，提一句，二维码的纠错能力很强，所以可以牺牲一些信息做出特型二维码，那是因为它使用了更复杂的纠错码——通常是&lt;b&gt;Reed–Solomon codes&lt;/b&gt;，而它，就复杂得多了。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-03-17-34592759</guid>
<pubDate>Sat, 17 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>顿时错乱（Instant Insanity）玩具</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-03-11-34432732.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34432732&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-de4aed553f0c45f9b051fae8a70d9ba9_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;题图是我在*宝购买的“&lt;b&gt;成人益智玩具鲁班锁孔明锁系列玩具立刻疯对色棋古典益智挑战IQ&lt;/b&gt;”（这么长的名字，累死我了………………）&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;时错乱/即刻疯狂&lt;/b&gt;（Instant Insanity）智力玩具由Franz Owen Armbruster发明，并于1967年投放市场。&lt;/p&gt;&lt;p&gt;它包括4个立方体，每1个立方体的每1面都染了红、白、蓝或绿4种颜色之一。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-fdc93ed18cb93ee74d9e2a905c273e1a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;848&quot; data-rawheight=&quot;265&quot;&gt;&lt;p&gt;下图中，深色字表示可见面，浅色字表示不可见面。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-07b463a97c60b5b33b9e2fd2ae9ef19e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;783&quot; data-rawheight=&quot;207&quot;&gt;&lt;p&gt;游戏的目标是将4个立方体堆起来形成一个 &lt;equation&gt;1\times1\times4&lt;/equation&gt; 的柱体，使得无论从前面、后面、左面还是右面都可以看到所有的4种颜色。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b3bb07056d27629a3ce924cf60c6995b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;497&quot; data-rawheight=&quot;407&quot;&gt;&lt;hr&gt;&lt;p&gt;首先可以将立方体表示为平面形式&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-463df93555fc44f13b5c5311e07d555f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;706&quot; data-rawheight=&quot;529&quot;&gt;&lt;p&gt;例如：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-2966bbcf1fc1cd275f1a5b1510b2a523_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;501&quot; data-rawheight=&quot;240&quot;&gt;&lt;p&gt;设置4个顶点 &lt;b&gt;R&lt;/b&gt;（红色）、&lt;b&gt;G&lt;/b&gt;（绿色）、&lt;b&gt;B&lt;/b&gt;（蓝色）、W（白色）。在表示相对面的颜色顶点之间连一条无向边，形成一个无向图。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-ff9c7b422ec45186fe6e4f7716270495_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;779&quot; data-rawheight=&quot;258&quot;&gt;&lt;p&gt;四个立方体都可以如上处理：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c1b95831523c77d03c171f7392b3de37_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;664&quot; data-rawheight=&quot;844&quot;&gt;&lt;p&gt;将四个方块对应的无向图叠加起来，并对边标号1、2、3、4（来自同一个立方体的三条边给予相同的标号）：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0b5ba5109004b5993faf5e514aa79262_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;549&quot; data-rawheight=&quot;433&quot;&gt;&lt;hr&gt;&lt;p&gt;如果游戏的解是存在的——（深底浅字表示左右两面，浅底深字表示前后两面。）&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1372305ebd4d25a08ec440786d0efea9_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;640&quot; data-rawheight=&quot;430&quot;&gt;&lt;p&gt;如果游戏的解是存在的（如上图所示），那么首先考虑前后两面，第1个立方体前后两面相对颜色是&lt;i&gt;R&lt;/i&gt;-&lt;i&gt;W&lt;/i&gt;、第2个立方体前后两面相对颜色是&lt;i&gt;W&lt;/i&gt;-&lt;i&gt;B&lt;/i&gt;、第3个立方体前后两面相对颜色是&lt;i&gt;B&lt;/i&gt;-&lt;i&gt;G&lt;/i&gt;、第4个立方体前后两面相对颜色是&lt;i&gt;G&lt;/i&gt;-&lt;i&gt;R&lt;/i&gt;，这就形成了叠加图&lt;i&gt;G&lt;/i&gt;的一个有4条边的2-正则支撑子图（下图左），而且每条边标号各异。类似地，可以得到左右两面对应的子图（下图右），而且这两个子图不存在公共边。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-ac923a8c30697e5c5a49361639c6b9aa_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;662&quot; data-rawheight=&quot;294&quot;&gt;&lt;hr&gt;&lt;p&gt;反之，如果给出一个有4个顶点、且每条边标号各异的2-正则图，就可以给出一种对应的码放方式，使得前后面都看到所有的4种颜色，例如：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-4e2cd1d39e8df043d3719201fe90f544_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;591&quot; data-rawheight=&quot;555&quot;&gt;&lt;p&gt;在“组合”的过程中唯一可能遇到的问题是：&lt;/p&gt;&lt;p&gt;    立方体2需要“”但实际上是“GGWB”。&lt;/p&gt;&lt;p&gt;    这时可以在保证不改变前面和后面的颜色的情况下，对换左面和右面的颜色——只需要将立方体2翻转180◦即可：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-a2c143cf93abe319b8896835c0f11245_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;783&quot; data-rawheight=&quot;306&quot;&gt;&lt;hr&gt;&lt;p&gt;从前面的讨论可以看出，对于一个“顿时错乱”问题，求解过程是：&lt;/p&gt;&lt;p&gt;&lt;b&gt;1.&lt;/b&gt; 对每个立方体，给出对应的无向图；&lt;/p&gt;&lt;p&gt;&lt;b&gt;2.&lt;/b&gt; 得到4个立方体无向图的叠加图 &lt;equation&gt;G&lt;/equation&gt; ；&lt;/p&gt;&lt;p&gt;&lt;b&gt;3.&lt;/b&gt; 需要叠加图 &lt;equation&gt;G&lt;/equation&gt; 的两个具有4条边的、2-正则的、没有公共边且各边标号互异的支撑子图；&lt;/p&gt;&lt;p&gt;&lt;b&gt;4.&lt;/b&gt; 如果步骤3不能成功，则不存在解，否则由两个支撑子图构造一个解。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;例如：找到下左图中的两个具有4条边的、2-正则、没有公共边且各边标号互异的支撑子图如下右图表示。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-d5aab9993583d538377b3edd0a6bd07c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;798&quot; data-rawheight=&quot;536&quot;&gt;&lt;p&gt;进而可以得到原问题的一个解：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0988ab35691aab6a0517d3fafa817a56_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;821&quot; data-rawheight=&quot;536&quot;&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-03-11-34432732</guid>
<pubDate>Sun, 11 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>“宝葫芦能收宝葫芦么？”——苗苗大人</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-03-04-30022927.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/30022927&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a21b2ca680cc9bec90c55d6ec1787ed8_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;早晨，我闺女&lt;b&gt;苗苗&lt;/b&gt;大人问我——&lt;/p&gt;&lt;p&gt;苗苗：这个★★大学这么大，怎么把它带回家啊？&lt;br&gt;我：用个宝葫芦！什么东西啊，说“收！”就都收进宝葫芦里面了（这时的我还在盲目沾沾自喜我的机智）。 &lt;/p&gt;&lt;p&gt;苗苗：那宝葫芦能把宝葫芦装进去么？&lt;/p&gt;&lt;p&gt;我：(°ㅂ° ╬)………………Emmmmmmmmm这个问题在&lt;i&gt;公理化&lt;/i&gt;“宝葫芦”的世界里&lt;b&gt;不讨论&lt;/b&gt;。 &lt;/p&gt;&lt;p&gt;苗苗：为什么啊(ง ˙o˙)ว？ &lt;/p&gt;&lt;p&gt;我：因为——“&lt;b&gt;正则公理&lt;/b&gt;”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;话说吧，大家都知道吧，&lt;b&gt;集合论（set theory）&lt;/b&gt;是现代数学的基础。&lt;/p&gt;&lt;p&gt;德国数学家康托（Georg Cantor，1845-1918）对集合论的思考与研究是从对三角级数的研究中产生的。1874年他发表了第一篇关于无穷集合的文章，开创了集合论（准确地说，他所建立的是&lt;b&gt;朴素集合论&lt;/b&gt;，naive set theory，NST）。而且他和戴德金（Julius Wilhelm Richard Dedekind，1831–1916）一起建立了&lt;b&gt;实数理论&lt;/b&gt;，基本上为&lt;b&gt;第二次数学危机&lt;/b&gt;的解决画上了完满的句号。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;康托自己提出了&lt;b&gt;康托悖论（Cantor&#39;s paradox）&lt;/b&gt;：&lt;/p&gt;&lt;p&gt;首先康托证明了“康托定理”（可见“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34097692&quot;&gt;不能证明也无法否定的“连续统假说”——集合的势（三）&lt;/a&gt;”）。&lt;/p&gt;&lt;p&gt;由此定理可得：对于任意集合 &lt;equation&gt;A&lt;/equation&gt; 而言， &lt;equation&gt; \wp(A)\not\subseteq A&lt;/equation&gt; 。其中 &lt;equation&gt; \wp(A)&lt;/equation&gt; 表示 &lt;equation&gt;A&lt;/equation&gt; 的幂集。&lt;/p&gt;&lt;p&gt;好的，下面假设 &lt;equation&gt;S&lt;/equation&gt; 是“所有集合的集合”，那么问题就来了：对于任意 &lt;equation&gt;B\in \wp(S)&lt;/equation&gt; ，由于 &lt;equation&gt;B&lt;/equation&gt; 是集合，所以 &lt;equation&gt;B \in S&lt;/equation&gt; ，于是 &lt;equation&gt; \wp(S)\subseteq S&lt;/equation&gt; ，而这就产生了矛盾。&lt;/p&gt;&lt;p&gt;但这时，康托只认为这一悖论通过反证法恰恰证明了没有“所有集合的集合”或者说“最大的集合”。&lt;/p&gt;&lt;p&gt;其实这时已经出现了 &lt;equation&gt;S \in S&lt;/equation&gt; （ &lt;equation&gt; S\in\wp(S)\subseteq S&lt;/equation&gt; ）这种表述。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;直到1901年罗素发表了著名的&lt;b&gt;罗素悖论（Russell&#39;s paradox）&lt;/b&gt;：设集合 &lt;equation&gt;S=\{x|x ∉S\}&lt;/equation&gt; ，那么问题是 &lt;equation&gt;S\in S&lt;/equation&gt; 是否成立？&lt;/p&gt;&lt;p&gt;根据排中律，回答必然是“是”或“不是”。然而若 &lt;equation&gt;S\in S&lt;/equation&gt; ，则 &lt;equation&gt;S\not\in S&lt;/equation&gt; ；若 &lt;equation&gt;S\not\in S&lt;/equation&gt; ，则 &lt;equation&gt;S\in S&lt;/equation&gt; 。——这就是“悖论”。&lt;/p&gt;&lt;p&gt;罗素悖论还有一种广为流传的通俗描述——&lt;b&gt;理发师悖论（barber paradox）&lt;/b&gt;：在一个村子里有一位理发师，这位理发师声称：“给而且只给那些不给自己理发的人理发”。现在的问题是理发师是否给自己理发？ （首先在这个流行的说法中，必须补充一个条件：村子里&lt;b&gt;至少有一个&lt;/b&gt;村民不给自己理发）&lt;/p&gt;&lt;p&gt;理发师悖论和罗素悖论的等价性很晦(bie4)/(nan2)涩(niu4)/(shou4)：“理发师 &lt;equation&gt;x&lt;/equation&gt; 给自己理发”表示 &lt;equation&gt;x\in x&lt;/equation&gt; ，这里的两个 &lt;equation&gt;x&lt;/equation&gt; 含义不同，左边的 &lt;equation&gt;x&lt;/equation&gt; 表示理发师 &lt;equation&gt;x&lt;/equation&gt; ，右边的是 &lt;equation&gt;x&lt;/equation&gt; 给理发的人的集合，于是理发师 &lt;equation&gt;S&lt;/equation&gt;是否属于他给理发的人 &lt;equation&gt;S&lt;/equation&gt; 。&lt;/p&gt;&lt;blockquote&gt;不过这种晦(bie4)(nan2)涩(niu4)(shou4)也很容易理解：&lt;br&gt;一般民众（包括我）很难理解一个个体组成的集合“ &lt;equation&gt;x&lt;/equation&gt; ”居然是自身的一个成员，就像“某某大学其实是自己的一个系”一样难以接受。&lt;br&gt;而另一方面，真正能理解“ &lt;equation&gt;x\in x&lt;/equation&gt; ”写法的人又何必去看理发师悖论？罗素悖论的表述已经足够清晰简单了。&lt;br&gt;因此在向民众传播时，理发师悖论是个（虽然无可奈何但是）非常好的选择。&lt;/blockquote&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;（&lt;b&gt;简单地&lt;/b&gt;说，）在Zermelo-Fraenkel公理化集合论中有如下公理及公理模式：&lt;/p&gt;&lt;p&gt;&lt;b&gt;分离公理模式（Axiom schema of specification）：&lt;/b&gt;&lt;/p&gt;&lt;p&gt;若 &lt;equation&gt;z&lt;/equation&gt; 是任一集合， &lt;equation&gt;\phi(x)&lt;/equation&gt; 是与 &lt;equation&gt;x&lt;/equation&gt; 有关的陈述句（事实上是一阶逻辑中的公式），那么可以定义集合 &lt;equation&gt;y=\{x\in z|\phi (x)为真\}&lt;/equation&gt; ，是 &lt;equation&gt;z&lt;/equation&gt; 的一个子集。&lt;/p&gt;&lt;p&gt;也就是说只能由已给的集合定义&lt;b&gt;子集&lt;/b&gt;（称作restricted comprehension），而不允许直接如 &lt;equation&gt;\{x|\phi (x)\}&lt;/equation&gt; 形式定义集合（称作unrestricted comprehension）。&lt;/p&gt;&lt;p&gt;于是回避（而不是解决）了罗素悖论，也即认为 &lt;equation&gt;S=\{x|x ∉S\}&lt;/equation&gt; 所定义的不是“集合”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;下面谈“ &lt;equation&gt;S\in S&lt;/equation&gt; ”：&lt;b&gt;配对公理（Axiom of pairing）：&lt;/b&gt;若 &lt;equation&gt;x,y&lt;/equation&gt; 都是集合，则存在集合 &lt;equation&gt;z&lt;/equation&gt; ，使得 &lt;equation&gt;x\in z 且 y\in z&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;结合分离公理模式，可以定义 &lt;equation&gt;z_1=\{w\in z| w=x或者w=y\}&lt;/equation&gt; ，它的成员完全是 &lt;equation&gt;x,y&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;正则公理/基础公理（Axiom of regularity or Axiom of foundation）：&lt;/b&gt;若 &lt;equation&gt;x&lt;/equation&gt; 是任一非空集合，则存在 &lt;equation&gt;x&lt;/equation&gt; 的某元素 &lt;equation&gt;y&lt;/equation&gt; 使得 &lt;equation&gt;y\cap x=\emptyset&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;用一阶逻辑的语言就是： &lt;equation&gt;\forall x[\exists a(a\in x)\Rightarrow \exists y(y\in x\land \lnot \exists z(z\in y\land z\in x))]&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;正则公理就保证了在Zermelo-Fraenkel公理化集合论的世界里&lt;b&gt;不允许出现“ &lt;equation&gt;S\in S&lt;/equation&gt; ”&lt;/b&gt;：&lt;/p&gt;&lt;p&gt;&lt;b&gt;&lt;i&gt;证明：&lt;/i&gt;&lt;/b&gt;如果存在某个集合 &lt;equation&gt;S&lt;/equation&gt; 使得 &lt;equation&gt;S\in S&lt;/equation&gt; ，则由配对公理及分离公理模式可以构造集合 &lt;equation&gt;T=\{S\}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;根据正则公理，有： &lt;equation&gt;T&lt;/equation&gt; 的唯一元素 &lt;equation&gt;S&lt;/equation&gt; 满足 &lt;equation&gt;S\cap T=\emptyset&lt;/equation&gt; ，即 &lt;equation&gt;S\cap \{S\}=\emptyset&lt;/equation&gt; 。而这就与 &lt;equation&gt;S\in S且S\in\{S\}&lt;/equation&gt; 产生了矛盾。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-03-04-30022927</guid>
<pubDate>Sun, 04 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>不能证明也无法否定的“连续统假说”——集合的势（三）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-03-02-34097692.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34097692&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-49bfd2ca0e34828b69313bfd17961894_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;之前&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33770583&quot;&gt;从一道概率题到“一一对应”——集合的势（一）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33900428&quot;&gt;Hilbert旅馆的故事——集合的势（二）&lt;/a&gt;&lt;/p&gt;&lt;p&gt;两篇文章介绍了“集合的势”，而本篇文章主要回答：&lt;/p&gt;&lt;p&gt;&lt;b&gt;1&lt;/b&gt;  自然数（整数、有理数）和实数哪个多？&lt;/p&gt;&lt;p&gt;&lt;b&gt;2&lt;/b&gt;  什么样的集合包含的元素“最多”？&lt;/p&gt;&lt;p&gt;这两个遗留问题。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;一&lt;/b&gt;、自然数集 &lt;equation&gt;\mathbb{N}=\{0, 1, 2, …\}&lt;/equation&gt; 和闭区间 &lt;equation&gt;[0, 1]&lt;/equation&gt; &lt;b&gt;不等势&lt;/b&gt;。&lt;/h2&gt;&lt;p&gt;采用反证法。假设存在一个双射函数 &lt;equation&gt;f:\mathbb{N}\rightarrow[0,1]&lt;/equation&gt; ，则 &lt;equation&gt;[0, 1]&lt;/equation&gt; 中的元素必与 &lt;equation&gt;\mathbb{N}=\{0, 1, 2, …\}&lt;/equation&gt; 中的元素一一对应，那么 &lt;equation&gt;[0, 1]&lt;/equation&gt; 中的元素必可排列成：&lt;/p&gt;&lt;p&gt;第0个实数、第1个实数、第2个实数、第3个实数、第4个实数、第5个实数……&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-200b1a817cd49bb93075e86b6d8aee30_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;328&quot; data-rawheight=&quot;269&quot;&gt;&lt;p&gt;由于 &lt;equation&gt;f&lt;/equation&gt; 是双射，因此任一 &lt;equation&gt;[0,1]&lt;/equation&gt; 中的实数均应出现在上表中的某一行。&lt;/p&gt;&lt;p&gt;下面按照对角线构造一个新的小数 &lt;equation&gt;x^\ast=0.a_{00}^\ast a_{11}^\ast a_{22}^\ast a_{33}^\ast...a_{ii}^\ast... &lt;/equation&gt; ，使得 &lt;equation&gt;a_{ii}^\ast\ne a_{ii}&lt;/equation&gt; 且 &lt;equation&gt;a_{ii}^\ast\ne9 &lt;/equation&gt; （这是为了避免出现0.79999999....等类似情况）。&lt;/p&gt;&lt;p&gt;那么显然有 &lt;equation&gt;x^\ast\in [0,1]&lt;/equation&gt; ，而 &lt;equation&gt;x^\ast&lt;/equation&gt; 又不在上表中——因为它与上表中任一项都&lt;b&gt;至少存在一位不同&lt;/b&gt;。因此 &lt;equation&gt;f&lt;/equation&gt; 不可能是满射，更不可能是双射。&lt;/p&gt;&lt;p&gt;——&lt;b&gt;这就是著名的“对角线法则”&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;有，&lt;/p&gt;&lt;p&gt;&lt;b&gt;康托定理（1890）&lt;/b&gt;——自然数集 &lt;equation&gt;\mathbb{N}&lt;/equation&gt; 和实数集 &lt;equation&gt;\mathbb{R}&lt;/equation&gt; &lt;b&gt;不等势&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;于是我们熟知的数的集合：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;有限集合；&lt;/li&gt;&lt;li&gt;自然数、整数、有理数；&lt;/li&gt;&lt;li&gt;实数、复数。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;就分成了三大类了（事实上第一类又分成很多类）。&lt;/p&gt;&lt;p&gt;&lt;b&gt;定义&lt;/b&gt;——与自然数集合或其子集等势的集合称为&lt;b&gt;可数（countable）集合&lt;/b&gt;或&lt;b&gt;可列集合&lt;/b&gt;，自然数集合的基数记为 &lt;equation&gt;\aleph_0 &lt;/equation&gt; (读作阿列夫零)；否则称作&lt;b&gt;不可数（uncountable）集合&lt;/b&gt;或不&lt;b&gt;可列集合&lt;/b&gt;。换言之，设 &lt;equation&gt;A&lt;/equation&gt; 是集合，若 &lt;equation&gt;|A|\leq\aleph_0&lt;/equation&gt; ，则称 &lt;equation&gt;A&lt;/equation&gt; 为可数集或可列集。&lt;/p&gt;&lt;p&gt;全体实数构成的集合 &lt;equation&gt;\mathbb{R}&lt;/equation&gt; 是不可数的，其基数称作&lt;b&gt;连续统（continuum）&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;b&gt;注：&lt;/b&gt;有时亦称实数集合（或与之等势的集合）为连续统。&lt;/p&gt;&lt;p&gt;例如：&lt;/p&gt;&lt;p&gt;(1) 集合 &lt;equation&gt;A=\{1, 3, 5, … , 2n-1, … \}&lt;/equation&gt; ， &lt;equation&gt;B=\{1, 4, 9, 16\}&lt;/equation&gt; 都是可数集；而开区间 &lt;equation&gt;(0, 1)&lt;/equation&gt; 、闭区间 &lt;equation&gt;[0, 1]&lt;/equation&gt; 都是不可数集合。&lt;/p&gt;&lt;p&gt;(2) 在“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33418457&quot;&gt;圆柱儿和TA的浴巾&lt;/a&gt;”中介绍的&lt;b&gt;代数数&lt;/b&gt;虽然包含很多无理数（例如著名的 &lt;equation&gt;\sqrt{2}&lt;/equation&gt; ），但是代数数全体是可数的。&lt;/p&gt;&lt;p&gt;(3) 而同在“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33418457&quot;&gt;圆柱儿和TA的浴巾&lt;/a&gt;”中介绍的&lt;b&gt;超越数&lt;/b&gt;全体是不可数的。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;二、什么样的集合包含的元素“最多”？也就是说，是否存在基数最大的集合？&lt;/h2&gt;&lt;p&gt;康托证明了如下定理，回答了这一问题。&lt;/p&gt;&lt;p&gt;&lt;b&gt;康托定理(1890)&lt;/b&gt;——设 &lt;equation&gt;A&lt;/equation&gt; 为一个集合， &lt;equation&gt;\mathcal{P}(A)&lt;/equation&gt; 为&lt;i&gt;A&lt;/i&gt;的幂集，则有 &lt;equation&gt;|A|&amp;lt;|\mathcal{P}(A)|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;i&gt;证明.&lt;/i&gt; 对任一函数 &lt;equation&gt;g: A\rightarrow \mathcal{P}(A)&lt;/equation&gt; , 构造集合 &lt;equation&gt;B=\{x|x\in A且x\notin g(x)\}&lt;/equation&gt; 。显然有 &lt;equation&gt;B\subseteq A&lt;/equation&gt; ，即 &lt;equation&gt;B\in \mathcal{P}(A)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;对任意 &lt;equation&gt;x\in A&lt;/equation&gt; ，若 &lt;equation&gt;x\in B &lt;/equation&gt; 则 &lt;equation&gt;x\notin g(x)&lt;/equation&gt; ，因此 &lt;equation&gt;B\ne g(x)&lt;/equation&gt; 。这说明没有哪个 &lt;equation&gt;x&lt;/equation&gt; 它的像是 &lt;equation&gt;B&lt;/equation&gt; ，即 &lt;equation&gt;g&lt;/equation&gt; 不是满射，当然也不是双射。因此不存在双射函数 &lt;equation&gt;g: A\rightarrow \mathcal{P}(A)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;此定理说明了：&lt;b&gt;不存在最大基数&lt;/b&gt;。任意一个集合，总存在元素数“严格多于”它的另一个集合。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;对于整数集合，其幂集的基数有何特点呢？以下是一个让人很亲切的结果：&lt;/p&gt;&lt;p&gt;&lt;b&gt;定理——&lt;/b&gt; &lt;equation&gt;| \mathcal{P}(\mathbb{Z})|=|\mathbb{C}|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是复数一定比整数&lt;b&gt;严格&lt;/b&gt;“&lt;b&gt;个数多&lt;/b&gt;”。&lt;/p&gt;&lt;p&gt;那么很自然的问题就是——复数和整数之间还有没有，元素个数严格比整数多、比复数少的集合呢？&lt;/p&gt;&lt;hr&gt;&lt;p&gt;1878年，康托猜测在不存在一个集合，其基数在自然数集的基数和连续统之间，即不存在集合 &lt;equation&gt;A&lt;/equation&gt; 使得 &lt;equation&gt;|\mathbb{Z}|&amp;lt;|A|&amp;lt;|\mathbb{R}|&lt;/equation&gt; 。这就是著名的&lt;b&gt;连续统假设（continuum hypothesis）&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;在1900年第二届国际数学家大会上，大卫·希尔伯特（David Hilbert，1862-1943）把康托尔的连续统假设列入20世纪有待解决的23个重要数学问题之首，因此它又被称为&lt;b&gt;希尔伯特第一问题&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;1938年哥德尔（Kurt Gödel，1906-1978）证明了连续统假设与目前使用的公理化集合论体系（Zermelo–Fraenkel set theory with the axiom of choice，ZFC）&lt;b&gt;不矛盾&lt;/b&gt;，即不能在ZFC中被证伪。&lt;/p&gt;&lt;p&gt;1963年科恩（Paul Joseph Cohen，1934-2007）证明连续假设和ZFC是彼此独立的，即连续统假设&lt;b&gt;不能在ZFC公理系统内证明其正确与否&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-03-02-34097692</guid>
<pubDate>Fri, 02 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>Hilbert旅馆的故事——集合的势（二）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-02-28-33900428.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33900428&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b97e1c009704930a9bdbc0ad10fc7588_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;一家拥有无穷多个（可列多个）客房的旅店每个房间恰能住一位旅客，并已经客满。&lt;/p&gt;&lt;p&gt;当日又有一位旅客投宿…&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-75a92e63f64d5d9635b77de0d3039bdf_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1033&quot; data-rawheight=&quot;576&quot;&gt;&lt;p&gt;于是旅馆主人把1号房间的旅客移到2号房间，2号房间的旅客移到3号房间，3号房间的旅客移到4号房间等等，这样继续移下去。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-1cfd743248d333ab2b2f4eeeadd07d87_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1033&quot; data-rawheight=&quot;328&quot;&gt;&lt;p&gt;这样一来，新客就被安排住进了已被腾空的1号房间。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-defaf69c4ba1ecba97c1faaf4bda2804_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1033&quot; data-rawheight=&quot;328&quot;&gt;&lt;p&gt;事实上。它表述的是集合 &lt;equation&gt;\mathbb{Z}^+=\{1,2,3...\}&lt;/equation&gt; 与集合 &lt;equation&gt;\mathbb{Z}^+-\{1\}=\{2,3,4...\}&lt;/equation&gt; 具有“同样多的”元素。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;“祸”不单行，又来了&lt;b&gt;可数&lt;/b&gt;多位旅客投宿…&lt;/p&gt;&lt;p&gt;于是店主东把1号房间的旅客移到2号房间，2号房间的旅客移到4号房间，3号房间的旅客移到6号房间，如此等等，这样继续下去。现在，所有的单号房间都腾出来了，新来的无穷多位客人可以住进去。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a0a31da1f591d13234210392e2abc31d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1033&quot; data-rawheight=&quot;328&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-97c2b3834397020338dd7deb3d240d5a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1033&quot; data-rawheight=&quot;328&quot;&gt;&lt;p&gt;事实上。它表述的是集合 &lt;equation&gt;\mathbb{Z}^+=\{1,2,3...\}&lt;/equation&gt; 与集合 &lt;equation&gt;2\mathbb{Z}^+=\{2,4,6...\}&lt;/equation&gt; 具有“同样多的”元素。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;“屋漏偏逢连夜雨，船破又遇顶头风”紧接着发生了更为严重的情况，来了无穷（可数）多个具有无穷（可数）多名游客的旅游团，这便如何是好？&lt;/p&gt;&lt;p&gt;店主人把#1房的客人移到#2房，把#2房的客人移到#4房，#3房的客人移到#6房，等等，所有奇数号的房间全部腾空&lt;/p&gt;&lt;p&gt;第一个旅游团游客住的房间编号为 &lt;equation&gt;3,3^2, 3^3, 3^4,&lt;/equation&gt; ……&lt;/p&gt;&lt;p&gt;第二个旅游团客人住的房间编号为 &lt;equation&gt;5,5^2, 5^3, 5^4, &lt;/equation&gt; ……&lt;/p&gt;&lt;p&gt;接着是 &lt;equation&gt;7, 7^2, 7^3, 7^4,&lt;/equation&gt; ……&lt;/p&gt;&lt;p&gt;......&lt;/p&gt;&lt;p&gt;一般地，设第 &lt;equation&gt;m&lt;/equation&gt; 个奇素数是 &lt;equation&gt;p_m&lt;/equation&gt; ，则第 &lt;equation&gt;m&lt;/equation&gt; 个旅游团的成员依次住在 &lt;equation&gt;p_m , p_m^2, p_m^3, p_m^4,&lt;/equation&gt; ……&lt;/p&gt;&lt;p&gt;这样不仅安排了无穷多个旅游团的住宿，而且还&lt;b&gt;空出了很多房间&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;事实上。它表述的是集合 &lt;equation&gt;\mathbb{Z}^+=\{1,2,3...\}&lt;/equation&gt; 没有比集合 &lt;equation&gt;\mathbb{Z}^+\times\mathbb{Z}^+&lt;/equation&gt; “元素个数少”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;对于一个无穷集合，向其中添加有限个元素，甚至“无穷多个”元素得到的新集合，元素数目不变？！&lt;/p&gt;&lt;p&gt;这事实上就是“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33770583&quot;&gt;从一道概率题到“一一对应”——集合的势（一）&lt;/a&gt;”中介绍的“等势”概念。&lt;/p&gt;&lt;p&gt;下面给出一些基本结果：&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;(1)&lt;/b&gt; 自然数集 &lt;equation&gt;\mathbb{N}=\{0, 1, 2, …\}&lt;/equation&gt; 和整数集 &lt;equation&gt;\mathbb{Z}&lt;/equation&gt; 是等势的。双射函数为&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-0fa1cf90d331ca90a112b6e2c5e4b57a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;667&quot; data-rawheight=&quot;311&quot;&gt;&lt;p&gt;示意图如下：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c29410e87cff53966665272e38ff650e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;762&quot; data-rawheight=&quot;338&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;(2)&lt;/b&gt; 自然数集 &lt;equation&gt;\mathbb{N}=\{0, 1, 2, …\}&lt;/equation&gt; 和集合 &lt;equation&gt;\mathbb{N}\times\mathbb{N}&lt;/equation&gt; 等势。&lt;/p&gt;&lt;p&gt;如下图所示，将 &lt;equation&gt;\mathbb{N}\times\mathbb{N}&lt;/equation&gt; 中元素排成一个二维表格，&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-79e04746908ba9172c85bcb7609c0949_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;574&quot; data-rawheight=&quot;446&quot;&gt;&lt;p&gt;而后沿箭头方向建立 &lt;equation&gt;\mathbb{N}&lt;/equation&gt; 和集合 &lt;equation&gt;\mathbb{N}\times\mathbb{N}&lt;/equation&gt; 的一一对应关系： &lt;equation&gt;f(x,y)=\frac{\left( x+y \right)\left( x+y+1 \right)}{2}+y&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;类似地可以证明 &lt;equation&gt;\mathbb{Z}&lt;/equation&gt; 和 &lt;equation&gt;\mathbb{Z}\times\mathbb{Z}&lt;/equation&gt; 等势。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;(3)&lt;/b&gt; 下面讨论有理数集合 &lt;equation&gt;\mathbb{Q}&lt;/equation&gt; 和整数集合 &lt;equation&gt;\mathbb{Z}&lt;/equation&gt; 之间元素“数目” 的关系。需要先介绍两个定义和两个结果：&lt;/p&gt;&lt;p&gt;&lt;b&gt;定义&lt;/b&gt;——假设 &lt;equation&gt;A,B&lt;/equation&gt; 是两个集合，&lt;/p&gt;&lt;p&gt;(a) 如果存在 &lt;equation&gt;A&lt;/equation&gt; 到 &lt;equation&gt;B&lt;/equation&gt; 的单射， 则称集合 &lt;equation&gt;A&lt;/equation&gt; &lt;b&gt;劣势于&lt;/b&gt;集合 &lt;equation&gt;B&lt;/equation&gt; ，记作 &lt;equation&gt;A\leq B&lt;/equation&gt; ；或称 &lt;equation&gt;A&lt;/equation&gt; 的基数小于等于 &lt;equation&gt;B&lt;/equation&gt; 的基数，记作 &lt;equation&gt;|A|\leq|B|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;(b) 如果存在 &lt;equation&gt;A&lt;/equation&gt; 到 &lt;equation&gt;B&lt;/equation&gt; 的单射，但不存在 &lt;equation&gt;A&lt;/equation&gt; 到 &lt;equation&gt;B&lt;/equation&gt; 的双射，则称集合 &lt;equation&gt;A&lt;/equation&gt; &lt;b&gt;严格劣势于&lt;/b&gt;集合 &lt;equation&gt;B&lt;/equation&gt; ，记作 &lt;equation&gt;A&amp;lt;B&lt;/equation&gt; ；或称 &lt;equation&gt;A&lt;/equation&gt; 的基数小于 &lt;equation&gt;B&lt;/equation&gt; 的基数，记作 &lt;equation&gt;|A|&amp;lt;|B|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;策梅罗(Zermelo)定理&lt;/b&gt;——设 &lt;equation&gt;A,B&lt;/equation&gt; 为任意两个集合，其基数的关系必符合以下三条之一。 &lt;/p&gt;&lt;p&gt;(a) &lt;equation&gt;|A|&amp;lt;|B|&lt;/equation&gt; ；&lt;/p&gt;&lt;p&gt;(b) &lt;equation&gt;|A|&amp;gt;|B|&lt;/equation&gt; ；&lt;/p&gt;&lt;p&gt;(c)  &lt;equation&gt;|A|=|B|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;（简单说就是：任意两个集合的元素数&lt;b&gt;一定&lt;/b&gt;可以“比较”）&lt;/p&gt;&lt;p&gt;&lt;b&gt;康托－伯恩斯坦－施罗德(Cantor–Bernstein–Schroeder)定理&lt;/b&gt;——设 &lt;equation&gt;A,B&lt;/equation&gt; 为任意两个集合，若有 &lt;equation&gt;|A|\leq|B|&lt;/equation&gt; 且 &lt;equation&gt;|B|\leq|A|&lt;/equation&gt; ，则有 &lt;equation&gt;|A|=|B|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;做好了准备工作，下面来证明 &lt;equation&gt;|\mathbb{Q}|=|\mathbb{Z}|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;(a) &lt;equation&gt;f(x)=x&lt;/equation&gt; 给出了 &lt;equation&gt;\mathbb{Z}&lt;/equation&gt; 到 &lt;equation&gt;\mathbb{Q}&lt;/equation&gt; 的单射函数，因此 &lt;equation&gt;|\mathbb{Z}|\leq|\mathbb{Q}|&lt;/equation&gt; ；&lt;/p&gt;&lt;p&gt;(b) 每一个非零的有理数都可以表示成 &lt;equation&gt;\frac{a}{b}&lt;/equation&gt; ，其中 &lt;equation&gt;a\in\mathbb{Z}^+&lt;/equation&gt; ， &lt;equation&gt;b\in\mathbb{Z}&lt;/equation&gt; ， &lt;equation&gt;\text{GCD}(a, b)=1&lt;/equation&gt; 。于是可以构造一个单射函数 &lt;equation&gt;g&lt;/equation&gt; ： &lt;equation&gt;g\left( \frac{a}{b} \right)=(a,b)&lt;/equation&gt; 、 &lt;equation&gt;g(0)=(0,0)&lt;/equation&gt; 。因此 &lt;equation&gt;|\mathbb{Q}|\leq|\mathbb{Z}\times\mathbb{Z}|=|\mathbb{Z}|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是 &lt;equation&gt;|\mathbb{Q}|=|\mathbb{Z}|&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;(4)&lt;/b&gt; 下面暂别自然数、整数、有理数，而先来回答“开区间 &lt;equation&gt;(0, 1)&lt;/equation&gt; 与闭区间 &lt;equation&gt;[0, 1]&lt;/equation&gt; 是否等势？”&lt;/p&gt;&lt;p&gt;答案是&lt;b&gt;肯定&lt;/b&gt;的。主要是处理端点0、1的对应，选择一个无限序列 &lt;equation&gt;0,1,\frac{1}{2},\frac{1}{2^2},\frac{1}{2^3},\frac{1}{2^4},...&lt;/equation&gt; ，建立对应关系：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f622eb5729a7b9a05bda888c42225aec_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;596&quot; data-rawheight=&quot;318&quot;&gt;&lt;p&gt;其他的数对应到自己。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;(5) &lt;/b&gt;&quot;单位长度的线段上的点和单位大小的正方形中的点哪个多？&quot;&lt;/p&gt;&lt;p&gt;下面证明开区间 &lt;equation&gt;(0, 1)&lt;/equation&gt; 与 &lt;equation&gt;(0, 1)\times(0, 1)&lt;/equation&gt; 是等势的。&lt;/p&gt;&lt;p&gt;将每一个实数 &lt;equation&gt;x\in(0, 1)&lt;/equation&gt; 表示成无限小数形式 &lt;equation&gt;x=0.x_1x_2…x_i…&lt;/equation&gt; （例如0.5可表示成0.4999……，0.781可表示为0.780999……）。&lt;/p&gt;&lt;p&gt;于是可以建立 &lt;equation&gt;(0, 1)&lt;/equation&gt; 与 &lt;equation&gt;(0, 1)\times(0, 1)&lt;/equation&gt; 之间的双射： &lt;equation&gt;f(0.x_1x_2x_3x_4x_5x_6x_7x_8...)=(0.x_1x_3x_5x_7...,0.x_2x_4x_6x_8...)&lt;/equation&gt; ，因此 &lt;equation&gt;(0, 1)&lt;/equation&gt; 与 &lt;equation&gt;(0, 1)\times(0, 1)&lt;/equation&gt; 等势。&lt;/p&gt;&lt;p&gt;双射示意图：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e355698dbc6b44a438e00025ea8b5f1b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;629&quot; data-rawheight=&quot;206&quot;&gt;&lt;p&gt;&lt;b&gt;(6)&lt;/b&gt; 实数集与复数集是等势的。&lt;/p&gt;&lt;p&gt;由 &lt;equation&gt;\mathbb{R}\approx(0,1)&lt;/equation&gt; 易证明 &lt;equation&gt;\mathbb{R}\times\mathbb{R}\approx(0,1)\times(0,1)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;于是由 &lt;equation&gt;\mathbb{C}\approx\mathbb{R}\times\mathbb{R}&lt;/equation&gt; （复平面）、 &lt;equation&gt;\mathbb{R}\times\mathbb{R}\approx(0,1)\times(0,1)&lt;/equation&gt; 、 &lt;equation&gt;(0,1)\times(0,1)\approx(0,1) &lt;/equation&gt; 、 &lt;equation&gt;\mathbb{R}\approx(0,1)&lt;/equation&gt; 即得 &lt;equation&gt;\mathbb{C}\approx\mathbb{R}&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;最后遗留的问题是：&lt;/p&gt;&lt;p&gt;&lt;b&gt;1&lt;/b&gt;  自然数（整数、有理数）和实数哪个多？&lt;/p&gt;&lt;p&gt;&lt;b&gt;2&lt;/b&gt;  什么样的集合包含的元素“最多”？&lt;/p&gt;&lt;p&gt;将在下一篇文章中讨论。&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-02-28-33900428</guid>
<pubDate>Wed, 28 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>从一道概率题到“一一对应”——集合的势（一）</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-02-21-33770583.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33770583&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e3af4aadfb7f06c5aeab58a5c49db068_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;这是我的一位美女学生问我的一个问题（美女！不是“&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33418457&quot;&gt;胖三金&lt;/a&gt;”）：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-99a73e2475d31cc94ab2deb9e57440fe_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;1080&quot; data-rawheight=&quot;1075&quot;&gt;&lt;p&gt;我提出了问题&lt;a href=&quot;https://www.zhihu.com/question/266749358&quot;&gt;一道几何概率题？&lt;/a&gt;感谢&lt;a href=&quot;https://www.zhihu.com/people/zhangyi_1231&quot;&gt;Zhangyi&lt;/a&gt;介绍的视频以及&lt;a href=&quot;https://www.zhihu.com/people/yuan-ke-9-62&quot;&gt;keghost&lt;/a&gt;给出的回答！&lt;/p&gt;&lt;p&gt;对于这个问题，我自己有一个想法，就是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;考虑包含圆心的三角形 &lt;equation&gt;\triangle ABC&lt;/equation&gt; ；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-88320c6f307c212faedb55c717f52108_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;796&quot; data-rawheight=&quot;781&quot;&gt;&lt;ul&gt;&lt;li&gt;分别记 &lt;equation&gt;A,B,C&lt;/equation&gt; 的对径点为 &lt;equation&gt;D,E,F &lt;/equation&gt; ；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-1ea9725938dfe29b90fb9ab1dfefe47c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;851&quot; data-rawheight=&quot;870&quot;&gt;&lt;ul&gt;&lt;li&gt;于是又形成了3个三角形 &lt;equation&gt;\triangle ABF,\triangle BCD,\triangle ACE&lt;/equation&gt; ；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-a6521546b1ecfa75b00e9e3c4085ef6f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;851&quot; data-rawheight=&quot;870&quot;&gt;&lt;ul&gt;&lt;li&gt;而3个三角形 &lt;equation&gt;\triangle ABF,\triangle BCD,\triangle ACE&lt;/equation&gt; 都是不包含圆心的；&lt;/li&gt;&lt;li&gt;因此&lt;b&gt;每1个包含圆心的圆内接三角形都伴随着3个不包含圆心的圆内接三角形&lt;/b&gt;，再如下图所示：&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e08eee8132e1ff9810b0edd42cd81966_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;small&quot; data-rawwidth=&quot;851&quot; data-rawheight=&quot;691&quot;&gt;&lt;ul&gt;&lt;li&gt;另一方面，给出一个不包含圆心的圆内接三角形 &lt;equation&gt;\triangle ABF&lt;/equation&gt; ，就可以构造出包含圆心的圆内接三角形 &lt;equation&gt;\triangle ABC&lt;/equation&gt; ；&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4b269cb88072389c4e249914826986e9_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;2720&quot; data-rawheight=&quot;692&quot;&gt;&lt;ul&gt;&lt;li&gt;因此可以将圆内接三角形进行&lt;b&gt;划分&lt;/b&gt;（就是分成“不重不漏”的若干组），每个&lt;b&gt;划分块&lt;/b&gt;（就是一组）包含1个包含圆心的圆内接三角形和它伴随的3个不包含圆心的圆内接三角形。之后每次随机选择的圆内接三角形一定在某一个划分块中，而在该划分块中选中包含圆心者的概率就是&lt;b&gt;1/4&lt;/b&gt;。&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;上面的方法的核心就是“对应”，这里是1对3。（虽然我不敢说我的答案是正确的——&lt;a href=&quot;https://zhuanlan.zhihu.com/p/31144203&quot;&gt;贝特朗悖论&lt;/a&gt;已经让我不相信概率了）&lt;/p&gt;&lt;p&gt;而“&lt;b&gt;一一对应&lt;/b&gt; ”具有非常的重要性！&lt;/p&gt;&lt;hr&gt;&lt;p&gt;对于原始人而言，他们先学会比较多少，后学会计数制。&lt;/p&gt;&lt;p&gt;例如一堆桃子和一堆苹果，要比较哪堆儿多。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-3efcd32f905214bc798bbb26aa972ec6_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;926&quot; data-rawheight=&quot;372&quot;&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;他们并不是计数后比较，而是“&lt;b&gt;一一对应&lt;/b&gt; ”，之后看剩下桃子（说明桃子多）、剩下苹果（说明苹果多）还是都不剩（说明一样多）。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-db5baaada3d8622ab274053f4b7007bb_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1038&quot; data-rawheight=&quot;638&quot;&gt;&lt;hr&gt;&lt;p&gt;似乎一切都很顺利而美好，但——&lt;/p&gt;&lt;p&gt;&lt;b&gt;不正常的事情&lt;/b&gt;出现在1638年，伽利略（Galileo Galilei，1564-1642）在《关于两种新科学的对话》中借三个中世纪的学者的对话指出：对于每个自然数，都有且只有一个平方数与之对应。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-a94832d7fd80591a8a9de0a03e2abc97_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;252&quot; data-rawheight=&quot;506&quot;&gt;&lt;p&gt;于是就产生了一个问题：&lt;b&gt;自然数和自然数的平方哪个多？&lt;/b&gt;或者更一般地讲：&lt;b&gt;部分和全体哪个多？&lt;/b&gt;当时它不仅困惑了伽利略，也使许多数学家束手无策。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;1874-1894年间，康托（Cantor，1845-1918）圆满地解决了这个问题，其基本思想是“&lt;b&gt;一一对应&lt;/b&gt;”。&lt;/p&gt;&lt;p&gt;&lt;b&gt;定义&lt;/b&gt;  假设 &lt;equation&gt;A&lt;/equation&gt; 和 &lt;equation&gt;B&lt;/equation&gt; 是两个集合，如果存在 &lt;equation&gt;A&lt;/equation&gt; 到 &lt;equation&gt;B&lt;/equation&gt; 的双射，则称集合 &lt;equation&gt;A&lt;/equation&gt; 与集合 &lt;equation&gt;B&lt;/equation&gt; 是&lt;b&gt;等势的&lt;/b&gt;，记作 &lt;equation&gt;A\approx B&lt;/equation&gt; ；或称 &lt;equation&gt;A&lt;/equation&gt; 和 &lt;equation&gt;B&lt;/equation&gt; 的&lt;b&gt;基数相等&lt;/b&gt;，记作 &lt;equation&gt;|A|=|B|&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;【例】集合 &lt;equation&gt;A=\{张良, 韩信, 萧何\}&lt;/equation&gt; 和 &lt;equation&gt;B=\{李白, 杜甫, 白居易\}&lt;/equation&gt; 是等势的。&lt;/p&gt;&lt;p&gt;【例】&lt;b&gt;伽利略的问题的回答：&lt;/b&gt;自然数集 &lt;equation&gt;\{0, 1, 2, 3, 4, …\}&lt;/equation&gt; 和集合 &lt;equation&gt;\{0, 1, 4, 9, 16, …\}&lt;/equation&gt; 是等势的，双射函数为 &lt;equation&gt;f(x)=x^2&lt;/equation&gt; 。这也说明有时候部分和全体“一样大”。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;事实上——&lt;/p&gt;&lt;p&gt;对于有限集合，有如下结果：&lt;b&gt;有限集合不能与其任意真子集等势&lt;/b&gt;。&lt;/p&gt;&lt;p&gt;而对于无限集合，可以证明&lt;b&gt;任意无限集必与其某个真子集等势。&lt;/b&gt;这给出了无限集的本质，经常用来作为无限集合的定义。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;问题：&lt;/b&gt;不同长短的线段，那个上面的点多?&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-a1843bf870a14113c735ee0e4baf1751_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;686&quot; data-rawheight=&quot;286&quot;&gt;&lt;p&gt;&lt;b&gt;回答：&lt;/b&gt;蓝色射线（们）建立了红色线段和绿色线段上的点之间的一一对应（粉色点和翠绿色点），因此不同长短的线段上点“同样多”（等势）。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e0501e3d1b9c79bf7c2b64b67210708d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;686&quot; data-rawheight=&quot;328&quot;&gt;&lt;p&gt;这也表明实轴上所有闭区间都等势。&lt;/p&gt;&lt;p&gt;形式化地讲，对于任意的实数 &lt;equation&gt;a, b&lt;/equation&gt; ， &lt;equation&gt;a&amp;lt;b&lt;/equation&gt; ，闭区间 &lt;equation&gt;[0, 1]&lt;/equation&gt; 与 &lt;equation&gt;[a, b]&lt;/equation&gt; 是等势的。双射函数为 &lt;equation&gt;f(x)=(b-a)x+a&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;类似地可以证明实轴上所有开区间都等势。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;问题：&lt;/b&gt;空心线段和直线，哪个上面的点多？&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-890f0a81fb6cadb4db7a4d5b675811e9_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;853&quot; data-rawheight=&quot;265&quot;&gt;&lt;p&gt;&lt;b&gt;回答：&lt;/b&gt;开区间(0, 1)与实数集 &lt;equation&gt;\mathbb{R}&lt;/equation&gt; 是等势的，双射为 &lt;equation&gt;f(x)=\tan\frac{(2x-1)\pi}{2}&lt;/equation&gt; 。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e1757bcac23c3a6f68cc3a5a1116e7f3_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;332&quot; data-rawheight=&quot;620&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;问题：&lt;/b&gt;不一样大的圆形，哪个上面的点多?&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3c0604c32edb0ba006f5ab13ef286d25_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;548&quot; data-rawheight=&quot;254&quot;&gt;&lt;p&gt;&lt;b&gt;回答：&lt;/b&gt;点“同样多”（等势）：&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c57b7a61760d89406fd94ad9d58c3a24_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;254&quot; data-rawheight=&quot;253&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;b&gt;问题：&lt;/b&gt;正方形和圆形，哪个上面的点多?&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-619da27cef9a7673452a0b7051bc588c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;556&quot; data-rawheight=&quot;292&quot;&gt;&lt;p&gt;&lt;b&gt;回答：&lt;/b&gt;点“同样多”（等势），由上一个问题，不妨假设圆可以放入正方形中：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-255739487e3275f758b660e9766a217d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;299&quot; data-rawheight=&quot;292&quot;&gt;&lt;hr&gt;&lt;p&gt;还有很多遗留的问题，将在下两讲中讨论：&lt;/p&gt;&lt;p&gt;1  开区间 &lt;equation&gt;(0, 1)&lt;/equation&gt; 与闭区间 &lt;equation&gt;[0, 1]&lt;/equation&gt; 是否等势？&lt;/p&gt;&lt;p&gt;2  单位长度的线段上的点和单位大小的正方形中的点哪个多？&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-fb584d7be96eb78e8f7683854c67e686_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1148&quot; data-rawheight=&quot;543&quot;&gt;&lt;p&gt;3  自然数和有理数哪个多？&lt;/p&gt;&lt;p&gt;4  实数和复数哪个多？&lt;/p&gt;&lt;p&gt;5  自然数和实数哪个多？&lt;/p&gt;&lt;p&gt;6  什么样的集合包含的元素“最多”&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-02-21-33770583</guid>
<pubDate>Wed, 21 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>什么是爱情？ ——与“秘书问题”</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-02-14-32671131.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/32671131&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-33266122ab1c4b9ab7fc232cd9a94712_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;爱情不过是一种普通的玩意儿，一点也不稀奇。——中文歌曲《卡门》（&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33418457&quot;&gt;胖三金&lt;/a&gt;出教室）&lt;/p&gt;&lt;a href=&quot;http://bd.kuwo.cn/yinyue/7599843?from=baidu&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot;&gt;卡门-aMEI-单曲-酷我音乐-好音质用酷我&lt;/a&gt;&lt;a href=&quot;https://y.qq.com/n/yqq/song/000CwHH21IjRtq.html?ADTAG=baiduald&amp;amp;play=1&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-31a543940f43fcb8d26c8d2b3a7ad84a&quot; data-image-width=&quot;300&quot; data-image-height=&quot;300&quot; data-image-size=&quot;ipico&quot;&gt;卡门-罗文 - QQ音乐-千万正版音乐海量无损曲库新歌热歌天天畅听的高品质音乐平台！&lt;/a&gt;&lt;a href=&quot;http://www.xiami.com/song/153542&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-3bf474af07ccf6020a2b134ddac312b8&quot; data-image-width=&quot;1066&quot; data-image-height=&quot;1066&quot; data-image-size=&quot;ipico&quot;&gt;http://www.xiami.com/song/153542&lt;/a&gt;&lt;a href=&quot;http://www.xiami.com/song/153542&quot;&gt;卡门-徐小凤&lt;/a&gt;&lt;a href=&quot;http://www.xiami.com/song/153542&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-3bf474af07ccf6020a2b134ddac312b8&quot; data-image-width=&quot;1066&quot; data-image-height=&quot;1066&quot; data-image-size=&quot;ipico&quot;&gt;卡门-徐小凤&lt;/a&gt;&lt;p&gt;虽然我第一次听到&lt;b&gt;中文&lt;/b&gt;的它是在这里——&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8b96925bbdf3274230a771631245a417_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;280&quot; data-rawheight=&quot;420&quot;&gt;&lt;p&gt;然而它其实是：爱情像一只自由的小鸟（L&#39;amour est un oiseau rebelle）——比才歌剧《卡门(Carmen)》&lt;/p&gt;&lt;a href=&quot;http://www.iqiyi.com/w_19rr0cotfh.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-8d4d0e706eb99cfffdf6e4f6afdecb5e&quot; data-image-width=&quot;120&quot; data-image-height=&quot;160&quot; data-image-size=&quot;120x160&quot;&gt;歌剧《卡门》选段—爱情像一只自由的小鸟&lt;/a&gt;&lt;hr&gt;&lt;p&gt;有一天，柏拉图问苏格拉底：&lt;b&gt;什么是爱情&lt;/b&gt;？ &lt;/p&gt;&lt;p&gt;苏格拉底说：你穿过这片稻田，去摘一株最大最金黄的麦穗回来，但是有个规则——你不能走回头路，而且你只能摘一次。 &lt;/p&gt;&lt;p&gt;柏拉图去了，过了很久，他空手回来了。 &lt;/p&gt;&lt;p&gt;柏拉图说：当我走在田间的时候，曾看到过几株特别大特别灿烂的麦穗，可我总想着前面也许会有更大更好的，因为只可以摘一次，于是就没有摘；但当我最后走到尽头时，却才发觉手上一串麦穗也没有！…… &lt;/p&gt;&lt;p&gt;苏格拉底意味深长地说：这，就是&lt;b&gt;爱情&lt;/b&gt;。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;这就是&lt;b&gt;爱&lt;/b&gt; 说也说不清楚。&lt;/p&gt;&lt;a href=&quot;http://music.163.com/#/song?id=109517&amp;amp;autoplay=true&amp;amp;market=baiduhd&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-12f933fe314ef04e769e226cd806529c&quot; data-image-width=&quot;360&quot; data-image-height=&quot;360&quot; data-image-size=&quot;ipico&quot;&gt;糊涂的爱（电视剧《过把瘾》主题曲） - 刘欢 - 单曲 - 网易云音乐&lt;/a&gt;&lt;hr&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;而这个故事则让老人家我想起了“&lt;b&gt;秘书问题&lt;/b&gt;”：某公司希望聘请1名秘书，共有 &lt;equation&gt;n&lt;/equation&gt; 人来面试，他们自觉地排成一列。假定所有应聘者的“岗位适合度”（“质素”？matching accuracy？） 都不相同。&lt;/p&gt;&lt;p&gt;面试规则是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;每次面试1名应聘者；&lt;/li&gt;&lt;li&gt;面试时该应聘者回答问题后过后公司便要即时决定是否聘用他，如果当时决定不聘用，之后也不能再考虑应聘者；如果决定聘用，之后的应聘者就不再需要面试；&lt;/li&gt;&lt;li&gt;面试时可以将当前应聘者与之前面试过的每个人进行比较。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;假定策略是：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;取定某整数 &lt;equation&gt;k&lt;/equation&gt; （ &lt;equation&gt;1\leq k&amp;lt;n&lt;/equation&gt; ）；&lt;/li&gt;&lt;li&gt;对于前 &lt;equation&gt;k&lt;/equation&gt; 个应聘者，只面试和记住他们的“质素”，但是一个&lt;b&gt;都不录用&lt;/b&gt;；&lt;/li&gt;&lt;li&gt;从第 &lt;equation&gt;k+1&lt;/equation&gt; 到第 &lt;equation&gt;n-1&lt;/equation&gt; 名应聘者，如果发现了（第一个）比前 &lt;equation&gt;k&lt;/equation&gt; 个都好的应聘者，则录用他，招聘过程结束；&lt;/li&gt;&lt;li&gt;如果已经面试到了第 &lt;equation&gt;n&lt;/equation&gt; 名应聘者，无论如何都只好录用他。&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;p&gt;例如 &lt;equation&gt;n=4&lt;/equation&gt; ， &lt;equation&gt;k=2&lt;/equation&gt; 时：&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-a457b55c6735b2abc5ac2d1d15a45bdc_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;825&quot; data-rawheight=&quot;307&quot;&gt;&lt;p&gt;浅蓝色的是被直接“滤掉”的，橙色的是最终获得录用的。&lt;/p&gt;&lt;p&gt;24种情况中，有4种情况下选择了1（最差的）、有4种情况下选择了2、有6种情况下选择了3、有10种情况下选择了4（最优的）。&lt;/p&gt;&lt;p&gt;例如 &lt;equation&gt;n=4&lt;/equation&gt; ， &lt;equation&gt;k=1&lt;/equation&gt; 时：&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9bf0b5b864be1a0028ea9900868ed592_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;825&quot; data-rawheight=&quot;307&quot;&gt;&lt;p&gt;24种情况中，有2种情况下选择了1、有4种情况下选择了2、有7种情况下选择了3、有11种情况下选择了4。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;计算最终录用的是“质素”排名 &lt;equation&gt;m&lt;/equation&gt; 的应聘者的情况和概率：&lt;/p&gt;&lt;p&gt;&lt;b&gt;情况1：&lt;/b&gt; &lt;equation&gt;k\geq m&lt;/equation&gt;   （例如 &lt;equation&gt;m=3&lt;/equation&gt; ， &lt;equation&gt;k=5&lt;/equation&gt; ）&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e1a2e340af709d16fd8640b4d7407f53_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;372&quot; data-rawheight=&quot;67&quot;&gt;&lt;p&gt;此时&lt;/p&gt;&lt;ul&gt;&lt;li&gt;前 &lt;equation&gt;k&lt;/equation&gt; 名应聘者中，&lt;b&gt;一定&lt;/b&gt;有排名高于 &lt;equation&gt;m&lt;/equation&gt; 的；&lt;/li&gt;&lt;li&gt;排名 &lt;equation&gt;m&lt;/equation&gt; 的应聘者&lt;b&gt;一定&lt;/b&gt;是最后一名应聘者（位置定了）；&lt;/li&gt;&lt;li&gt;排名最高的人&lt;b&gt;一定&lt;/b&gt;在前 &lt;equation&gt;k&lt;/equation&gt; 名应聘者中（位置也定了，而且他就是前 &lt;equation&gt;k&lt;/equation&gt; 名应聘者中排名高于 &lt;equation&gt;m&lt;/equation&gt; 的人）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;于是可能的排列数为 &lt;equation&gt;k\times (n-2)!&lt;/equation&gt; ，其中排名最高的人的位置有 &lt;equation&gt;k&lt;/equation&gt; 种可能，排名最高的人和排名 &lt;equation&gt;m&lt;/equation&gt; 的人之外的人有 &lt;equation&gt; (n-2)!&lt;/equation&gt; 种排列可能。&lt;/p&gt;&lt;p&gt;这种情况的概率为： &lt;equation&gt;p(n,k:m)=\frac{k\times (n-2)!}{n!}=\frac{k}{n(n-1)}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;情况2：&lt;/b&gt; &lt;equation&gt;n&amp;gt;m&amp;gt;k&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;此时又分两种情况&lt;/p&gt;&lt;p&gt;① 前 &lt;equation&gt;k&lt;/equation&gt; 个中有比 &lt;equation&gt;m&lt;/equation&gt; 大的。如此必然排名 &lt;equation&gt;m&lt;/equation&gt; 的应聘者一定是最后1名应聘者、且排名最高的人一定在前 &lt;equation&gt;k&lt;/equation&gt; 名应聘者中，此时类似于情况1，排列数为 &lt;equation&gt;k\times (n-2)!&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;② 前 &lt;equation&gt;k&lt;/equation&gt; 名应聘者排名均小于 &lt;equation&gt;m&lt;/equation&gt; 。设 &lt;equation&gt;i=\max\{前k个值\}&lt;/equation&gt; （ &lt;equation&gt;i&lt;/equation&gt; 的取值范围是 &lt;equation&gt;k\sim m-1&lt;/equation&gt; ），那么 &lt;equation&gt;m&lt;/equation&gt; 在 &lt;equation&gt;i+1\sim n&lt;/equation&gt; 中一定是排在最前面的。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-7cd4cb5ed29300599254afcea10a9cfa_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;659&quot; data-rawheight=&quot;160&quot;&gt;&lt;p&gt;于是可能的排列数为 &lt;equation&gt;\sum_{i=k}^{m-1}{\left[ C_{n-k}^{n-i}\times\left( n-i-1 \right)! \right]\times\left[ C_{k}^{1} \right]\times\left( i-1 \right)!}&lt;/equation&gt; ，其中 &lt;equation&gt; C_{n-k}^{n-i}&lt;/equation&gt; 表示在后面的 &lt;equation&gt;n-k&lt;/equation&gt; 个位置中选择 &lt;equation&gt;n-i&lt;/equation&gt; 个放置 &lt;equation&gt;i+1\sim n&lt;/equation&gt; ， &lt;equation&gt;( n-i-1 )! &lt;/equation&gt; 表示 &lt;equation&gt;m&lt;/equation&gt; 在 &lt;equation&gt;i+1\sim n&lt;/equation&gt; 中一定是排在最前面而后面的排列随意， &lt;equation&gt; C_{k}^{1}&lt;/equation&gt; 表示 &lt;equation&gt;i&lt;/equation&gt; 在前 &lt;equation&gt;k&lt;/equation&gt; 个中的位置，余下的 &lt;equation&gt;i-1&lt;/equation&gt; 个位置随意放置 &lt;equation&gt;1\sim i-1&lt;/equation&gt; 即可。&lt;/p&gt;&lt;p&gt;经整理得到情况2的总概率为： &lt;equation&gt;p(n,k:m)=\frac{1}{C_n^k}\cdot\sum_{i=k}^{m-1}\frac{1}{n-i}\cdot C_{i-1} ^{k-1} +\frac{k}{n(n-1)}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;情况3：&lt;/b&gt; &lt;equation&gt;m=n&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;此时前 &lt;equation&gt;k&lt;/equation&gt; 名应聘者中不包含排名最高的人，余者类似情况2的②。&lt;/p&gt;&lt;p&gt;可能的排列数为 &lt;equation&gt;\sum_{i=k}^{n-1} C_{n-k}^{n-i}\times\left( n-i-1 \right)! \times C_{k}^{1} \times\left( i-1 \right)!&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;情况3的概率为： &lt;equation&gt;p(n,k:n)=\frac{1}{C_n^k}\cdot \sum_{i=k}^{n-1}\frac{1}{n-i}\cdot C_{i-1} ^{k-1} &lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;另一种计算方法：&lt;/p&gt;&lt;p&gt;&lt;b&gt;情况3：&lt;/b&gt; &lt;equation&gt;m=n&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;此时考虑“ &lt;equation&gt;n&lt;/equation&gt; 号人选”所在的位置 &lt;equation&gt;i+1&lt;/equation&gt; 。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-005b077692d42594ccce8b8ab1bdbf46_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;652&quot; data-rawheight=&quot;273&quot;&gt;&lt;p&gt;前 &lt;equation&gt;i&lt;/equation&gt; 个中最优者必定在前 &lt;equation&gt;k&lt;/equation&gt; 个中。&lt;/p&gt;&lt;p&gt;先选前 &lt;equation&gt;i&lt;/equation&gt; 个数，有 &lt;equation&gt;C_{n-1}^{i}&lt;/equation&gt; 种选择，放置其中的最大数有 &lt;equation&gt;k&lt;/equation&gt; 种方法，剩下的 &lt;equation&gt;i-1&lt;/equation&gt; 个数有 &lt;equation&gt;(i-1)!&lt;/equation&gt; 种放置方法，后面的 &lt;equation&gt;n-1-i&lt;/equation&gt; 个数的放置方法数为 &lt;equation&gt;(n-1-i)!&lt;/equation&gt; 。此时的排列数为 &lt;equation&gt;C_{n-1}^{i}\times k\times(i-1)!\times(n-1-i)!=(n-1)!\frac{k}{i}&lt;/equation&gt; ，所以总的排列数为 &lt;equation&gt;(n-1)!\sum_{i=k}^{n-1}{\frac{k}{i}}&lt;/equation&gt; 。情况3的概率为： &lt;equation&gt;p(n,k:n)=\frac{k}{n}\cdot\sum_{i=k}^{n-1}\frac{1}{i}&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;&lt;b&gt;情况2：&lt;/b&gt; &lt;equation&gt;n&amp;gt;m&amp;gt;k&lt;/equation&gt; &lt;/p&gt;&lt;p&gt;类似于情况3可得到 &lt;equation&gt;p(n,k:m)=\frac{1}{C_{n-1}^{m-1}}\cdot\frac{k}{n}\cdot\sum_{i=k}^{m-1} C_{n-1-i} ^{m-1-i}\cdot \frac{1}{i} +\frac{k}{n(n-1)}&lt;/equation&gt; 。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;假设最终聘用了“质素”排名 &lt;equation&gt;m&lt;/equation&gt; 的应聘者这种情况的收益是 &lt;equation&gt;f(n,k:m)&lt;/equation&gt; 。&lt;/p&gt;&lt;p&gt;那么上述方案的总收益（带权期望值）就是 &lt;equation&gt;\sum_{m=1}^{n}{f(n,k:m)\cdot p(n,k:m)}&lt;/equation&gt; 。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;当 &lt;equation&gt;f(n,k:m)\equiv 1&lt;/equation&gt; 时（选谁都行，那干嘛不就直接选第一个人就好？！），无论采用哪个概率表达式都可以计算得到 &lt;equation&gt;\sum_{m=1}^{n}{f(n,k:m)\cdot p(n,k:m)}=1&lt;/equation&gt; ——这其实就是本人对概率表达式的一个验算过程。&lt;/li&gt;&lt;li&gt;当 &lt;equation&gt;f(n,k:m)\equiv m&lt;/equation&gt; 时，无论采用哪个概率表达式都可以计算得到 &lt;equation&gt;\sum_{m=1}^{n}{f(n,k:m)\cdot p(n,k:m)}=\frac{n-k}{2}\cdot\left( \frac{n+1}{n}+\frac{k}{k+1} \right)+\frac{k}{2}&lt;/equation&gt; ——求一阶导数、二阶导数后得到：当 &lt;equation&gt;\sqrt{n}-1&lt;/equation&gt; 时，和式取得最大值 &lt;equation&gt;\frac{1+n}{2n}\cdot\left( 1-2\sqrt{n}+2n\right)&lt;/equation&gt; 。&lt;/li&gt;&lt;li&gt;&lt;equation&gt;p(n,k:n)=\frac{k}{n}\cdot\sum_{i=k}^{n-1}\frac{1}{i}\approx\frac{k}{n}\left( \ln (n-1)-\ln(k-1) \right)\approx\frac{k}{n}\ln\frac{n}{k} &lt;/equation&gt; ， &lt;equation&gt;p(n,k:n)&#39;\approx\frac{1}{n}\cdot \left( \ln \frac{n}{k}+k\cdot\left( -\frac{1}{k} \right) \right) &lt;/equation&gt; ，当 &lt;equation&gt;k=\frac{n}{e}&lt;/equation&gt; 时，取得极值 &lt;equation&gt;\frac{1}{e}\approx0.3679&lt;/equation&gt; 。&lt;/li&gt;&lt;li&gt;所以！！！“&lt;b&gt;希望选到的人的平均质素最好&lt;/b&gt;”和“&lt;b&gt;希望选到质素最好的人的概率最大&lt;/b&gt;”是&lt;b&gt;不同的问题&lt;/b&gt;！！！对应的值 &lt;equation&gt;k&lt;/equation&gt; 也不同。&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-201af526f719e080e8523e5ebf00bdae_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;945&quot; data-rawheight=&quot;641&quot;&gt;&lt;hr&gt;&lt;p&gt;这是我的计算的草稿，我希望我是饶了弯路——&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d9a9578263fb053ff1eb07ccabf4c834_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;1264&quot; data-rawheight=&quot;480&quot;&gt;&lt;hr&gt;&lt;p&gt;最后回到“&lt;b&gt;爱情&lt;/b&gt;”的问题，也许这就是一些婚恋节目中在“&lt;i&gt;你能让我在宝马里面哭么&lt;/i&gt;”之外，还问及“&lt;i&gt;你有几次恋爱经历&lt;/i&gt;”的理论依据吧（固定 &lt;equation&gt;n&lt;/equation&gt;考虑 &lt;equation&gt;k&lt;/equation&gt; ）……&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-02-14-32671131</guid>
<pubDate>Wed, 14 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>“一旋拧……”——零旋儿呢？</title>
<link>https://henix.github.io/feeds/zhuanlan.c_124392554/2018-02-10-33686832.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33686832&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8f356f5ce59e7092eaa5fd2123489f86_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;题图是我女儿苗苗大人教我画的小羊，特别跟我强调：“头发要画出毛茸茸的感觉”。&lt;/p&gt;&lt;p&gt;这就使我想起了小时候听过的“&lt;i&gt;一旋拧(ning4)，俩旋横(heng4)，仨旋打架不要命&lt;/i&gt;”——可能全国各地都有不同版本的类似语言吧。我记得那时候我就问过我妈妈，为什么&lt;b&gt;从1开始而不说没有“旋儿”&lt;/b&gt;的人呢？——妈妈当然没有能够给我一个合理的解答。&lt;/p&gt;&lt;hr&gt;&lt;p&gt;现在我们只考虑头发充分长、且自然形成的情况。&lt;/p&gt;&lt;ul&gt;&lt;li&gt;“头发充分长”是自然合理的，几乎没头发或者干脆没头发，怎么“旋儿”的起来？例如下图的两位：&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b6bcae07091966ad5474632be7397deb_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;554&quot; data-rawheight=&quot;251&quot;&gt;&lt;ul&gt;&lt;li&gt;例如下图右边这位虽然头发足够长，但是不算“&lt;b&gt;自然&lt;/b&gt;”形成的，所以没有“&lt;b&gt;旋儿&lt;/b&gt;”；而左边那位……&lt;/li&gt;&lt;/ul&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e787b75535732a80df61730fd1967cf4_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;545&quot; data-rawheight=&quot;814&quot;&gt;&lt;blockquote&gt;这里忍不住插几句话，我认为《龙珠》的最完美结局就是——&lt;/blockquote&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b23b2583f9ee3be9999835c7aa0ca96d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;786&quot; data-rawheight=&quot;831&quot;&gt;&lt;blockquote&gt;人生就是在&lt;b&gt;和平年代&lt;/b&gt;的不断挑战、成长和超越。《超》的胡打一锅粥我真是简直看不下去。&lt;br&gt;孙悟空/卡卡罗特、短笛、悟饭那就是老夫的青春啊！！！然而就像&lt;b&gt;天下第一武道会主持人&lt;/b&gt;一样，老夫也老了……&lt;/blockquote&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-70aaf5ecf1074edb0b4d444a97718cce_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;960&quot; data-rawheight=&quot;1158&quot;&gt;&lt;hr&gt;&lt;p&gt;好了，回到最初话题，头发充分长、且自然形成的情况下，为什么不会没有“旋儿”？&lt;/p&gt;&lt;p&gt;答案就是：庞加莱（Jules Henri Poincaré，1854 – 1912）提出的&lt;b&gt;毛球定理（hairy ball theorem/hedgehog theorem）。&lt;/b&gt;1912年为布劳威尔所证明。（关于布劳威尔不动点定理，可参见本人&lt;a href=&quot;https://zhuanlan.zhihu.com/p/29658997&quot;&gt;地图上的“重合点”&lt;/a&gt;一文）。&lt;/p&gt;&lt;p&gt;毛球定理阐明：偶数维单位球上&lt;b&gt;不存在&lt;/b&gt;连续且处处不为零的切向量场。&lt;/p&gt;&lt;p&gt;而它的一个通俗解释就是“不可能将一个毛球儿的毛儿都梳平而不产生任何旋儿”、“你永远不可能完全梳顺一个毛球儿”，或者“每头奶牛都会有一个旋儿的”。（2维情况）&lt;/p&gt;&lt;p&gt;于是，在地球上，任何时刻都一定有一个风速为 0 的地方。“任尔东西南北风，我自岿然不动。”&lt;/p&gt;&lt;p&gt;咬定青山不放松，立根原在破岩中。千磨万击还坚韧，任尔东西南北风。——郑燮《题竹石》&lt;/p&gt;&lt;blockquote&gt;山下旌旗在望，山头鼓角相闻。敌军围困万千重，我自岿然不动。早已森严壁垒，更加众志成城。黄洋界上炮声隆，报道敌军宵遁。——毛泽东《西江月·井冈山》 &lt;/blockquote&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>Bat特白</author>
<guid isPermaLink="false">2018-02-10-33686832</guid>
<pubDate>Sat, 10 Feb 2018 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
